var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/directives/CheckboxControlValueAccessorDirective.html",[0,0.094,1,1.742]],["body/directives/CheckboxControlValueAccessorDirective.html",[0,0.152,1,2.811,2,0.459,3,0.401,4,0.346,5,4.845,6,1.238,7,0.604,8,1.29,9,1.159,10,1.887,11,1.069,12,0.954,13,4.144,14,1.402,15,4.489,16,0.293,17,0.681,18,0.82,19,2.05,20,2.05,21,2.05,22,2.05,23,2.529,24,2.529,25,2.824,26,0.724,27,1.922,28,2.203,29,2.175,30,0.773,31,3.424,32,0.558,33,0.038,34,0.558,35,0.392,36,0.646,37,1.86,38,2.833,39,1.922,40,1.86,41,2.833,42,2.52,43,2.444,44,2.05,45,3.424,46,2.203,47,0.712,48,1.124,49,2.05,50,3.424,51,2.05,52,1.64,53,3.424,54,2.05,55,2.05,56,2.444,57,0.526,58,1.691,59,1.174,60,1.86,61,0.584,62,0.385,63,0.724,64,1.419,65,0.724,66,0.652,67,0.293,68,0.854,69,1.563,70,1.563,71,1.563,72,2.444,73,2.154,74,2.833,75,3.424,76,1.729,77,2.154,78,2.05,79,1.729,80,1.86,81,2.833,82,1.563,83,1.563,84,0.026,85,0.026]],["title/directives/ControlValueAccessorDirective.html",[0,0.094,86,1.742]],["body/directives/ControlValueAccessorDirective.html",[0,0.149,2,0.439,3,0.384,4,0.331,7,0.608,8,1.235,9,1.126,10,2.108,11,1.023,12,0.995,14,1.362,16,0.281,17,0.662,18,0.825,19,1.991,20,1.991,21,1.991,22,1.991,30,0.765,32,0.55,33,0.038,34,0.55,35,0.405,36,0.637,40,1.807,44,1.991,46,2.165,47,0.729,48,1.227,49,1.991,51,1.991,52,1.392,54,1.496,55,1.991,56,2.339,57,0.511,58,1.847,59,1.124,60,2.031,61,0.559,62,0.281,64,1.807,65,0.922,66,0.83,67,0.281,68,0.744,69,1.496,70,1.496,71,1.496,78,1.496,82,1.496,84,0.026,85,0.026,86,2.933,87,5.799,88,1.023,89,1.497,90,1.227,91,4.36,92,4.901,93,4.901,94,2.475,95,5.44,96,2.061,97,4.36,98,1.668,99,2.711,100,2.711,101,1.239,102,2.711,103,2.339,104,2.061,105,3.276,106,3.276,107,1.02,108,3.276,109,1.839,110,3.276,111,3.276]],["title/directives/DefaultControlValueAccessorDirective.html",[0,0.094,112,1.567]],["body/directives/DefaultControlValueAccessorDirective.html",[0,0.143,2,0.404,3,0.353,4,0.305,6,1.235,7,0.608,8,1.137,9,1.065,10,1.771,11,0.942,12,0.895,14,1.288,16,0.259,17,0.626,18,0.814,19,1.883,20,1.883,21,1.883,22,1.883,23,2.373,24,2.373,26,0.872,28,2.093,29,2.106,30,0.773,32,0.534,33,0.038,34,0.534,35,0.376,36,0.655,37,1.947,39,2.315,40,2.093,42,2.835,44,1.883,46,2.093,47,0.732,48,1.068,49,1.883,51,1.883,52,1.503,54,1.883,55,1.883,57,0.55,58,1.554,59,1.035,60,1.709,61,0.514,62,0.353,63,0.872,64,1.25,65,0.638,66,0.785,67,0.259,68,0.953,69,1.378,70,1.378,71,1.378,73,1.898,74,3.413,76,1.523,77,1.898,78,1.883,80,1.709,82,1.378,83,1.378,84,0.024,85,0.024,96,1.898,101,0.857,104,1.898,112,2.373,113,4.169,114,3.889,115,4.124,116,4.124,117,4.699,118,1.554,119,3.017,120,1.308,121,1.304,122,3.017,123,4.124,124,2.154,125,3.017,126,3.017,127,2.154,128,3.017,129,3.017,130,3.017,131,2.154,132,1.25,133,3.017,134,3.017,135,2.497,136,2.497,137,1.693,138,3.017,139,3.017,140,1.25,141,3.017,142,3.017,143,2.315,144,2.154,145,4.699,146,4.699,147,2.944,148,3.017,149,3.017,150,3.017,151,3.017,152,3.017,153,3.017,154,3.017,155,3.413]],["title/injectables/DefaultRouterAdapter.html",[132,1.286,156,2.215]],["body/injectables/DefaultRouterAdapter.html",[2,0.51,3,0.446,4,0.385,7,0.385,9,0.983,16,0.326,17,0.73,18,0.764,26,0.806,30,0.741,32,0.486,33,0.038,34,0.486,35,0.341,36,0.563,47,0.741,57,0.617,61,0.649,62,0.412,63,0.806,66,0.725,67,0.326,68,0.649,79,1.923,84,0.028,85,0.028,88,1.189,89,1.36,90,1.114,132,2.183,137,2.698,156,3.432,157,3.589,158,4.721,159,1.921,160,3.152,161,1.811,162,3.314,163,4.359,164,3.809,165,3.314,166,5.533,167,3.809,168,3.978,169,1.428,170,2.526,171,1.782,172,3.809,173,1.435,174,1.807,175,3.978,176,3.809,177,3.809,178,3.809,179,3.809,180,1.578,181,3.024,182,1.739,183,2.719,184,2.719,185,3.809,186,3.809,187,3.809,188,3.809,189,3.809,190,3.809,191,2.719]],["title/directives/MultiSelectControlValueAccessorDirective.html",[0,0.094,192,1.417]],["body/directives/MultiSelectControlValueAccessorDirective.html",[0,0.135,2,0.365,3,0.319,4,0.275,6,1.223,7,0.622,8,1.026,9,0.992,10,1.677,11,0.851,12,0.847,14,1.2,16,0.233,17,0.583,18,0.823,19,1.754,20,1.754,21,1.754,22,1.754,23,2.247,24,2.247,25,2.8,26,0.576,27,1.529,28,2.003,29,2.048,30,0.766,32,0.561,33,0.038,34,0.561,35,0.394,36,0.684,37,1.592,44,1.754,46,2.003,47,0.766,48,1.174,49,1.754,51,1.754,52,1.264,54,1.754,55,1.754,57,0.521,58,1.447,59,0.934,60,1.592,61,0.464,62,0.329,63,1.022,64,1.128,65,0.812,66,0.519,67,0.233,68,0.946,69,1.244,70,1.244,71,1.244,72,1.944,76,1.375,78,1.754,79,1.375,80,1.128,82,1.244,83,1.244,84,0.023,85,0.023,98,1.577,103,1.944,104,1.713,107,1.041,109,1.529,120,1.339,121,1.248,124,1.944,131,1.944,192,2.032,193,4.129,194,2.948,195,3.683,196,3.841,197,3.179,198,3.179,199,3.179,200,2.723,201,1.944,202,3.179,203,2.723,204,3.419,205,2.254,206,3.841,207,2.44,208,2.254,209,3.179,210,2.723,211,2.742,212,2.723,213,2.254,214,2.742,215,2.254,216,2.254,217,2.254,218,2.723,219,3.179,220,2.723,221,2.723,222,3.841,223,2.723,224,2.723,225,3.179,226,2.254,227,2.723,228,1.128,229,2.723,230,1.375,231,2.723,232,2.723,233,2.723,234,2.254,235,2.723,236,2.723,237,3.841,238,3.841,239,2.254,240,2.723,241,2.254,242,2.254,243,2.723,244,2.254,245,2.254]],["title/directives/MultiSelectOptionDirective.html",[0,0.094,207,1.567]],["body/directives/MultiSelectOptionDirective.html",[0,0.155,2,0.474,3,0.414,4,0.357,6,0.747,7,0.596,9,1.183,11,1.104,14,1.431,16,0.303,17,0.695,18,0.798,26,0.969,28,2.23,29,2.191,30,0.779,32,0.514,33,0.038,34,0.514,35,0.325,36,0.681,37,2.107,47,0.747,48,1.138,52,1.529,57,0.537,61,0.603,62,0.303,65,0.747,67,0.303,68,0.918,80,1.899,84,0.027,85,0.027,98,1.004,118,1.916,120,0.827,121,1.183,140,1.464,161,1.727,192,2.457,193,4.208,194,3.115,204,2.223,207,2.314,246,2.924,247,3.199,248,3.631,249,3.842,250,3.385,251,2.523,252,2.924,253,2.092,254,4.582,255,2.924,256,2.924,257,1.784,258,3.534,259,3.534,260,3.534,261,3.534,262,3.272,263,2.523,264,2.546,265,3.792,266,3.534,267,2.924,268,2.924,269,2.883,270,2.924,271,2.924,272,3.534,273,3.534,274,3.534]],["title/directives/NumberControlValueAccessorDirective.html",[0,0.094,275,1.742]],["body/directives/NumberControlValueAccessorDirective.html",[0,0.151,2,0.449,3,0.393,4,0.339,6,1.233,7,0.614,8,1.263,9,1.143,10,1.868,11,1.047,12,0.944,14,1.383,16,0.287,17,0.672,18,0.818,19,2.021,20,2.021,21,2.021,22,2.021,23,2.503,24,2.503,26,0.709,27,1.882,28,2.185,29,2.164,30,0.769,32,0.554,33,0.038,34,0.554,35,0.389,36,0.642,37,1.834,39,1.882,40,1.834,42,2.485,43,2.393,44,2.021,46,2.185,47,0.706,48,1.115,49,2.021,51,2.021,52,1.408,54,2.021,55,2.021,57,0.518,58,1.668,59,1.15,60,1.834,61,0.572,62,0.379,63,1.048,64,1.389,65,0.709,66,0.638,67,0.287,68,0.845,69,1.531,70,1.531,71,1.531,73,2.109,76,1.693,77,2.109,78,2.021,79,1.693,80,1.834,82,1.531,83,1.531,84,0.026,85,0.026,96,2.109,99,2.774,100,2.774,104,2.109,109,1.882,118,1.668,121,1.143,127,2.393,144,2.393,147,2.393,155,3.664,201,2.393,275,2.782,276,4.823,277,4.102,278,4.427,279,2.774,280,1.693,281,2.393,282,2.774]],["title/classes/QueryParam.html",[67,0.266,174,1.064]],["body/classes/QueryParam.html",[2,0.238,3,0.208,4,0.18,7,0.587,12,0.339,16,0.152,17,0.424,18,0.82,26,0.591,30,0.703,32,0.477,33,0.038,34,0.395,35,0.408,36,0.404,47,0.57,48,1.11,52,1.462,57,0.498,62,0.431,63,0.827,65,1.088,66,0.339,67,0.296,68,0.725,84,0.016,85,0.016,88,0.555,89,1.595,90,1.307,94,2.147,98,1.537,101,1.111,107,1.144,120,1.204,121,1.442,140,2.43,143,2.65,159,0.555,169,1.377,170,1.276,171,1.078,173,1.474,174,1.765,180,0.737,182,0.812,228,1.87,230,0.898,253,1.276,257,1.975,264,0.812,280,1.975,283,0.998,284,1.276,285,2.744,286,2.383,287,2.083,288,2.174,289,2.313,290,1.995,291,1.758,292,2.821,293,1.779,294,2.744,295,2.386,296,1.779,297,2.693,298,1.779,299,2.386,300,1.779,301,1.779,302,1.779,303,2.386,304,1.779,305,1.779,306,2.386,307,2.171,308,1.779,309,2.171,310,2.461,311,1.779,312,1.779,313,1.743,314,0.812,315,1.569,316,0.998,317,0.898,318,1.938,319,0.737,320,0.998,321,0.998,322,0.61,323,0.812,324,2.386,325,1.119,326,0.998,327,1.411,328,1.119,329,0.998,330,1.758,331,1.053,332,2.147,333,2.35,334,1.621,335,1.411,336,0.998,337,2.279,338,1.119,339,1.119,340,1.119,341,1.301,342,1.758,343,0.898,344,1.758,345,2.675,346,0.998,347,1.119,348,1.119,349,1.938,350,1.758,351,1.758,352,1.119,353,1.758,354,1.119,355,2.65,356,0.998,357,0.998,358,1.119,359,2.675,360,2.171,361,1.758,362,1.758,363,1.119,364,1.119,365,1.119,366,1.119,367,0.737,368,1.119,369,1.119,370,2.461,371,1.119,372,1.119,373,1.119,374,1.119,375,1.119,376,1.119,377,1.119,378,1.119,379,1.119,380,0.998,381,1.119,382,1.119,383,1.569,384,0.998,385,1.569,386,1.119,387,0.998,388,1.119,389,1.119,390,1.119,391,0.998,392,1.119,393,0.998,394,1.119,395,1.119,396,1.119,397,1.119]],["title/injectables/QueryParamBuilder.html",[132,1.286,398,2.568]],["body/injectables/QueryParamBuilder.html",[2,0.327,3,0.286,4,0.247,7,0.247,16,0.209,17,0.539,18,0.837,30,0.78,32,0.596,33,0.038,34,0.588,35,0.419,36,0.676,47,0.806,57,0.572,61,0.416,62,0.304,63,0.517,65,0.973,66,0.876,67,0.209,68,0.416,84,0.021,85,0.021,88,0.763,89,1.491,90,1.21,98,1.19,107,1.143,120,1.076,132,1.735,159,0.763,169,1.564,170,2.1,171,1.436,173,0.92,174,2.143,182,1.115,287,1.905,288,2.025,292,2.722,294,3.292,310,2.235,319,1.012,322,0.838,323,1.115,333,1.912,334,1.905,341,1.578,398,2.94,399,2.659,400,2.021,401,4.219,402,2.99,403,4.219,404,4.219,405,5.099,406,5.012,407,2.442,408,2.442,409,2.442,410,2.442,411,2.442,412,5.099,413,2.442,414,2.442,415,2.442,416,5.099,417,2.442,418,2.442,419,2.442,420,5.099,421,2.442,422,2.442,423,2.442,424,2.94,425,2.94,426,2.94,427,2.94,428,2.94,429,2.94,430,3.805,431,2.94,432,1.744,433,2.442,434,2.442,435,2.442,436,3.553,437,2.442,438,2.442,439,2.442,440,2.021,441,2.021,442,2.442,443,2.442,444,2.442,445,2.442,446,2.442,447,2.442,448,2.442]],["title/classes/QueryParamGroup.html",[67,0.266,341,1.169]],["body/classes/QueryParamGroup.html",[2,0.244,3,0.213,4,0.184,7,0.589,12,0.346,16,0.156,17,0.432,18,0.813,26,0.602,30,0.678,32,0.512,33,0.038,34,0.46,35,0.416,36,0.503,47,0.66,48,1.134,52,1.4,57,0.503,62,0.434,63,0.837,65,1.007,66,0.346,67,0.3,68,0.733,84,0.017,85,0.017,88,0.568,89,1.595,90,1.306,94,2.17,98,1.439,101,1.125,107,1.153,120,1.212,121,1.307,140,2.325,143,2.672,159,0.568,161,1.072,169,1.307,170,1.808,171,1.486,173,1.492,174,1.887,180,0.754,182,0.831,228,1.887,230,0.918,253,1.299,257,1.999,264,0.831,280,1.436,283,1.021,284,1.299,285,2.412,286,1.999,287,1.887,288,2.041,289,2.353,290,2.03,291,1.144,292,2.487,294,2.842,295,1.966,297,2.3,299,1.966,303,1.966,306,2.412,307,2.203,309,2.203,310,3.258,313,1.768,314,0.831,315,1.596,316,1.021,317,0.918,318,1.966,319,0.754,320,1.021,321,1.021,322,0.624,323,0.831,324,2.412,325,1.144,326,1.021,327,1.436,328,1.144,329,1.021,330,1.789,331,1.072,332,2.615,333,2.41,334,1.641,335,1.436,336,1.021,337,2.3,338,1.144,339,1.144,340,1.144,341,1.492,342,1.789,343,1.999,344,1.789,345,2.703,346,1.021,347,1.144,348,1.144,349,1.966,350,1.789,351,1.789,352,1.789,353,1.789,354,1.789,355,2.672,356,1.021,357,1.021,358,1.144,359,2.703,360,2.203,361,1.789,362,1.789,363,1.144,364,1.144,365,1.144,366,1.144,367,0.754,368,1.144,369,1.144,370,2.491,371,1.144,372,1.144,373,1.144,374,1.144,375,1.144,376,1.144,377,1.144,378,1.144,379,1.144,380,1.021,381,1.144,382,1.144,383,1.596,384,1.021,385,1.596,386,1.144,387,1.021,388,1.144,389,1.144,390,1.144,391,1.021,392,1.144,393,1.021,394,1.144,395,1.144,396,1.144,397,1.144,449,2.353,450,1.819,451,1.819,452,1.819,453,1.819,454,1.819,455,1.819,456,1.819,457,1.819,458,1.819,459,1.819,460,1.819]],["title/directives/QueryParamGroupDirective.html",[0,0.094,461,1.567]],["body/directives/QueryParamGroupDirective.html",[0,0.164,2,0.324,3,0.283,4,0.244,6,0.511,7,0.591,9,1.074,10,0.91,11,0.755,14,1.101,16,0.207,17,0.535,18,0.72,26,0.746,30,0.613,32,0.244,33,0.038,34,0.356,35,0.25,36,0.487,47,0.756,48,0.968,57,0.63,61,0.412,62,0.207,63,1.178,66,0.792,67,0.207,68,0.963,84,0.021,85,0.021,88,0.755,89,1.457,90,1.194,98,1.382,101,1.183,107,1.189,118,1.568,120,1.189,132,1.001,159,0.755,161,0.91,165,1.52,169,1.511,171,1.519,174,2.052,180,1.001,181,3.196,182,1.103,214,1.725,228,1.725,247,2.618,248,2.972,249,3.267,250,2.878,286,1.22,313,2.31,314,1.103,317,1.22,319,1.001,322,0.829,323,1.61,326,2.851,327,2.102,332,1.78,333,1.61,341,2.099,343,1.22,346,1.356,349,2.336,355,1.979,356,1.356,357,1.356,367,1.461,393,1.979,399,2.221,402,2.517,461,1.78,462,2,463,2.416,464,4.162,465,2.416,466,2.416,467,2.416,468,2.416,469,2.416,470,2.416,471,3.525,472,2.416,473,1.52,474,1.52,475,2.102,476,2,477,3.444,478,3.525,479,2.917,480,2.917,481,2.416,482,2,483,2.416,484,2.416,485,2.416,486,2.416,487,3.525,488,2.416,489,1.725,490,2.416,491,2.416,492,1.979,493,2.416,494,4.162,495,3.525,496,3.525,497,3.525,498,2.416,499,2.416,500,2.416,501,2.416,502,2.416,503,2.416,504,3.444,505,2.416,506,2.416,507,2.416,508,2.416,509,2.416,510,2.416,511,2.416,512,3.525,513,2.416,514,2.416,515,2.416,516,2.416,517,2.416,518,2.416,519,2.416,520,2.416,521,2.416,522,2,523,1.52,524,2.416,525,2,526,2,527,1.725,528,2,529,1.725,530,2,531,2,532,2.416,533,2.416,534,2.416,535,2.416,536,2.416,537,2,538,2.917,539,2.416,540,2.917,541,2.416,542,2.416,543,2,544,2.416,545,2.416,546,2.416,547,2.416,548,2.416,549,2.416,550,3.525,551,2.416,552,2.416,553,2.416,554,2.416,555,2.416,556,2.416,557,2.416,558,2.416,559,2.416,560,2.416,561,2.416,562,2.416,563,2.416,564,3.525,565,2.416,566,2.416,567,2.416,568,2.416,569,2.416,570,2.416,571,2.416,572,2.416,573,2.416,574,3.525,575,2.416,576,2.416]],["title/interfaces/QueryParamGroupValue.html",[331,1.169,332,1.567]],["body/interfaces/QueryParamGroupValue.html",[2,0.277,3,0.242,4,0.209,7,0.571,12,0.394,16,0.177,18,0.792,26,0.437,30,0.277,32,0.428,33,0.038,34,0.209,35,0.324,47,0.509,48,1.112,52,1.459,57,0.534,62,0.451,63,0.896,65,1.054,66,0.394,67,0.269,68,0.777,84,0.018,85,0.018,88,0.646,89,1.594,90,1.306,94,1.586,98,1.494,101,1.204,107,1.202,120,1.231,121,1.358,140,2.222,143,2.798,159,0.646,169,1.358,170,1.434,171,1.185,174,1.804,180,0.857,182,0.944,228,1.988,230,1.044,253,1.434,257,1.916,264,0.944,280,1.586,283,1.161,285,2.558,286,2.14,287,1.988,288,2.128,291,1.301,292,2.593,294,2.379,295,2.131,297,2.422,299,2.131,303,2.131,306,2.131,307,1.975,309,1.975,313,1.916,314,0.944,315,1.763,316,1.161,317,1.044,318,2.131,319,0.857,320,1.161,321,1.161,322,0.709,323,0.944,324,2.558,325,1.301,326,1.161,327,1.586,328,1.301,329,1.161,330,1.975,331,1.43,332,2.422,333,2.489,334,1.756,335,1.586,336,1.161,337,2.422,338,1.301,339,1.301,340,1.301,341,1.43,342,1.975,343,1.044,344,1.975,345,2.866,346,1.161,347,1.301,348,1.301,349,2.131,350,1.975,351,1.975,352,1.301,353,1.975,354,1.301,355,2.798,356,1.161,357,1.161,358,1.301,359,2.866,360,2.388,361,1.975,362,1.975,363,1.301,364,1.301,365,1.301,366,1.301,367,0.857,368,1.301,369,1.301,370,2.666,371,1.301,372,1.301,373,1.301,374,1.301,375,1.301,376,1.301,377,1.301,378,1.301,379,1.301,380,1.161,381,1.301,382,1.301,383,1.763,384,1.161,385,1.763,386,1.301,387,1.161,388,1.301,389,1.301,390,1.301,391,1.161,392,1.301,393,1.161,394,1.301,395,1.301,396,1.301,397,1.301,577,2.068]],["title/modules/QueryParamModule.html",[578,1.417,579,1.567]],["body/modules/QueryParamModule.html",[0,0.145,1,3.323,2,0.414,3,0.362,4,0.312,6,0.654,7,0.424,12,1.047,17,0.469,18,0.414,30,0.414,32,0.312,33,0.038,34,0.312,35,0.379,36,0.362,47,0.562,57,0.659,61,0.527,62,0.437,63,0.654,67,0.265,84,0.025,85,0.025,86,3.323,112,2.989,156,2.994,159,0.966,161,1.165,169,1.083,171,1.31,173,1.165,183,3.398,192,2.703,207,2.989,263,2.207,275,3.323,310,2.638,322,1.06,343,1.561,367,1.738,399,1.915,461,2.989,473,2.638,474,2.994,475,2.989,476,2.559,578,1.915,579,3.197,580,1.735,581,2.559,582,3.398,583,2.207,584,2.559,585,2.559,586,2.559,587,3.323,588,2.989,589,3.323,590,3.47,591,2.559,592,2.207,593,2.559,594,4.194,595,2.559,596,4.194,597,3.092,598,2.559,599,4.759,600,3.938,601,2.559,602,2.559,603,3.092,604,3.092,605,4.194,606,4.194]],["title/directives/QueryParamNameDirective.html",[0,0.094,475,1.567]],["body/directives/QueryParamNameDirective.html",[0,0.144,2,0.41,3,0.358,4,0.309,6,0.881,7,0.309,9,1.075,10,2.283,11,0.956,14,1.301,16,0.262,17,0.632,18,0.765,26,0.881,30,0.681,32,0.309,33,0.038,34,0.478,35,0.336,36,0.595,47,0.712,48,0.881,57,0.595,58,1.153,59,1.05,61,0.522,62,0.357,67,0.262,68,0.807,84,0.024,85,0.03,88,0.956,89,1.416,90,1.16,101,0.87,107,1.244,112,2.103,118,1.784,120,0.975,121,1.583,132,1.268,161,1.153,169,1.416,173,1.153,228,2.203,247,2.978,250,3.197,251,2.185,253,2.162,262,2.974,264,1.398,284,1.902,333,2.32,341,1.153,367,1.268,399,2.427,461,2.566,475,2.103,489,2.185,492,1.718,522,2.533,523,1.925,525,3.447,526,3.918,527,2.974,601,2.533,602,2.533,607,3.061,608,5.91,609,4.165,610,3.061,611,3.061,612,4.165,613,4.165,614,2.533,615,3.061,616,3.061,617,3.061,618,3.061,619,3.061,620,3.061,621,3.061,622,2.185,623,3.061,624,3.061,625,2.533,626,3.061,627,3.061,628,3.061,629,3.061,630,2.533,631,2.185,632,3.061,633,3.061,634,3.061,635,3.061,636,3.061,637,2.533,638,3.061,639,3.061,640,5.082,641,5.316,642,5.316,643,3.061,644,4.165,645,3.061,646,2.533,647,4.165,648,3.447,649,2.533,650,2.533,651,3.061,652,3.061]],["title/interfaces/QueryParamOpts.html",[292,1.567,331,1.169]],["body/interfaces/QueryParamOpts.html",[2,0.259,3,0.226,4,0.195,7,0.568,12,0.368,16,0.166,18,0.784,26,0.409,32,0.413,33,0.038,34,0.195,35,0.391,36,0.589,47,0.487,48,1.091,52,1.496,57,0.517,62,0.442,63,0.865,65,1.134,66,0.368,67,0.255,68,0.754,84,0.017,85,0.017,88,0.603,89,1.601,90,1.312,94,1.505,98,1.465,101,1.162,107,1.176,120,1.232,121,1.384,140,2.182,143,2.731,159,0.603,169,1.404,170,1.361,171,1.136,174,1.806,180,0.8,182,0.882,228,1.935,230,1.505,253,1.361,257,1.837,264,0.882,280,2.065,283,1.084,284,1.361,285,2.821,286,2.457,287,2.136,288,2.254,291,1.215,292,2.603,294,2.296,295,2.48,297,2.358,299,2.48,303,2.48,306,2.042,307,1.875,309,1.875,313,1.837,314,0.882,315,2.296,316,1.084,317,0.975,318,2.042,319,0.8,320,1.084,321,1.084,322,0.663,323,0.882,324,2.48,325,1.215,326,1.084,327,2.065,328,1.215,329,1.084,330,1.875,331,1.371,332,2.231,333,2.405,334,2.016,335,1.837,336,1.673,337,2.603,338,1.875,339,1.875,340,1.875,341,1.371,342,1.875,343,0.975,344,1.875,345,2.78,346,1.084,347,1.215,348,1.215,349,2.042,350,1.875,351,1.875,352,1.215,353,1.875,354,1.215,355,2.731,356,1.084,357,1.084,358,1.215,359,2.78,360,2.289,361,1.875,362,1.875,363,1.215,364,1.215,365,1.215,366,1.215,367,0.8,368,1.215,369,1.215,370,2.573,371,1.215,372,1.215,373,1.215,374,1.215,375,1.215,376,1.215,377,1.215,378,1.215,379,1.215,380,1.084,381,1.215,382,1.215,383,1.673,384,1.084,385,1.673,386,1.215,387,1.084,388,1.215,389,1.215,390,1.215,391,1.084,392,1.215,393,1.084,394,1.215,395,1.215,396,1.215,397,1.215]],["title/directives/RangeControlValueAccessorDirective.html",[0,0.094,587,1.742]],["body/directives/RangeControlValueAccessorDirective.html",[0,0.152,2,0.455,3,0.397,4,0.343,6,1.236,7,0.608,8,1.279,9,1.152,10,1.879,11,1.06,12,0.95,14,1.394,16,0.291,17,0.677,18,0.819,19,2.038,20,2.038,21,2.038,22,2.038,23,2.518,24,2.518,26,0.718,27,1.905,28,2.195,29,2.17,30,0.772,32,0.556,33,0.038,34,0.556,35,0.391,36,0.645,37,1.849,39,1.905,40,1.849,42,2.505,43,2.423,44,2.038,46,2.195,47,0.71,48,1.121,49,2.038,51,2.038,52,1.417,54,2.038,55,2.038,57,0.523,58,1.682,59,1.164,60,1.849,61,0.579,62,0.382,63,0.944,64,1.406,65,0.718,66,0.646,67,0.291,68,0.85,69,1.55,70,1.55,71,1.55,73,2.135,76,1.714,77,2.135,78,2.038,79,1.714,80,1.849,82,1.55,83,1.55,84,0.026,85,0.026,96,2.135,109,1.905,118,1.682,121,0.876,124,2.423,127,2.423,144,2.423,147,2.423,201,2.423,279,2.809,280,1.714,281,2.423,282,3.693,587,2.799,653,4.836,654,4.127,655,4.463,656,3.394,657,3.394]],["title/interfaces/RouterAdapter.html",[181,1.952,331,1.169]],["body/interfaces/RouterAdapter.html",[2,0.529,3,0.462,4,0.399,16,0.338,17,0.746,30,0.529,32,0.399,33,0.038,34,0.399,35,0.398,36,0.462,47,0.529,57,0.627,61,0.673,62,0.48,63,1.04,84,0.029,85,0.029,88,1.232,89,1.588,90,1.301,107,1.15,120,1.253,137,2.759,157,3.092,162,3.525,163,4.637,168,4.067,169,1.447,170,2.444,171,1.75,174,1.353,175,4.067,180,1.635,181,3.092,284,2.244,306,3.145,314,1.802,322,1.686,331,1.852,432,2.817,473,2.482,474,2.482,658,2.817,659,3.945,660,3.945,661,3.945,662,3.945,663,3.945,664,3.265,665,3.265]],["title/directives/SelectControlValueAccessorDirective.html",[0,0.094,588,1.567]],["body/directives/SelectControlValueAccessorDirective.html",[0,0.137,2,0.375,3,0.327,4,0.282,6,1.241,7,0.625,8,1.053,9,1.01,10,1.701,11,0.873,12,0.859,14,1.222,16,0.24,17,0.594,18,0.831,19,1.787,20,1.787,21,1.787,22,1.787,23,2.279,24,2.279,25,2.461,26,0.591,27,1.569,28,2.026,29,2.063,30,0.779,32,0.553,33,0.038,34,0.553,35,0.397,36,0.641,37,1.621,38,2.313,39,1.569,40,1.621,41,2.313,42,2.196,44,1.787,46,2.026,47,0.771,48,1.182,49,1.787,51,1.787,52,1.283,54,1.787,55,1.787,56,1.996,57,0.458,58,1.474,59,0.959,60,1.621,61,0.477,62,0.335,63,0.828,64,1.158,65,0.591,66,0.532,67,0.24,68,0.934,69,1.276,70,1.276,71,1.276,72,1.996,76,1.412,78,1.787,79,1.412,80,1.87,82,1.276,83,1.276,84,0.023,85,0.023,98,1.652,102,2.313,103,1.996,107,0.654,109,1.569,120,1.346,121,1.485,131,1.996,173,1.053,197,3.238,198,4.046,199,3.238,202,3.238,204,3.237,205,2.313,208,2.313,209,3.238,211,2.793,213,2.313,214,1.996,215,2.313,216,2.313,217,2.313,219,4.259,225,2.313,226,2.313,234,2.313,239,2.313,241,2.313,242,2.313,244,2.313,245,2.313,281,1.996,284,1.787,391,2.196,588,2.279,666,4.188,667,3.735,668,3.913,669,2.796,670,2.796,671,2.796,672,2.796,673,2.796,674,2.796,675,2.796,676,2.796,677,2.796,678,2.313]],["title/directives/SelectOptionDirective.html",[0,0.094,589,1.742]],["body/directives/SelectOptionDirective.html",[0,0.16,2,0.505,3,0.441,4,0.381,6,0.797,7,0.603,9,1.232,11,1.176,14,1.491,16,0.323,17,0.725,18,0.791,26,1.01,28,2.283,29,2.223,30,0.762,32,0.482,33,0.037,34,0.482,35,0.267,36,0.68,37,2.172,47,0.702,48,1.109,57,0.559,61,0.642,62,0.323,67,0.323,68,0.94,80,1.561,84,0.028,85,0.028,98,1.07,118,1.975,120,0.882,121,1.232,140,1.561,161,1.799,194,1.902,204,2.37,246,3.117,247,3.297,248,3.742,249,3.934,250,3.467,251,2.689,252,3.117,253,2.18,255,3.117,256,3.117,257,1.902,262,3.408,263,2.689,264,2.516,265,3.95,267,3.117,268,3.117,269,2.37,270,3.117,271,3.117,588,2.782,589,2.68,666,4.147,679,4.774,680,3.767,681,4.774]],["title/changelog.html",[682,1.861,683,1.861,684,2.606]],["body/changelog.html",[0,0.11,4,0.412,6,0.932,7,0.47,9,0.495,12,0.886,17,0.45,18,0.257,25,2.563,29,0.723,30,0.397,33,0.024,34,0.299,35,0.257,36,0.545,40,0.795,62,0.254,65,0.766,66,0.365,81,1.587,83,0.876,84,0.017,85,0.017,88,0.599,90,0.406,94,0.968,101,0.545,107,0.449,118,0.723,121,0.495,137,1.077,140,0.795,159,0.599,161,1.829,162,2.278,165,1.207,169,1.202,173,1.117,184,2.586,191,1.369,192,0.876,194,1.496,228,0.795,230,1.496,269,2.771,284,1.654,285,1.664,286,0.968,287,1.228,288,2.011,290,1.369,297,0.968,319,0.795,323,0.876,329,1.077,334,1.228,335,1.496,336,1.077,337,2.057,341,1.117,383,1.077,385,1.664,401,1.587,402,2.586,403,1.587,404,1.587,440,2.997,441,1.587,449,1.587,482,1.587,489,4.259,492,3.003,504,1.587,523,1.864,529,3.324,531,1.587,537,2.997,538,1.587,543,3.645,578,0.876,580,1.664,583,2.116,595,2.453,598,1.587,630,2.453,631,1.369,648,1.587,649,1.587,685,1.918,686,1.918,687,2.964,688,1.918,689,4.074,690,2.964,691,1.918,692,1.918,693,1.918,694,1.918,695,1.918,696,5.667,697,6.062,698,6.193,699,2.964,700,1.918,701,1.918,702,1.918,703,1.918,704,1.918,705,1.918,706,4.854,707,2.964,708,2.964,709,1.918,710,1.918,711,2.964,712,1.918,713,1.918,714,1.918,715,1.918,716,1.918,717,3.622,718,1.918,719,6.229,720,5.256,721,3.645,722,3.622,723,2.964,724,1.918,725,1.918,726,1.918,727,1.918,728,3.622,729,1.918,730,1.918,731,2.997,732,4.404,733,1.918,734,1.918,735,1.918,736,1.918,737,2.964,738,1.918,739,1.918,740,1.918,741,1.918,742,1.918,743,4.404,744,2.453,745,1.918,746,1.918,747,1.918,748,1.918,749,2.964,750,4.074,751,1.918,752,5.848,753,1.918,754,1.918,755,3.622,756,1.587,757,1.918,758,4.404,759,1.918,760,1.918,761,1.918,762,1.918,763,1.918,764,4.788,765,5.786,766,3.622,767,3.622,768,1.918,769,1.918,770,1.918,771,1.918,772,5.145,773,1.918,774,1.918,775,1.918,776,1.918,777,1.918,778,1.918,779,1.918,780,1.918,781,2.453,782,1.918,783,1.918,784,1.918,785,1.918,786,1.918,787,1.918,788,1.918,789,1.918,790,4.656,791,1.918,792,1.918,793,1.918,794,2.964,795,3.645,796,1.918,797,1.918,798,3.622,799,1.918,800,1.918,801,1.918,802,1.918,803,1.918,804,3.465,805,1.918,806,1.918,807,1.918,808,1.918,809,2.964,810,1.918,811,2.964,812,1.918,813,2.964,814,1.918,815,1.918,816,1.918,817,1.918,818,1.918,819,1.918,820,4.074,821,3.645,822,1.918,823,1.918,824,1.587,825,1.918,826,1.918,827,2.964,828,2.453,829,1.918,830,1.918,831,1.918,832,1.918,833,1.918,834,1.918,835,1.918,836,1.918,837,1.918,838,1.918,839,1.918,840,1.918,841,1.918,842,1.918,843,1.918,844,4.074,845,1.918,846,1.587,847,1.918,848,1.918,849,1.918,850,1.918,851,1.918,852,1.587,853,1.918,854,1.918,855,1.918,856,1.918,857,1.918,858,1.918,859,1.918,860,1.918,861,1.918,862,1.918,863,1.918,864,1.918,865,1.587,866,1.918,867,1.587,868,1.207,869,1.918,870,2.964,871,1.918,872,1.918,873,1.918,874,1.918,875,1.918,876,1.918,877,4.854,878,1.918,879,1.918,880,2.964,881,1.918,882,1.918,883,1.918,884,1.918,885,1.918,886,2.964,887,1.918,888,1.918,889,1.918,890,1.918,891,2.964,892,1.918,893,1.918,894,1.918,895,1.918,896,1.918,897,1.918,898,1.918,899,1.918,900,1.918,901,1.918,902,1.918,903,1.587,904,1.918,905,1.918,906,1.918,907,2.964,908,1.918,909,1.918,910,1.918,911,1.918,912,1.918,913,2.964,914,1.918,915,1.918,916,1.918,917,2.964,918,1.918,919,1.918,920,1.918,921,1.918,922,1.918,923,1.918,924,1.918,925,1.918,926,4.074,927,1.918,928,1.918,929,1.918,930,1.918,931,1.587,932,1.918,933,1.918,934,1.918,935,1.918,936,1.918,937,1.918,938,1.918,939,1.918,940,1.918,941,1.918,942,3.622,943,1.918,944,1.918,945,1.918,946,1.918,947,1.918,948,1.918,949,1.918,950,2.964,951,1.918,952,1.918,953,1.918,954,1.918,955,2.964,956,1.587,957,1.918,958,1.918,959,1.918,960,1.918,961,2.964,962,1.587,963,1.918,964,1.918,965,1.918,966,1.918,967,1.918,968,2.964,969,1.918,970,1.918,971,4.074,972,1.918,973,1.918,974,1.918,975,1.918,976,1.918,977,1.918,978,1.918,979,1.918,980,1.918,981,2.997,982,1.918,983,1.918,984,1.918,985,1.918,986,2.964,987,1.918,988,1.918,989,2.453,990,1.918,991,1.918,992,1.918,993,1.918,994,1.918,995,1.918,996,1.918,997,1.918,998,1.587,999,1.918,1000,1.918,1001,1.918,1002,1.918,1003,1.918,1004,1.918,1005,1.918,1006,1.918,1007,1.918,1008,1.918,1009,1.918,1010,1.918,1011,1.918,1012,1.918,1013,2.964,1014,1.918]],["title/dependencies.html",[580,2.09,1015,2.606]],["body/dependencies.html",[33,0.037,59,1.636,61,0.813,84,0.032,85,0.032,135,3.946,180,1.976,314,2.177,319,1.976,580,3.091,804,3.404,1016,4.768,1017,4.768,1018,5.969,1019,4.768]],["title/miscellaneous/functions.html",[101,1.058,1020,1.316]],["body/miscellaneous/functions.html",[6,0.954,7,0.573,8,1.7,16,0.296,32,0.627,33,0.037,34,0.627,35,0.379,36,0.731,46,1.429,84,0.026,85,0.026,89,1.582,90,1.296,101,1.428,113,2.463,136,2.854,137,1.936,169,1.376,174,1.724,287,1.429,288,1.429,316,2.532,317,2.278,318,2.532,320,2.532,321,2.532,334,1.869,337,2.692,384,1.936,387,1.936,399,1.575,462,4.412,477,2.854,479,2.854,480,2.854,1020,1.742,1021,5.026,1022,4.578,1023,4.511,1024,3.733,1025,4.853,1026,3.733,1027,3.733,1028,3.733,1029,3.733,1030,3.733,1031,5.026,1032,4.511,1033,4.511,1034,3.589,1035,4.511,1036,4.511,1037,2.854,1038,3.589,1039,4.511,1040,5.026,1041,2.854,1042,2.854,1043,3.449,1044,3.449,1045,4.511,1046,3.449,1047,3.449,1048,2.854,1049,3.449,1050,5.675,1051,3.449,1052,3.449,1053,3.449,1054,3.449,1055,3.449,1056,2.463,1057,3.449,1058,4.511,1059,3.449,1060,3.449,1061,4.511]],["title/index.html",[16,0.223,682,1.861,683,1.861]],["body/index.html",[3,0.429,6,1.192,32,0.474,33,0.036,57,0.66,59,1.256,61,0.624,62,0.314,67,0.314,84,0.028,85,0.028,107,0.857,118,1.38,159,1.143,162,3.546,165,3.253,194,1.849,269,3.43,297,1.849,367,2.143,380,2.055,492,3.061,523,2.949,527,3.893,528,3.03,529,4.024,530,3.03,540,3.88,578,1.672,579,2.611,582,3.347,600,3.88,622,2.614,625,3.03,631,2.614,646,4.28,650,3.03,731,3.03,744,3.03,781,4.28,795,4.28,804,2.614,821,4.852,824,3.03,828,4.28,846,3.03,852,3.03,865,4.513,868,2.949,903,3.03,962,3.03,989,3.03,998,4.28,1062,5.172,1063,4.688,1064,3.661,1065,3.03,1066,4.688,1067,4.688,1068,4.688,1069,3.661,1070,3.661,1071,3.661,1072,3.661,1073,5.172,1074,3.661,1075,3.661,1076,4.688,1077,3.661,1078,3.661,1079,4.688,1080,3.661,1081,3.661,1082,3.661,1083,3.661,1084,3.661,1085,3.661,1086,3.661,1087,3.661,1088,3.661,1089,3.661,1090,3.661,1091,3.661,1092,3.661,1093,3.661,1094,3.661,1095,3.661,1096,4.688,1097,4.688,1098,5.453,1099,3.661,1100,3.661,1101,3.661,1102,4.688,1103,4.688,1104,3.661,1105,5.172,1106,3.661,1107,3.661,1108,3.661,1109,3.661,1110,3.661,1111,3.661,1112,3.661,1113,3.661,1114,3.661,1115,3.661,1116,3.661,1117,3.661,1118,3.03,1119,3.661,1120,3.661,1121,3.661,1122,3.03]],["title/license.html",[682,1.861,683,1.861,868,1.64]],["body/license.html",[4,0.429,12,0.808,33,0.03,40,1.759,84,0.03,85,0.03,90,0.898,191,3.03,313,2.143,492,2.886,592,3.03,622,3.948,637,3.513,764,3.513,867,4.756,868,2.67,956,4.254,1065,4.576,1118,3.513,1122,3.513,1123,5.53,1124,4.245,1125,4.245,1126,4.245,1127,5.141,1128,4.245,1129,4.245,1130,4.245,1131,4.245,1132,5.141,1133,4.245,1134,6.15,1135,4.245,1136,5.141,1137,4.245,1138,4.245,1139,4.245,1140,4.245,1141,4.245,1142,4.245,1143,4.245,1144,4.245,1145,4.245,1146,4.245,1147,4.245,1148,4.245,1149,4.245,1150,5.141,1151,5.141,1152,4.245,1153,4.245,1154,5.141,1155,4.245,1156,4.245,1157,4.245,1158,4.245,1159,4.245,1160,4.245,1161,4.245,1162,4.245,1163,4.245,1164,4.245,1165,4.245,1166,4.245,1167,4.245,1168,4.245,1169,4.245,1170,4.245,1171,4.245,1172,4.245,1173,4.245]],["title/modules.html",[578,1.92]],["body/modules.html",[33,0.033,84,0.033,85,0.033,335,2.477,578,2.24,579,2.477,721,4.059,756,4.059,1174,4.905]],["title/overview.html",[1175,3.479]],["body/overview.html",[0,0.117,1,3.329,12,0.733,33,0.037,62,0.33,67,0.33,84,0.028,85,0.028,86,3.329,112,2.994,132,1.596,192,2.708,207,2.994,275,3.329,331,1.451,461,2.994,475,2.994,578,2.211,579,3.226,580,2.162,581,3.187,582,2.75,583,2.75,584,3.187,585,3.187,586,3.187,587,3.329,588,2.994,589,3.329,590,4.006,591,3.187,592,2.75,678,3.187,931,3.187,981,4.006,1175,3.187,1176,3.851]],["title/miscellaneous/typealiases.html",[1020,1.316,1177,3.723]],["body/miscellaneous/typealiases.html",[16,0.371,33,0.035,35,0.308,84,0.031,85,0.031,89,1.569,90,1.286,101,1.682,157,2.725,169,1.44,171,1.742,283,2.431,287,1.795,288,1.795,295,3.131,299,3.131,303,3.131,315,3.131,322,1.486,324,3.131,327,2.817,334,1.795,399,1.978,400,4.616,406,4.616,431,4.789,432,3.093,658,3.715,1020,2.187,1034,3.715,1038,3.093,1056,3.093,1178,4.332,1179,5.919,1180,3.585]],["title/miscellaneous/variables.html",[1020,1.316,1181,3.081]],["body/miscellaneous/variables.html",[0,0.143,1,2.636,5,2.494,6,1.257,7,0.635,8,2.238,12,1.039,13,3.887,16,0.258,33,0.038,35,0.422,58,2.057,60,2.262,64,2.262,65,1.155,66,1.064,84,0.024,85,0.024,86,1.692,89,1.507,90,1.235,98,1.171,107,0.964,112,2.371,113,2.152,114,3.887,120,0.964,157,2.593,158,2.494,159,1.287,160,3.41,161,1.136,171,1.287,173,2.314,183,3.353,184,2.152,192,2.145,193,2.152,194,2.081,195,3.887,207,1.522,211,3.605,275,2.636,276,2.494,277,3.887,322,1.034,399,1.376,424,3.887,425,3.887,426,3.887,427,3.887,428,3.887,429,3.887,430,3.887,461,1.522,473,2.955,474,2.955,475,1.522,579,1.522,587,2.636,588,2.371,589,1.692,593,3.41,614,3.887,653,2.494,654,3.887,658,3.353,664,2.494,665,2.494,666,2.152,667,3.887,1020,1.522,1022,2.494,1024,2.494,1025,4.517,1026,2.494,1027,2.494,1028,2.494,1029,2.494,1030,2.494,1034,2.152,1037,3.41,1038,2.152,1041,2.494,1042,2.494,1048,2.494,1056,2.152,1180,3.41,1181,2.494,1182,3.014,1183,4.121,1184,3.014,1185,4.697,1186,3.014,1187,3.014,1188,3.014,1189,3.014,1190,4.121,1191,3.014]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":217,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["0.0.2",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["07c103e",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["0f566ad",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":678,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"overview.html":{}}}],["1.1.1",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1176,"title":{},"body":{"overview.html":{}}}],["12",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["15ce1e",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":981,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2018",{"_index":764,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["2e39369",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["2f2675e",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":931,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["35a48b",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["3ed6e3",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["48f2da4",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["51ca66",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["5d90b63",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["60377e5",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["6148a68",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["781f009",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":70,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["_registeronchange(fn",{"_index":350,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_setparent(par",{"_index":397,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_updatevalu",{"_index":289,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_updatevalue(opt",{"_index":309,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_valuechang",{"_index":342,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["a0bde9b",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["a0de621",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["aadad1b",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":1149,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":161,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["accessor.direct",{"_index":263,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{}}}],["accessor.directive.t",{"_index":8,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accessor.directive.ts:16",{"_index":672,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:20",{"_index":43,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:25",{"_index":38,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:26",{"_index":201,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:27",{"_index":31,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:28",{"_index":96,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:32",{"_index":56,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:33",{"_index":279,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:34",{"_index":669,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:35",{"_index":200,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:36",{"_index":45,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:37",{"_index":124,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":99,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:39",{"_index":671,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:40",{"_index":50,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:41",{"_index":656,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:42",{"_index":104,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:44",{"_index":53,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:45",{"_index":657,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:46",{"_index":100,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:47",{"_index":126,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:50",{"_index":102,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:52",{"_index":122,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:54",{"_index":103,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:58",{"_index":205,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:62",{"_index":131,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:66",{"_index":208,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:67",{"_index":128,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:70",{"_index":670,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:71",{"_index":129,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:72",{"_index":203,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:75",{"_index":130,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:76",{"_index":210,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessors.t",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors/accessor",{"_index":602,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1168,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":166,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["ad",{"_index":489,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["adapt",{"_index":603,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["adapter.interfac",{"_index":182,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["adapter.interface.t",{"_index":658,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["adapter.interface.ts:23",{"_index":659,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["adapter.service.t",{"_index":160,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.service.ts:16",{"_index":167,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:21",{"_index":177,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:25",{"_index":179,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:29",{"_index":172,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter/default",{"_index":158,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter/rout",{"_index":322,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":523,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add/index.t",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addmatchingvers",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimport",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(opt",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addqueryparam(direct",{"_index":517,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["aea857a",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["afeae98",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["alia",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":1178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":989,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["alway",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["analyt",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1143,"title":{},"body":{"license.html":{}}}],["android",{"_index":138,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["angular'",{"_index":1093,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":59,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":180,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["angularvers",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anoth",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":631,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":998,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":1078,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1064,"title":{},"body":{"index.html":{}}}],["argument",{"_index":39,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["aris",{"_index":1172,"title":{},"body":{"license.html":{}}}],["array",{"_index":231,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.from(this.optionmap.key",{"_index":245,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["array.from(this.options.entri",{"_index":220,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.isarray(valu",{"_index":227,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.isarray(valueaccessor",{"_index":639,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["assert",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":1135,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":1161,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":1075,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["b",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b19a81",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["badg",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["bb15442",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["bbaf6e4",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["becom",{"_index":1112,"title":{},"body":{"index.html":{}}}],["befor",{"_index":534,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["benefit",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["blur",{"_index":24,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["bookmark",{"_index":1102,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["booleanparam",{"_index":401,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(opt",{"_index":405,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":583,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{}}}],["box",{"_index":1109,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1174,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":721,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["buffer",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["builder.service.t",{"_index":400,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["builder.service.ts:28",{"_index":411,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:44",{"_index":421,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:45",{"_index":423,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:46",{"_index":422,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:58",{"_index":413,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:59",{"_index":414,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:60",{"_index":415,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:72",{"_index":409,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:73",{"_index":408,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:74",{"_index":407,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:86",{"_index":417,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:87",{"_index":418,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:88",{"_index":419,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["built",{"_index":649,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["builtinaccessor",{"_index":641,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["button",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1126,"title":{},"body":{"license.html":{}}}],["c",{"_index":1124,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["c6b3a1e",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["c6cd845",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["can't",{"_index":628,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["care",{"_index":1092,"title":{},"body":{"index.html":{}}}],["case",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["cfa25df",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["chanc",{"_index":532,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chang",{"_index":25,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["change(ev",{"_index":41,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["changefn(this.valu",{"_index":361,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefn(valu",{"_index":392,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefunct",{"_index":344,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changelog",{"_index":684,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":1131,"title":{},"body":{"license.html":{}}}],["check",{"_index":81,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"changelog.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirect",{"_index":1,"title":{"directives/CheckboxControlValueAccessorDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["chmod",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["choos",{"_index":634,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["claim",{"_index":1164,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["close",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["cluster_queryparammodul",{"_index":584,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_declar",{"_index":585,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_export",{"_index":586,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["collect",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["combinedparam",{"_index":564,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["combinewith",{"_index":285,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["command",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":1119,"title":{},"body":{"index.html":{}}}],["compar",{"_index":315,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":334,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":531,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["compos",{"_index":142,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend",{"_index":116,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend(ev",{"_index":125,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionstart",{"_index":117,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["concatmap",{"_index":469,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["concatmap(param",{"_index":557,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["condit",{"_index":1148,"title":{},"body":{"license.html":{}}}],["config",{"_index":598,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeropt",{"_index":606,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configur",{"_index":617,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["connect",{"_index":1173,"title":{},"body":{"license.html":{}}}],["consid",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["consist",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["consol",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":63,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(opt",{"_index":291,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["constructor(par",{"_index":251,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(platformid",{"_index":119,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["constructor(priv",{"_index":79,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(queryparam",{"_index":450,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(render",{"_index":27,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(rout",{"_index":164,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["constructor(routeradapt",{"_index":463,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["content",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":1169,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1088,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1089,"title":{},"body":{"index.html":{}}}],["control",{"_index":6,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":10,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["controlvalueaccessordirect",{"_index":86,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["convent",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":867,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1123,"title":{},"body":{"license.html":{}}}],["core",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":537,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["creat",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["createbooleandeseri",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleandeserializer(defaultvalu",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanseri",{"_index":1026,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleanserializer(defaultvalu",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createemptyondeseri",{"_index":320,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyondeserializer(deseri",{"_index":387,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonseri",{"_index":321,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonserializer(seri",{"_index":384,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createnumberdeseri",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberdeserializer(defaultvalu",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberseri",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberserializer(defaultvalu",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryparam(queryparam",{"_index":446,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["createstringdeseri",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringdeserializer(defaultvalu",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringseri",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringserializer(defaultvalu",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":646,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["custom",{"_index":650,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["customaccessor",{"_index":642,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customparam",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["d+)/.test(navigator.useragent.tolowercas",{"_index":139,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["d1d0a1b",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":1165,"title":{},"body":{"license.html":{}}}],["data",{"_index":1069,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1136,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":544,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueu",{"_index":545,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.next(newvalu",{"_index":553,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.pip",{"_index":546,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncetim",{"_index":286,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["debouncetime(queryparam.debouncetim",{"_index":548,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dec2d0f",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":582,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":173,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deseri",{"_index":424,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_seri",{"_index":425,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_deseri",{"_index":426,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_seri",{"_index":427,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_deseri",{"_index":428,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_seri",{"_index":429,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["defaultaccessor",{"_index":640,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["defaultcontrolvalueaccessordirect",{"_index":112,"title":{"directives/DefaultControlValueAccessorDirective.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteradapt",{"_index":156,"title":{"injectables/DefaultRouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{}}}],["defaultrouteradapteropt",{"_index":183,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["defaultvalu",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defin",{"_index":30,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["demo",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["demonstr",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":580,"title":{"dependencies.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["deregisteropt",{"_index":197,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["deregisteroption(id",{"_index":202,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["descript",{"_index":88,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{}}}],["deseri",{"_index":287,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserialize(queryparam",{"_index":571,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["design",{"_index":1070,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":483,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["develop",{"_index":1086,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":1096,"title":{},"body":{"index.html":{}}}],["dir.nam",{"_index":506,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["direct",{"_index":0,"title":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directive.nam",{"_index":521,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor",{"_index":524,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.registeronchange((newvalu",{"_index":552,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(newvalu",{"_index":508,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(queryparam.valu",{"_index":541,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directli",{"_index":629,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["disabl",{"_index":83,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["disabledchang",{"_index":93,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribut",{"_index":1141,"title":{},"body":{"license.html":{}}}],["doc",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":90,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["domain",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":1110,"title":{},"body":{"index.html":{}}}],["due",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["e100621",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":366,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["earli",{"_index":1085,"title":{},"body":{"index.html":{}}}],["easi",{"_index":1063,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1107,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["elementref",{"_index":29,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["emit",{"_index":511,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["emitev",{"_index":355,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["empti",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["emptyon",{"_index":337,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enough",{"_index":636,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["enqueuenavigation(param",{"_index":560,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ensur",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["entir",{"_index":513,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error",{"_index":385,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["error(`combinewith",{"_index":377,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`comparewith",{"_index":374,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`could",{"_index":519,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`deseri",{"_index":372,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`emptyon",{"_index":379,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`mor",{"_index":647,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`no",{"_index":525,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`pleas",{"_index":365,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`provid",{"_index":229,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["error(`queryparamnam",{"_index":621,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`seri",{"_index":369,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`y",{"_index":488,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["event",{"_index":40,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["event.target",{"_index":281,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["eventemitt",{"_index":95,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exampl",{"_index":744,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["execut",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["explan",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["explicitli",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":62,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["exporta",{"_index":105,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["express",{"_index":1155,"title":{},"body":{"license.html":{}}}],["extend",{"_index":328,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["extra",{"_index":170,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}}}],["f02d26d",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["f394fa6",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["f4c3365",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["f526b61",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":143,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["fce4ec2",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["featur",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{}}}],["filter",{"_index":1068,"title":{},"body":{"index.html":{}}}],["filter(([id",{"_index":221,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["filter(id",{"_index":235,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["find",{"_index":520,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["finish",{"_index":339,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["first",{"_index":440,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fit",{"_index":1158,"title":{},"body":{"license.html":{}}}],["fix",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":46,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["fnchang",{"_index":69,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["fntouch",{"_index":71,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["follow",{"_index":1147,"title":{},"body":{"license.html":{}}}],["forget",{"_index":522,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":527,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["forroot",{"_index":595,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["forroot(config",{"_index":596,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["forwardref",{"_index":60,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":526,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1130,"title":{},"body":{"license.html":{}}}],["function",{"_index":101,"title":{"miscellaneous/functions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function(opt",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":1146,"title":{},"body":{"license.html":{}}}],["gener",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":682,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["get(queryparamnam",{"_index":352,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["getangularmajorvers",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingvers",{"_index":1032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingversion(angularvers",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getoptionid(valu",{"_index":244,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["getparamsforvalue(queryparam",{"_index":562,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["getqueryparammap",{"_index":178,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getselect",{"_index":258,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["geturl",{"_index":176,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getvalu",{"_index":459,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["globalrouteropt",{"_index":464,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["good",{"_index":635,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["googl",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":1129,"title":{},"body":{"license.html":{}}}],["green",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":402,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(queryparam",{"_index":410,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.direct",{"_index":601,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.directive.t",{"_index":462,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["group.directive.ts:35",{"_index":466,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:42",{"_index":465,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:51",{"_index":468,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:99",{"_index":467,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupopt",{"_index":574,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["guid",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["guidelin",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["hasarrayseri",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarrayserialization(queryparam",{"_index":480,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hasarrayvalu",{"_index":1035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarrayvalue(queryparam",{"_index":479,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hash",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["have",{"_index":1115,"title":{},"body":{"index.html":{}}}],["haven't",{"_index":490,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["head",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["headlin",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":536,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["herebi",{"_index":1128,"title":{},"body":{"license.html":{}}}],["histori",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["holder",{"_index":1162,"title":{},"body":{"license.html":{}}}],["hope",{"_index":633,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["host",{"_index":262,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlisten",{"_index":23,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('blur",{"_index":76,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('chang",{"_index":72,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('compositionend",{"_index":150,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('compositionstart",{"_index":148,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('input",{"_index":144,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmlinputelement).check",{"_index":75,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["htmlinputelement).valu",{"_index":147,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmloptionelement).select",{"_index":273,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["htmloptionelement).valu",{"_index":674,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#l186",{"_index":627,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["i.",{"_index":1079,"title":{},"body":{"index.html":{}}}],["icon",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":204,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["idcount",{"_index":216,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["implement",{"_index":9,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["impli",{"_index":1156,"title":{},"body":{"license.html":{}}}],["import",{"_index":57,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["imposs",{"_index":1101,"title":{},"body":{"index.html":{}}}],["improv",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["independ",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":329,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["inform",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ingo",{"_index":1125,"title":{},"body":{"license.html":{}}}],["initi",{"_index":504,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["inject",{"_index":132,"title":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["inject(ng_value_accessor",{"_index":616,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inject(ngqp_router_adapt",{"_index":484,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(ngqp_router_opt",{"_index":485,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(platform_id",{"_index":152,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["injectiontoken",{"_index":661,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["injectiontoken('ngqp_router_adapt",{"_index":664,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngqp_router_opt",{"_index":665,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":118,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('queryparamgroup",{"_index":481,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamnam",{"_index":615,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["input('valu",{"_index":268,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["input(ev",{"_index":127,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["input:not([type=checkbox]):not([type=radio])[queryparamname],textarea[queryparamnam",{"_index":115,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["input[type=checkbox][queryparamnam",{"_index":15,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["input[type=number][queryparamnam",{"_index":278,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{}}}],["input[type=range][queryparamnam",{"_index":655,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["instal",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":447,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["instead",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["instruct",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":331,"title":{"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"overview.html":{}}}],["intern",{"_index":349,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["intuit",{"_index":1071,"title":{},"body":{"index.html":{}}}],["isandroid",{"_index":1036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isandroid(navig",{"_index":136,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["isandroid(window.navig",{"_index":154,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isdis",{"_index":54,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["isfunct",{"_index":316,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["isfunction(combinewith",{"_index":376,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(comparewith",{"_index":373,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(deseri",{"_index":371,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(obj",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfunction(seri",{"_index":368,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismiss",{"_index":317,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["ismissing(combinewith",{"_index":375,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(direct",{"_index":507,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(emptyon",{"_index":378,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(obj",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismissing(param",{"_index":364,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam",{"_index":357,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam.combinewith",{"_index":565,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(queryparam.debouncetim",{"_index":547,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(this.par",{"_index":394,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismultiqueryparam",{"_index":1039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiqueryparam(queryparam",{"_index":477,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":630,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["isplatformbrows",{"_index":134,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":153,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["item",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1118,"title":{},"body":{"index.html":{},"license.html":{}}}],["know",{"_index":1090,"title":{},"body":{"index.html":{}}}],["land",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":581,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["let'",{"_index":632,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["liabil",{"_index":1166,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1163,"title":{},"body":{"license.html":{}}}],["licens",{"_index":868,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limit",{"_index":956,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":731,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["listen",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["liter",{"_index":310,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["load",{"_index":1104,"title":{},"body":{"index.html":{}}}],["locat",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["loose_identity_compar",{"_index":430,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["lose",{"_index":1117,"title":{},"body":{"index.html":{}}}],["make",{"_index":529,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["mandatori",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1106,"title":{},"body":{"index.html":{}}}],["map",{"_index":214,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["map(([id",{"_index":223,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["map((newvalu",{"_index":549,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(queryparam.seri",{"_index":569,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(valu",{"_index":233,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["mappedqueryparam",{"_index":436,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["margin",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["match",{"_index":85,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mayb",{"_index":439,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["mention",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["merchant",{"_index":1157,"title":{},"body":{"license.html":{}}}],["merg",{"_index":191,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["misalign",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":1020,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":336,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["model",{"_index":323,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["modifi",{"_index":1139,"title":{},"body":{"license.html":{}}}],["modul",{"_index":578,"title":{"modules/QueryParamModule.html":{},"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":599,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["more",{"_index":1091,"title":{},"body":{"index.html":{}}}],["move",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multi",{"_index":65,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["multiselectcontrolvalueaccessordirect",{"_index":192,"title":{"directives/MultiSelectControlValueAccessorDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multiselectoptiondirect",{"_index":207,"title":{"directives/MultiSelectOptionDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.direct",{"_index":476,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["name.directive.t",{"_index":607,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:16",{"_index":610,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:19",{"_index":609,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:32",{"_index":611,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["navig",{"_index":137,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["navigate(queryparam",{"_index":168,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["navigationextra",{"_index":662,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["necessari",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":538,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["new",{"_index":107,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":238,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["newvalu",{"_index":326,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ng",{"_index":824,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":58,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":600,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":249,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngoninit",{"_index":250,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngqp",{"_index":821,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_built_in_accessor",{"_index":614,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_built_in_accessors.some(curr",{"_index":645,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_checkbox_value_accessor",{"_index":13,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_default_value_accessor",{"_index":114,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_module_nam",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngqp_multi_select_value_accessor",{"_index":195,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_number_value_accessor",{"_index":277,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_range_value_accessor",{"_index":654,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_adapt",{"_index":473,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_opt",{"_index":474,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_select_value_accessor",{"_index":667,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":230,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["noninfring",{"_index":1160,"title":{},"body":{"license.html":{}}}],["normal",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["normalizedvalu",{"_index":155,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["notabl",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":338,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["notic",{"_index":1150,"title":{},"body":{"license.html":{}}}],["notifychang",{"_index":91,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(valu",{"_index":97,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":846,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["number",{"_index":280,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["numbercontrolvalueaccessor",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirect",{"_index":275,"title":{"directives/NumberControlValueAccessorDirective.html":{}},"body":{"directives/NumberControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numericparam",{"_index":403,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numericparam(opt",{"_index":412,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["obj",{"_index":1058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.keys(queryparams).foreach(queryparamnam",{"_index":437,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object.keys(this.queryparamgroup.queryparams).foreach(queryparamnam",{"_index":497,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["object.keys(this.queryparams).foreach(queryparamnam",{"_index":353,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.keys(value).foreach(queryparamnam",{"_index":356,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.values(this.queryparams).foreach(queryparam",{"_index":347,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["observ",{"_index":306,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}}}],["obtain",{"_index":1133,"title":{},"body":{"license.html":{}}}],["on",{"_index":648,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["onblur",{"_index":77,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onc",{"_index":512,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["onchang",{"_index":218,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["onchange(ev",{"_index":673,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["onchangefunct",{"_index":324,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["oncompositionend(ev",{"_index":151,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["oncompositionstart",{"_index":149,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["ondestroy",{"_index":248,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninit",{"_index":247,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninput(ev",{"_index":73,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onlyself",{"_index":393,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ontouch",{"_index":226,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opt",{"_index":294,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["option",{"_index":36,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["option.direct",{"_index":212,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["option.directive.t",{"_index":246,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:21",{"_index":256,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:27",{"_index":255,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:34",{"_index":254,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:35",{"_index":679,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:40",{"_index":259,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:44",{"_index":261,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:9",{"_index":252,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.select",{"_index":222,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["optionmap",{"_index":215,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opts.emitev",{"_index":359,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.multi",{"_index":363,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.onlyself",{"_index":395,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["organ",{"_index":1095,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":1171,"title":{},"body":{"license.html":{}}}],["out",{"_index":592,"title":{},"body":{"modules/QueryParamModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":92,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchang",{"_index":108,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('valuechang",{"_index":106,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outsid",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1175,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriteparti",{"_index":431,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["packag",{"_index":1015,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":795,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pagin",{"_index":1066,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["param(opt",{"_index":416,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.module.t",{"_index":593,"title":{},"body":{"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["param.module.ts:56",{"_index":597,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["paramcombin",{"_index":295,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeseri",{"_index":299,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parammap",{"_index":663,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["paramseri",{"_index":303,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":253,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["parsefloat(valu",{"_index":282,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["partial",{"_index":433,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["particular",{"_index":1159,"title":{},"body":{"license.html":{}}}],["patchvalu",{"_index":449,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(valu",{"_index":354,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["path",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":1127,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1145,"title":{},"body":{"license.html":{}}}],["person",{"_index":1132,"title":{},"body":{"license.html":{}}}],["phrase",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":432,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["platform_id",{"_index":133,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["platformid",{"_index":123,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["pleas",{"_index":528,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["png",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["portion",{"_index":1153,"title":{},"body":{"license.html":{}}}],["previousvalu",{"_index":325,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["privat",{"_index":68,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["progress",{"_index":1083,"title":{},"body":{"index.html":{}}}],["project",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":175,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["proper",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":284,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["provid",{"_index":12,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":434,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["proxi",{"_index":542,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["public",{"_index":18,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1140,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":637,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["push",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["queri",{"_index":367,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["queryparam",{"_index":174,"title":{"classes/QueryParam.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{}}}],["queryparam(opt",{"_index":445,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparam._registeronchange((newvalu",{"_index":498,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam._setparent(thi",{"_index":348,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam._updatevalu",{"_index":510,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.combinewith(queryparam.valu",{"_index":566,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.deserialize(valu",{"_index":573,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.multi",{"_index":478,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.param",{"_index":567,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.serialize(valu",{"_index":570,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.setvalue(valu",{"_index":358,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam.valu",{"_index":509,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparambuild",{"_index":398,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroup",{"_index":341,"title":{"classes/QueryParamGroup.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["queryparamgroup(mappedqueryparam",{"_index":444,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirect",{"_index":461,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamgroupvalu",{"_index":332,"title":{"interfaces/QueryParamGroupValue.html":{}},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparammap",{"_index":163,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparammap.get(queryparam.param",{"_index":503,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammap.getall(queryparam.param",{"_index":502,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammodul",{"_index":579,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamnam",{"_index":333,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamnamedirect",{"_index":475,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamopt",{"_index":292,"title":{"interfaces/QueryParamOpts.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamoptsinput",{"_index":406,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamshandl",{"_index":190,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["queue",{"_index":482,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["rangecontrolvalueaccessor",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirect",{"_index":587,"title":{"directives/RangeControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":533,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["readm",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["readonli",{"_index":140,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["receiv",{"_index":370,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["recurs",{"_index":340,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["reflect",{"_index":1100,"title":{},"body":{"index.html":{}}}],["regist",{"_index":535,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["registeronchang",{"_index":19,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeronchange(fn",{"_index":44,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouch",{"_index":20,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":49,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeropt",{"_index":198,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeroption(opt",{"_index":206,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["registri",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["relativeto",{"_index":188,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["releas",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":1114,"title":{},"body":{"index.html":{}}}],["remov",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":37,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["renderer2",{"_index":28,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["replac",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":184,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["resembl",{"_index":625,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["reset",{"_index":591,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["respons",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1137,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["right",{"_index":1138,"title":{},"body":{"license.html":{}}}],["root",{"_index":435,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["rout",{"_index":165,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["router",{"_index":159,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routeradapt",{"_index":181,"title":{"interfaces/RouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/RouterAdapter.html":{}}}],["routeradapteropt",{"_index":171,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":1080,"title":{},"body":{"index.html":{}}}],["routeropt",{"_index":343,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{}}}],["run",{"_index":1073,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":314,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":472,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["same",{"_index":443,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["sanitize=tru",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1077,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1120,"title":{},"body":{"index.html":{}}}],["schemat",{"_index":804,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["schematics/.../index.t",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics/ng",{"_index":1041,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1121,"title":{},"body":{"index.html":{}}}],["section",{"_index":1082,"title":{},"body":{"index.html":{}}}],["see",{"_index":297,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":194,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select:not([multiple])[queryparamnam",{"_index":668,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["select[multipl",{"_index":232,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["select[multiple][queryparamnam",{"_index":196,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["selectcontrolvalueaccessor",{"_index":626,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["selectcontrolvalueaccessordirect",{"_index":588,"title":{"directives/SelectControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selected(select",{"_index":274,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["selectedid",{"_index":213,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["selectedindex",{"_index":677,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["selectoptiondirect",{"_index":589,"title":{"directives/SelectOptionDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectvalueaccessor(valueaccessor",{"_index":638,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":612,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1144,"title":{},"body":{"license.html":{}}}],["serial",{"_index":288,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serialize(queryparam",{"_index":568,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["set",{"_index":269,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["setdisabledst",{"_index":21,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdis",{"_index":51,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setselected(select",{"_index":260,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["setupnavigationqueu",{"_index":555,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["setupqueryparam",{"_index":651,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["setvalu",{"_index":290,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(valu",{"_index":257,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["shall",{"_index":1151,"title":{},"body":{"license.html":{}}}],["share",{"_index":1103,"title":{},"body":{"index.html":{}}}],["shebang",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["simpli",{"_index":1072,"title":{},"body":{"index.html":{}}}],["singl",{"_index":380,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["skeleton",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["skipself",{"_index":613,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["small",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":1134,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["specif",{"_index":1099,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":623,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["split",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["src/.../checkbox",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":1037,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../model.t",{"_index":1179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../multi",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngqp",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../number",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../queri",{"_index":1034,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rang",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../select",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.t",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1038,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/checkbox",{"_index":5,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/default",{"_index":113,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/multi",{"_index":193,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/ngqp",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/accessors/numb",{"_index":276,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/rang",{"_index":653,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/select",{"_index":666,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/control",{"_index":87,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/model.t",{"_index":283,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/model.ts:101",{"_index":457,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:119",{"_index":458,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:132",{"_index":455,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:150",{"_index":308,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:153",{"_index":305,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:156",{"_index":302,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:159",{"_index":304,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:162",{"_index":300,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:165",{"_index":301,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:168",{"_index":298,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:171",{"_index":296,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:174",{"_index":293,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:229",{"_index":312,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:23",{"_index":577,"title":{},"body":{"interfaces/QueryParamGroupValue.html":{}}}],["src/lib/model.ts:240",{"_index":311,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:57",{"_index":454,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:60",{"_index":452,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:63",{"_index":453,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:65",{"_index":451,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:86",{"_index":456,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:91",{"_index":460,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/queri",{"_index":399,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/rout",{"_index":157,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.t",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/util.t",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":1087,"title":{},"body":{"index.html":{}}}],["standard",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":683,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1098,"title":{},"body":{"index.html":{}}}],["static",{"_index":594,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["staticprovid",{"_index":211,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["still",{"_index":1084,"title":{},"body":{"index.html":{}}}],["string",{"_index":120,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["stringparam",{"_index":404,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(opt",{"_index":420,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["style",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":313,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"license.html":{}}}],["sublicens",{"_index":1142,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":559,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["subscribe(param",{"_index":551,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["substanti",{"_index":1152,"title":{},"body":{"license.html":{}}}],["success",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":1108,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":491,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":335,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"modules.html":{}}}],["supportscomposit",{"_index":141,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["sure",{"_index":530,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["svg",{"_index":756,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sync",{"_index":539,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["synchron",{"_index":1062,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1094,"title":{},"body":{"index.html":{}}}],["t",{"_index":98,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["takeuntil",{"_index":470,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["takeuntil(this.destroy",{"_index":550,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["tap",{"_index":471,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["target",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["testrouteradapt",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navig",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["that'",{"_index":1074,"title":{},"body":{"index.html":{}}}],["this._valuechanges.asobserv",{"_index":307,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this._valuechanges.next(this.valu",{"_index":362,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":360,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.push(fn",{"_index":351,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.combinewith",{"_index":390,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.compos",{"_index":146,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.createqueryparam(queryparam",{"_index":438,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.debouncetim",{"_index":389,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deseri",{"_index":386,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deserialize(queryparam",{"_index":501,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.complet",{"_index":516,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.next",{"_index":515,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.find(dir",{"_index":505,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.push(direct",{"_index":554,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.disabledchange.emit(isdis",{"_index":111,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.elementref.nativeel",{"_index":272,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.enqueuenavigation(param",{"_index":496,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.enqueuenavigation(this.getparamsforvalue(queryparam",{"_index":499,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.fnchang",{"_index":82,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange((event.target",{"_index":74,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.fnchange(this.valu",{"_index":676,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange(valu",{"_index":109,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fntouch",{"_index":78,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getoptionid(valu",{"_index":234,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getparamsforvalue(queryparam",{"_index":495,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.globalrouteropt",{"_index":576,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.id",{"_index":265,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.idcounter++).tostr",{"_index":239,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.multi",{"_index":388,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.nam",{"_index":620,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.onchang",{"_index":243,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.optionmap.delete(id",{"_index":241,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(id",{"_index":225,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(this.selectedid",{"_index":675,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.set(id",{"_index":242,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.options.foreach((opt",{"_index":236,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.options.set(newid",{"_index":240,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.par",{"_index":264,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["this.param",{"_index":381,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent._updatevalue(opt",{"_index":396,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent.addqueryparam(thi",{"_index":652,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.parent.deregisteroption(this.id",{"_index":267,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.registeropt",{"_index":680,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.parent.registeroption(thi",{"_index":266,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.parent.updateoptionvalue(this.id",{"_index":271,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.writevalue(this.parent.valu",{"_index":681,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.queryparam",{"_index":345,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.queryparamgroup",{"_index":487,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._registeronchange((valu",{"_index":493,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._updatevalu",{"_index":514,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(directive.nam",{"_index":518,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(queryparamnam",{"_index":494,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.routeropt",{"_index":575,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.next(param",{"_index":561,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.pip",{"_index":556,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.renderer.setproperty(this.elementref.nativeel",{"_index":80,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.rout",{"_index":189,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.route.queryparammap",{"_index":186,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.navig",{"_index":187,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.url",{"_index":185,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.routeradapter.navigate(param",{"_index":558,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.queryparammap.subscribe(queryparammap",{"_index":500,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeropt",{"_index":346,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.selectedid",{"_index":219,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.selectedids.includes(id",{"_index":237,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectedids.map(id",{"_index":224,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectvalueaccessor(valueaccessor",{"_index":619,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.seri",{"_index":382,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.serialize(queryparam",{"_index":563,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupnavigationqueu",{"_index":486,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupqueryparam",{"_index":624,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.stringparam",{"_index":448,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.supportscomposit",{"_index":145,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.valu",{"_index":391,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.valueaccessor",{"_index":618,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.valuechange.emit(valu",{"_index":110,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["throw",{"_index":228,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["tick",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["toc",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":89,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1170,"title":{},"body":{"license.html":{}}}],["travi",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":66,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":1113,"title":{},"body":{"index.html":{}}}],["two",{"_index":442,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["type",{"_index":35,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1177,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typo",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["u",{"_index":330,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["uievent",{"_index":42,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["undefin",{"_index":383,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["under",{"_index":1097,"title":{},"body":{"index.html":{}}}],["unnam",{"_index":1040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessari",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["unpack",{"_index":327,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":852,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updat",{"_index":543,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["updateoptionvalu",{"_index":199,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["updateoptionvalue(id",{"_index":209,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["url",{"_index":162,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"index.html":{}}}],["us",{"_index":492,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":1081,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":604,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["useexist",{"_index":64,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1105,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":605,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["util",{"_index":319,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"dependencies.html":{}}}],["valid",{"_index":441,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["valu",{"_index":7,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":270,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["valueaccessor",{"_index":608,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessor.constructor",{"_index":644,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessors.foreach(valueaccessor",{"_index":643,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valuechang",{"_index":94,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["values.map(queryparam.deseri",{"_index":572,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["variabl",{"_index":1181,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":540,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["void",{"_index":48,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["wait",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":1076,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":1154,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":1111,"title":{},"body":{"index.html":{}}}],["websit",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1167,"title":{},"body":{"license.html":{}}}],["widget",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":622,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{},"license.html":{}}}],["word",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":781,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worri",{"_index":1116,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":318,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["wraptrycatch(fn",{"_index":1060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["write",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["writevalu",{"_index":22,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["writevalue(valu",{"_index":55,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["x",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":962,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ye",{"_index":660,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["zoom",{"_index":590,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/CheckboxControlValueAccessorDirective.html":{"url":"directives/CheckboxControlValueAccessorDirective.html","title":"directive - CheckboxControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CheckboxControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/checkbox-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=checkbox][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=checkbox][queryParamName]',\n    providers: [NGQP_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class CheckboxControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: boolean) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onInput(event: UIEvent) {\n        this.fnChange((event.target as HTMLInputElement).checked);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n\n\n            \n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabledChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyChange(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: (value: T) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * TODO Documentation\n *\n * \n * \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /** TODO Documentation */\n    @Output('valueChange')\n    public valueChange = new EventEmitter();\n\n    /** TODO Documentation */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /** TODO Documentation */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    public writeValue(value: T) {\n        this.valueChange.emit(value);\n    }\n\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DefaultControlValueAccessorDirective.html":{"url":"directives/DefaultControlValueAccessorDirective.html","title":"directive - DefaultControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DefaultControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/default-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                compositionend\n                            \n                            \n                                compositionstart\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string | null, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/default-control-value-accessor.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionend\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ncompositionend(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionstart\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompositionstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Inject, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const NGQP_DEFAULT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n};\n\nfunction isAndroid(navigator: Navigator): boolean {\n    return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n}\n\n@Directive({\n    selector: 'input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]',\n    providers: [NGQP_DEFAULT_VALUE_ACCESSOR],\n})\nexport class DefaultControlValueAccessorDirective implements ControlValueAccessor {\n\n    private readonly supportsComposition: boolean;\n    private composing = false;\n\n    private fnChange = (_: string) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        if (this.supportsComposition && this.composing) {\n            return;\n        }\n\n        this.fnChange((event.target as HTMLInputElement).value);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    @HostListener('compositionstart')\n    public onCompositionStart() {\n        this.composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    public onCompositionEnd(event: UIEvent) {\n        this.composing = false;\n        if (this.supportsComposition) {\n            this.fnChange((event.target as HTMLInputElement).value);\n        }\n    }\n\n    constructor(\n        @Optional() @Inject(PLATFORM_ID) private platformId: string | null,\n        private renderer: Renderer2,\n        private elementRef: ElementRef\n    ) {\n        this.supportsComposition = isPlatformBrowser(this.platformId || '') && !isAndroid(window.navigator);\n    }\n\n    public writeValue(value: string) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultRouterAdapter.html":{"url":"injectables/DefaultRouterAdapter.html","title":"injectable - DefaultRouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultRouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/default-router-adapter.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    url\n                                \n                                \n                                    queryParamMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/router-adapter/default-router-adapter.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        navigate(queryParams: Params, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        queryParamMap\n                    \n                \n\n                \n                    \n                        getqueryParamMap()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouterAdapter, RouterAdapterOptions } from './router-adapter.interface';\n\n/**\n * TODO Documentation\n */\nexport const DefaultRouterAdapterOptions: RouterAdapterOptions = {\n    replaceUrl: true,\n};\n\n/**\n * TODO Documentation\n */\n@Injectable()\nexport class DefaultRouterAdapter implements RouterAdapter {\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    public get url() {\n        return this.router.url;\n    }\n\n    public get queryParamMap() {\n        return this.route.queryParamMap;\n    }\n\n    public navigate(queryParams: Params, extras: RouterAdapterOptions = {}): Promise {\n        return this.router.navigate([], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n            queryParams: queryParams,\n            ...extras,\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectControlValueAccessorDirective.html":{"url":"directives/MultiSelectControlValueAccessorDirective.html","title":"directive - MultiSelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select[multiple][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption(option: MultiSelectOptionDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    MultiSelectOptionDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(values: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MultiSelectOptionDirective } from './multi-select-option.directive';\n\nexport const NGQP_MULTI_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select[multiple][queryParamName]',\n    providers: [NGQP_MULTI_SELECT_VALUE_ACCESSOR],\n})\nexport class MultiSelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    private selectedIds: string[] = [];\n    private options = new Map>();\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T[]) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change')\n    public onChange() {\n        this.selectedIds = Array.from(this.options.entries())\n            .filter(([id, option]) => option.selected)\n            .map(([id]) => id);\n        const values = this.selectedIds.map(id => this.optionMap.get(id));\n        this.fnChange(values);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(values: T[]) {\n        values = values === null ? [] : values;\n        if (!Array.isArray(values)) {\n            throw new Error(`Provided a non-array value to select[multiple]: ${values}`);\n        }\n\n        this.selectedIds = values\n            .map(value => this.getOptionId(value))\n            .filter(id => id !== null);\n        this.options.forEach((option, id) => option.selected = this.selectedIds.includes(id));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(option: MultiSelectOptionDirective): string {\n        const newId = (this.idCounter++).toString();\n        this.options.set(newId, option);\n        return newId;\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n        if (this.selectedIds.includes(id)) {\n            this.onChange();\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectOptionDirective.html":{"url":"directives/MultiSelectOptionDirective.html","title":"directive - MultiSelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: MultiSelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MultiSelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:40\n                                \n                            \n\n                \n                    \n                        setselected(selected: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { MultiSelectControlValueAccessorDirective } from './multi-select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class MultiSelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: MultiSelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption(this);\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n        }\n    }\n\n    public get selected(): boolean {\n        return (this.elementRef.nativeElement as HTMLOptionElement).selected;\n    }\n\n    public set selected(selected: boolean) {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selected', selected);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberControlValueAccessorDirective.html":{"url":"directives/NumberControlValueAccessorDirective.html","title":"directive - NumberControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/number-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=number][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/number-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_NUMBER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=number][queryParamName]',\n    providers: [NGQP_NUMBER_VALUE_ACCESSOR],\n})\nexport class NumberControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParam.html":{"url":"classes/QueryParam.html","title":"class - QueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                param\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: QueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:174\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combineWith:     ParamCombinator\n\n                    \n                \n                    \n                        \n                            Type :     ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:171\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debounceTime:     number | null\n\n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:168\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserialize:     ParamDeserializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamDeserializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:162\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        multi:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:165\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        param:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:156\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serialize:     ParamSerializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamSerializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:159\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:153\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:150\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:240\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: T | null, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:229\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        group(queryParams: literal type, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:86\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:87\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:88\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryParam, QueryParamOpts, QueryParamGroup } from './model';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\ntype OverwritePartial = Pick> & Partial>;\nexport type QueryParamOptsInput = OverwritePartial, 'serialize' | 'deserialize' | 'compareWith'>;\n\n/**\n * TODO Documentation\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * TODO Documentation\n     */\n    public group(\n        queryParams: { [ name: string ]: QueryParam | string },\n        extras: RouterAdapterOptions = {}\n    ): QueryParamGroup {\n        const mappedQueryParams: { [ queryParamName: string ]: QueryParam } = {};\n        Object.keys(queryParams).forEach(queryParamName => {\n            mappedQueryParams[ queryParamName ] = this.createQueryParam(queryParams[ queryParamName ]);\n        });\n\n        // TODO Maybe we should first validate that no two queryParams defined the same \"param\".\n        return new QueryParamGroup(mappedQueryParams, extras);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public stringParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public stringParam(opts: QueryParamOptsInput): QueryParam;\n    public stringParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public numericParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public numericParam(opts: QueryParamOptsInput): QueryParam;\n    public numericParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public booleanParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public booleanParam(opts: QueryParamOptsInput): QueryParam;\n    public booleanParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public param(opts: QueryParamOpts & { multi: true }): QueryParam;\n    public param(opts: QueryParamOpts): QueryParam;\n    public param(opts: QueryParamOpts): QueryParam {\n        return new QueryParam(opts);\n    }\n\n    private createQueryParam(queryParam: QueryParam | string): QueryParam {\n        if (queryParam instanceof QueryParam) {\n            return queryParam;\n        }\n\n        return this.stringParam({\n            param: queryParam,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                queryParams\n                            \n                            \n                                    Public\n                                    Readonly\n                                routerOptions\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams: literal type, extras: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            queryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryParams:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:60\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            routerOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:63\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:57\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:132\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(queryParamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:86\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patchValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        patchValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:101\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:119\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model.ts:91\n                                \n                            \n                    \n                        \n                                TODO Documentation \n\n\n                                \n                                    Returns :     QueryParamGroupValue\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerAdapter: RouterAdapter, globalRouterOptions: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-group.directive.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerAdapter\n                                                  \n                                                        \n                                                                    RouterAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalRouterOptions\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    QueryParamGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { concatMap, debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { NGQP_ROUTER_ADAPTER, NGQP_ROUTER_OPTIONS, RouterAdapter, RouterAdapterOptions } from './router-adapter/router-adapter.interface';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParam, QueryParamGroup, QueryParamGroupValue, Unpack } from './model';\nimport { isMissing } from './util';\n\n/** TODO Documentation */\nfunction isMultiQueryParam(queryParam: QueryParam): queryParam is QueryParam {\n    return queryParam.multi;\n}\n\n/** TODO Documentation */\nfunction hasArrayValue(queryParam: QueryParam, value: T | T[]): value is T[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/** TODO Documentation */\nfunction hasArraySerialization(queryParam: QueryParam, values: string | string[]): values is string[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamGroup]',\n})\nexport class QueryParamGroupDirective implements OnInit, OnDestroy {\n\n    /** TODO Documentation */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    /** TODO Documentation */\n    private directives: QueryParamNameDirective[] = [];\n\n    /** TODO Documentation @internal */\n    private queue$ = new Subject();\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(NGQP_ROUTER_ADAPTER) private routerAdapter: RouterAdapter,\n        @Optional() @Inject(NGQP_ROUTER_OPTIONS) private globalRouterOptions: RouterAdapterOptions\n    ) {\n        this.setupNavigationQueue();\n    }\n\n    public ngOnInit() {\n        if (!this.queryParamGroup) {\n            throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n        }\n\n        this.queryParamGroup._registerOnChange((value: QueryParamGroupValue) => {\n            let params: Params = {};\n            Object.keys(value).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                if (isMissing(queryParam)) {\n                    return;\n                }\n\n                params = { ...params, ...this.getParamsForValue(queryParam, value[ queryParamName ]) };\n            });\n\n            this.enqueueNavigation(params);\n        });\n\n        Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n            const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n            queryParam._registerOnChange((newValue: any) =>\n                this.enqueueNavigation(this.getParamsForValue(queryParam, newValue))\n            );\n        });\n\n        this.routerAdapter.queryParamMap.subscribe(queryParamMap => {\n            Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                const newValue = this.deserialize(queryParam,\n                    queryParam.multi ? queryParamMap.getAll(queryParam.param) : queryParamMap.get(queryParam.param)\n                );\n\n                // Get the directive, if it has been initialized yet.\n                const directive = this.directives.find(dir => dir.name === queryParamName);\n                if (!isMissing(directive)) {\n                    directive.valueAccessor.writeValue(newValue);\n                }\n\n                queryParam.value = newValue;\n                queryParam._updateValue({ emitEvent: true, onlySelf: true });\n            });\n\n            // We used onlySelf on the queryParams so that we can emit only once on the entire group.\n            this.queryParamGroup._updateValue({ emitEvent: true });\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public addQueryParam(directive: QueryParamNameDirective): void {\n        const queryParam: QueryParam = this.queryParamGroup.get(directive.name);\n        if (!queryParam) {\n            throw new Error(`Could not find query param with name ${directive.name}. Did you forget to add it to your QueryParamGroup?`);\n        }\n        if (!directive.valueAccessor) {\n            throw new Error(`No value accessor found for the form control. Please make sure to implement ControlValueAccessor on this component.`);\n        }\n\n        // Chances are that we read the initial route before a directive has been registered here.\n        // The value in the model will be correct, but we need to sync it to the view once initially.\n        directive.valueAccessor.writeValue(queryParam.value);\n\n        // Proxy updates from the view to debounce them (if needed).\n        const debouncedQueue$ = new Subject();\n        debouncedQueue$.pipe(\n            !isMissing(queryParam.debounceTime) ? debounceTime(queryParam.debounceTime) : tap(),\n            map((newValue: any) => this.getParamsForValue(queryParam, newValue)),\n            takeUntil(this.destroy$),\n        ).subscribe(params => this.enqueueNavigation(params));\n\n        directive.valueAccessor.registerOnChange((newValue: any) => debouncedQueue$.next(newValue));\n\n        this.directives.push(directive);\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    private setupNavigationQueue() {\n        this.queue$.pipe(\n            takeUntil(this.destroy$),\n            concatMap(params => this.routerAdapter.navigate(params, this.routerOptions)),\n        ).subscribe();\n    }\n\n    private enqueueNavigation(params: Params): void {\n        this.queue$.next(params);\n    }\n\n    private getParamsForValue(queryParam: QueryParam, value: T): Params {\n        const newValue = this.serialize(queryParam, value);\n\n        const combinedParams: Params = isMissing(queryParam.combineWith)\n            ? {} : queryParam.combineWith(queryParam.value, value);\n\n        return {\n            ...combinedParams,\n            [ queryParam.param ]: newValue,\n        };\n    }\n\n    private serialize(queryParam: QueryParam, value: T): string[] {\n        return hasArrayValue(queryParam, value)\n            ? (value || []).map(queryParam.serialize)\n            : [queryParam.serialize(value)];\n    }\n\n    private deserialize(queryParam: QueryParam, values: string | string[]): Unpack | Unpack[] {\n        if (hasArraySerialization(queryParam, values)) {\n            return values.map(queryParam.deserialize);\n        } else {\n            return queryParam.deserialize(values);\n        }\n    }\n\n    private get routerOptions(): RouterAdapterOptions {\n        const groupOptions = this.queryParamGroup ? this.queryParamGroup.routerOptions : {};\n\n        return {\n            ...this.globalRouterOptions,\n            ...groupOptions,\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamGroupValue.html":{"url":"interfaces/QueryParamGroupValue.html","title":"interface - QueryParamGroupValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamGroupValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [queryParamName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param.module.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { ControlValueAccessorDirective } from './control-value-accessor.directive';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterAdapterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterAdapterOptions\n} from './router-adapter/router-adapter';\n\nconst DIRECTIVES: Type[] = [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterAdapterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static forRoot(config: { routerOptions?: RouterAdapterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: config.routerOptions ? config.routerOptions : DefaultRouterAdapterOptions,\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                valueAccessor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: QueryParamGroupDirective, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    QueryParamGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            valueAccessor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAccessor:     ControlValueAccessor | null\n\n                    \n                \n                    \n                        \n                            Type :     ControlValueAccessor | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Inject, Input, OnInit, Optional, Self, SkipSelf } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { DefaultControlValueAccessorDirective, NGQP_BUILT_IN_ACCESSORS } from './accessors/accessors';\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements OnInit {\n\n    /** TODO Documentation */\n    @Input('queryParamName')\n    public name: string;\n\n    /** TODO Documentation */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() @Host() @SkipSelf() private parent: QueryParamGroupDirective,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.parent) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = this.selectValueAccessor(valueAccessors);\n    }\n\n    public ngOnInit() {\n        if (!this.name) {\n            throw new Error(`queryParamName has been added, but without specifying the name.`);\n        }\n\n        this.setupQueryParam();\n    }\n\n    /**\n     * This resembles the selectControlValueAccessor function from\n     *   https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#L186\n     * We can't use it directly since it isn't exported in the public API, but let's hope choosing\n     * any accessor is good enough for our purposes.\n     */\n    private selectValueAccessor(valueAccessors: ControlValueAccessor[]): ControlValueAccessor | null {\n        if (!valueAccessors || !Array.isArray(valueAccessors)) {\n            return null;\n        }\n\n        let defaultAccessor: ControlValueAccessor | null = null;\n        let builtInAccessor: ControlValueAccessor | null = null;\n        let customAccessor: ControlValueAccessor | null = null;\n        valueAccessors.forEach(valueAccessor => {\n            if (valueAccessor.constructor === DefaultControlValueAccessorDirective) {\n                defaultAccessor = valueAccessor;\n            } else if (NGQP_BUILT_IN_ACCESSORS.some(current => valueAccessor.constructor === current)) {\n                if (builtInAccessor !== null) {\n                    throw new Error(`More than one built-in ControlValueAccessor matches`);\n                }\n\n                builtInAccessor = valueAccessor;\n            } else {\n                if (customAccessor !== null) {\n                    throw new Error(`More than one custom ControlValueAccessor has been found on the form control`);\n                }\n\n                customAccessor = valueAccessor;\n            }\n        });\n\n        if (customAccessor !== null) {\n            return customAccessor;\n        }\n\n        if (builtInAccessor !== null) {\n            return builtInAccessor;\n        }\n\n        if (defaultAccessor !== null) {\n            return defaultAccessor;\n        }\n\n        throw new Error(`No matching ControlValueAccessor has been found for this form control`);\n    }\n\n    private setupQueryParam(): void {\n        this.parent.addQueryParam(this);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOpts.html":{"url":"interfaces/QueryParamOpts.html","title":"interface - QueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        multi\n                                \n                                \n                                        param\n                                \n                                \n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:     ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:     Comparator>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:     ParamDeserializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamDeserializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     Unpack\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Unpack\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (+ not supported in multi-mode) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     ParamSerializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamSerializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RangeControlValueAccessorDirective.html":{"url":"directives/RangeControlValueAccessorDirective.html","title":"directive - RangeControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RangeControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/range-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_RANGE_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=range][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/range-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_RANGE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=range][queryParamName]',\n    providers: [NGQP_RANGE_VALUE_ACCESSOR],\n})\nexport class RangeControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterAdapter.html":{"url":"interfaces/RouterAdapter.html","title":"interface - RouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        queryParamMap\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    navigate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(queryParams: Params, extras?: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/router-adapter.interface.ts:23\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryParamMap\n                                    \n                                \n                                \n                                    \n                                        queryParamMap:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { NavigationExtras, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * TODO Documentation\n */\nexport interface RouterAdapter {\n\n    /**\n     * TODO Documentation\n     */\n    url: string;\n\n    /**\n     * TODO Documentation\n     */\n    queryParamMap: Observable;\n\n    /**\n     * TODO Documentation\n     */\n    navigate(queryParams: Params, extras?: RouterAdapterOptions): Promise;\n\n}\n\n/**\n * TODO Documentation\n */\nexport type RouterAdapterOptions = Pick;\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectControlValueAccessorDirective.html":{"url":"directives/SelectControlValueAccessorDirective.html","title":"directive - SelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select:not([multiple])[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-control-value-accessor.directive.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T | null\n\n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select:not([multiple])[queryParamName]',\n    providers: [NGQP_SELECT_VALUE_ACCESSOR],\n})\nexport class SelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    public value: T | null = null;\n    private selectedId: string | null = null;\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onChange(event: UIEvent) {\n        this.selectedId = (event.target as HTMLOptionElement).value;\n        this.value = this.optionMap.get(this.selectedId);\n        this.fnChange(this.value);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: T) {\n        this.value = value;\n\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(): string {\n        return (this.idCounter++).toString();\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n\n        if (this.selectedId === id) {\n            this.fnChange(value);\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectOptionDirective.html":{"url":"directives/SelectOptionDirective.html","title":"directive - SelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: SelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    SelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { SelectControlValueAccessorDirective } from './select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class SelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: SelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption();\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.5.0 (2019-01-03)\nBug Fixes\n\ncore: Do not create an empty-on serializer if emptyOn wasn't given (f394fa6)\ncore: Fix list of built-in accessors (2e39369)\ncore: Remove customParam and replace it with param (60377e5)\ncore: Split accessors into one directive per file (a0bde9b)\ncore: Use correct param name in shorthand syntax (f526b61)\ncore: use multi property rather than checking value type (781f009)\ncore: Use proper type in accessor (5d90b63)\ndocs: Fix demo-browser in responsive case (bbaf6e4)\ndocs: Fix first TOC item (0f566ad)\ndocs: Fix fragment misalignment (f02d26d)\ndocs: Fix link to GitHub (2f2675e)\ndocs: Fix margin on fragment headings (07c103e)\ndocs: Fix overflows on small screens (e100621)\ndocs: Fix typo (c6b3a1e)\ndocs: Improve responsiveness of example (c6cd845)\ndocs: Make demo-browser content overflow if necessary (48f2da4)\ndocs: Remove GitHub button for now (aadad1b), closes #36\ndocs: Use PNG instead of SVG (cfa25df)\n\nFeatures\n\ndocs: Added Google Analytics (aea857a), closes #35\n\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            addModuleToImports   (schematics/.../index.ts)\n                        \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            getAngularMajorVersion   (schematics/.../index.ts)\n                        \n                        \n                            getMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            hasArraySerialization   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            hasArrayValue   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            isAndroid   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            isFunction   (src/.../util.ts)\n                        \n                        \n                            isMissing   (src/.../util.ts)\n                        \n                        \n                            isMultiQueryParam   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            Unnamed function   (schematics/.../index.ts)\n                        \n                        \n                            wrapTryCatch   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMatchingVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addModuleToImports\n                            \n                            \n                        \n                    \n                \n                \n                    \naddModuleToImports(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAngularMajorVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAngularMajorVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingVersion(angularVersion, context)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularVersion\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Unnamed function\n                            \n                            \n                        \n                    \n                \n                \n                    \nUnnamed function(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnDeserializer(deserializer, emptyOn)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deserializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnSerializer(serializer, emptyOn, compareWith)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        compareWith\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/query-param-group.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasArraySerialization\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArraySerialization(queryParam, values)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        values\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasArrayValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArrayValue(queryParam, value)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMultiQueryParam\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMultiQueryParam(queryParam)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isAndroid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAndroid(navigator)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFunction(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMissing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMissing(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapTryCatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nwrapTryCatch(fn, msg)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nngqp – Declaratively synchronize form controls with the URL\n\n  \n\n\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nInstallation\nSimply run ng add @ngqp/core – that's it! We will automatically install ngqp and import it into your app.\nIf you want, you can also avoid running schematics. Just run yarn add @ngqp/core (or npm install --save @ngqp/core) and import the QueryParamModule into your app module:\nimport { NgModule } from '@angular/core';\nimport { QueryParamModule } from '@ngqp/core';\n\n@NgModule({\n    imports: [\n        QueryParamModule\n    ],\n})\nexport class AppModule {}Make sure that your app is set up to use routing (i.e., using RouterModule).\nUsage\nThis section is a work in progress since ngqp is still in an early development stage.\nContributing\nPlease see CONTRIBUTING.md.\nI want to know more\nWhy should I care?\nAngular's router system makes it easy to organize different views under different routes, but often the state of a specific\nroute is not reflected in the URL. This makes it impossible to bookmark or share them as on every new page load the user has\nto set these states manually.\nWith ngqp, you can easily synchronize the state of form controls such as input boxes, dropdowns or your own custom controls\nwith a query parameter on the current URL. This way the URL becomes the single source of truth for this information, which\nallows users to share or bookmark these links and reload your page without having to worry about losing their current state.\nWhat can this be used for?\nngqp will work with any kind of control, but the common scenario would be pagination (i.e., which page a user is on) or\nfilter settings (search query, selections, …)\n\nLicensed under the MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../util.ts)\n                        \n                        \n                            OnChangeFunction   (src/.../model.ts)\n                        \n                        \n                            OverwritePartial   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            ParamCombinator   (src/.../model.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../model.ts)\n                        \n                        \n                            ParamSerializer   (src/.../model.ts)\n                        \n                        \n                            QueryParamOptsInput   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            RouterAdapterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            Unpack   (src/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/util.ts\n    \n        \n            \n                \n                    \n                        \n                        Comparator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Comparator:     function\n\n                    \n                \n            \n        \n\n    src/lib/model.ts\n    \n        \n            \n                \n                    \n                        \n                        OnChangeFunction\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        OnChangeFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamCombinator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamCombinator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamDeserializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamDeserializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamSerializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamSerializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Unpack\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Unpack:     \n\n                    \n                \n            \n        \n\n    src/lib/query-param-builder.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OverwritePartial\n                    \n                \n                \n                    \n                        OverwritePartial:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryParamOptsInput\n                    \n                \n                \n                    \n                        QueryParamOptsInput:     OverwritePartial | \"serialize\" | \"deserialize\" | \"compareWith\">\n\n                    \n                \n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        RouterAdapterOptions\n                    \n                \n                    \n                        \n                            TODO Documentation\n\n                        \n                    \n                \n                    \n                        RouterAdapterOptions:     Pick\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BOOLEAN_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_BOOLEAN_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DefaultRouterAdapterOptions   (src/.../default-router-adapter.service.ts)\n                        \n                        \n                            DIRECTIVES   (src/.../query-param.module.ts)\n                        \n                        \n                            LOOSE_IDENTITY_COMPARATOR   (src/.../util.ts)\n                        \n                        \n                            NGQP_BUILT_IN_ACCESSORS   (src/.../ngqp-accessors.ts)\n                        \n                        \n                            NGQP_CHECKBOX_VALUE_ACCESSOR   (src/.../checkbox-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_DEFAULT_VALUE_ACCESSOR   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_MODULE_NAME   (schematics/.../index.ts)\n                        \n                        \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR   (src/.../multi-select-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_NUMBER_VALUE_ACCESSOR   (src/.../number-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_RANGE_VALUE_ACCESSOR   (src/.../range-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_ROUTER_ADAPTER   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_SELECT_VALUE_ACCESSOR   (src/.../select-control-value-accessor.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/router-adapter/default-router-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterAdapterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DefaultRouterAdapterOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n}\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/query-param.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DIRECTIVES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DIRECTIVES:     Type[]\n\n                    \n                \n                    \n                        \n                            Type :     Type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOOSE_IDENTITY_COMPARATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOOSE_IDENTITY_COMPARATOR:     \n\n                    \n                \n                    \n                        \n                            Default value : (a: T, b: T) => a == b\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/ngqp-accessors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_BUILT_IN_ACCESSORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_BUILT_IN_ACCESSORS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/checkbox-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_CHECKBOX_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MODULE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MODULE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QueryParamModule'\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/multi-select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MULTI_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/number-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_NUMBER_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/range-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_RANGE_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_RANGE_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_ADAPTER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_ADAPTER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_ADAPTER')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_OPTIONS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
