var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/directives/CheckboxControlValueAccessorDirective.html",[0,0.094,1,1.742]],["body/directives/CheckboxControlValueAccessorDirective.html",[0,0.152,1,2.81,2,0.458,3,0.401,4,0.346,5,4.844,6,1.238,7,0.604,8,1.289,9,1.158,10,1.886,11,1.068,12,0.953,13,4.143,14,1.401,15,4.486,16,0.293,17,0.681,18,0.82,19,2.048,20,2.048,21,2.048,22,2.048,23,2.528,24,2.528,25,2.822,26,0.724,27,1.92,28,2.202,29,2.174,30,0.773,31,3.421,32,0.557,33,0.038,34,0.557,35,0.392,36,0.646,37,1.859,38,2.831,39,1.92,40,1.859,41,2.831,42,2.518,43,2.442,44,2.048,45,3.421,46,2.202,47,0.712,48,1.124,49,2.048,50,3.421,51,2.048,52,1.64,53,3.421,54,2.048,55,2.048,56,2.442,57,0.525,58,1.69,59,1.173,60,1.859,61,0.583,62,0.384,63,0.724,64,1.417,65,0.724,66,0.651,67,0.293,68,0.854,69,1.562,70,1.562,71,1.562,72,2.442,73,2.152,74,2.831,75,3.421,76,1.727,77,2.152,78,2.048,79,1.727,80,1.859,81,2.831,82,1.562,83,1.562,84,0.026,85,0.026]],["title/directives/ControlValueAccessorDirective.html",[0,0.094,86,1.742]],["body/directives/ControlValueAccessorDirective.html",[0,0.149,2,0.439,3,0.383,4,0.331,7,0.608,8,1.233,9,1.125,10,2.107,11,1.022,12,0.994,14,1.361,16,0.28,17,0.661,18,0.825,19,1.99,20,1.99,21,1.99,22,1.99,30,0.765,32,0.549,33,0.038,34,0.549,35,0.405,36,0.637,40,1.806,44,1.99,46,2.164,47,0.729,48,1.226,49,1.99,51,1.99,52,1.392,54,1.495,55,1.99,56,2.337,57,0.51,58,1.846,59,1.123,60,2.03,61,0.558,62,0.28,64,1.806,65,0.922,66,0.83,67,0.28,68,0.743,69,1.495,70,1.495,71,1.495,78,1.495,82,1.495,84,0.026,85,0.026,86,2.932,87,5.798,88,1.022,89,1.497,90,1.226,91,4.358,92,4.899,93,4.899,94,2.473,95,5.439,96,2.059,97,4.358,98,1.668,99,2.709,100,2.709,101,1.238,102,2.709,103,2.337,104,2.059,105,3.273,106,3.273,107,1.02,108,3.273,109,1.837,110,3.273,111,3.273]],["title/directives/DefaultControlValueAccessorDirective.html",[0,0.094,112,1.567]],["body/directives/DefaultControlValueAccessorDirective.html",[0,0.143,2,0.404,3,0.353,4,0.304,6,1.235,7,0.608,8,1.136,9,1.064,10,1.77,11,0.941,12,0.894,14,1.287,16,0.258,17,0.626,18,0.814,19,1.882,20,1.882,21,1.882,22,1.882,23,2.371,24,2.371,26,0.872,28,2.092,29,2.106,30,0.773,32,0.534,33,0.038,34,0.534,35,0.375,36,0.654,37,1.946,39,2.313,40,2.092,42,2.834,44,1.882,46,2.092,47,0.731,48,1.068,49,1.882,51,1.882,52,1.502,54,1.882,55,1.882,57,0.55,58,1.553,59,1.034,60,1.708,61,0.514,62,0.353,63,0.872,64,1.249,65,0.637,66,0.785,67,0.258,68,0.953,69,1.376,70,1.376,71,1.376,73,1.896,74,3.411,76,1.522,77,1.896,78,1.882,80,1.708,82,1.376,83,1.376,84,0.024,85,0.024,96,1.896,101,0.856,104,1.896,112,2.371,113,4.168,114,3.887,115,4.121,116,4.121,117,4.697,118,1.553,119,3.014,120,1.308,121,1.303,122,3.014,123,4.121,124,2.152,125,3.014,126,3.014,127,2.152,128,3.014,129,3.014,130,3.014,131,2.152,132,1.249,133,3.014,134,3.014,135,2.494,136,2.494,137,1.692,138,3.014,139,3.014,140,1.249,141,3.014,142,3.014,143,2.313,144,2.152,145,4.697,146,4.697,147,2.942,148,3.014,149,3.014,150,3.014,151,3.014,152,3.014,153,3.014,154,3.014,155,3.411]],["title/injectables/DefaultRouterAdapter.html",[132,1.286,156,2.215]],["body/injectables/DefaultRouterAdapter.html",[2,0.51,3,0.446,4,0.385,7,0.385,9,0.983,16,0.326,17,0.729,18,0.764,26,0.805,30,0.741,32,0.486,33,0.037,34,0.486,35,0.341,36,0.563,47,0.741,57,0.617,61,0.649,62,0.412,63,0.805,66,0.725,67,0.326,68,0.649,79,1.922,84,0.028,85,0.028,88,1.189,89,1.359,90,1.114,132,2.182,137,2.697,156,3.431,157,3.588,158,4.72,159,1.921,160,3.15,161,1.811,162,3.313,163,4.358,164,3.806,165,3.313,166,5.531,167,3.806,168,3.977,169,1.428,170,2.526,171,1.781,172,3.806,173,1.434,174,1.806,175,3.977,176,3.806,177,3.806,178,3.806,179,3.806,180,1.577,181,3.023,182,1.738,183,2.717,184,2.717,185,3.806,186,3.806,187,3.806,188,3.806,189,3.806,190,3.806,191,2.717]],["title/directives/MultiSelectControlValueAccessorDirective.html",[0,0.094,192,1.417]],["body/directives/MultiSelectControlValueAccessorDirective.html",[0,0.135,2,0.364,3,0.319,4,0.275,6,1.223,7,0.622,8,1.025,9,0.991,10,1.676,11,0.849,12,0.847,14,1.199,16,0.233,17,0.583,18,0.823,19,1.753,20,1.753,21,1.753,22,1.753,23,2.246,24,2.246,25,2.798,26,0.575,27,1.527,28,2.002,29,2.047,30,0.766,32,0.561,33,0.038,34,0.561,35,0.394,36,0.684,37,1.59,44,1.753,46,2.002,47,0.766,48,1.174,49,1.753,51,1.753,52,1.264,54,1.753,55,1.753,57,0.521,58,1.446,59,0.933,60,1.59,61,0.464,62,0.329,63,1.022,64,1.127,65,0.812,66,0.518,67,0.233,68,0.946,69,1.242,70,1.242,71,1.242,72,1.942,76,1.373,78,1.753,79,1.373,80,1.127,82,1.242,83,1.242,84,0.023,85,0.023,98,1.576,103,1.942,104,1.711,107,1.041,109,1.527,120,1.338,121,1.247,124,1.942,131,1.942,192,2.031,193,4.128,194,2.947,195,3.68,196,3.838,197,3.176,198,3.176,199,3.176,200,2.72,201,1.942,202,3.176,203,2.72,204,3.418,205,2.251,206,3.838,207,2.439,208,2.251,209,3.176,210,2.72,211,2.74,212,2.72,213,2.251,214,2.74,215,2.251,216,2.251,217,2.251,218,2.72,219,3.176,220,2.72,221,2.72,222,3.838,223,2.72,224,2.72,225,3.176,226,2.251,227,2.72,228,1.127,229,2.72,230,1.373,231,2.72,232,2.72,233,2.72,234,2.251,235,2.72,236,2.72,237,3.838,238,3.838,239,2.251,240,2.72,241,2.251,242,2.251,243,2.72,244,2.251,245,2.251]],["title/directives/MultiSelectOptionDirective.html",[0,0.094,207,1.567]],["body/directives/MultiSelectOptionDirective.html",[0,0.155,2,0.473,3,0.414,4,0.357,6,0.747,7,0.595,9,1.182,11,1.103,14,1.43,16,0.303,17,0.695,18,0.798,26,0.969,28,2.229,29,2.191,30,0.779,32,0.514,33,0.038,34,0.514,35,0.325,36,0.681,37,2.106,47,0.747,48,1.138,52,1.528,57,0.536,61,0.602,62,0.303,65,0.747,67,0.303,68,0.917,80,1.898,84,0.027,85,0.027,98,1.003,118,1.915,120,0.826,121,1.182,140,1.463,161,1.726,192,2.456,193,4.207,194,3.115,204,2.221,207,2.313,246,2.922,247,3.198,248,3.629,249,3.84,250,3.384,251,2.521,252,2.922,253,2.091,254,4.58,255,2.922,256,2.922,257,1.783,258,3.531,259,3.531,260,3.531,261,3.531,262,3.27,263,2.521,264,2.545,265,3.79,266,3.531,267,2.922,268,2.922,269,2.881,270,2.922,271,2.922,272,3.531,273,3.531,274,3.531]],["title/directives/NumberControlValueAccessorDirective.html",[0,0.094,275,1.742]],["body/directives/NumberControlValueAccessorDirective.html",[0,0.151,2,0.449,3,0.392,4,0.338,6,1.233,7,0.614,8,1.262,9,1.142,10,1.867,11,1.046,12,0.943,14,1.382,16,0.287,17,0.672,18,0.818,19,2.02,20,2.02,21,2.02,22,2.02,23,2.502,24,2.502,26,0.708,27,1.88,28,2.184,29,2.163,30,0.769,32,0.554,33,0.038,34,0.554,35,0.389,36,0.642,37,1.833,39,1.88,40,1.833,42,2.484,43,2.391,44,2.02,46,2.184,47,0.706,48,1.115,49,2.02,51,2.02,52,1.408,54,2.02,55,2.02,57,0.518,58,1.667,59,1.149,60,1.833,61,0.571,62,0.379,63,1.048,64,1.388,65,0.708,66,0.638,67,0.287,68,0.845,69,1.529,70,1.529,71,1.529,73,2.107,76,1.691,77,2.107,78,2.02,79,1.691,80,1.833,82,1.529,83,1.529,84,0.026,85,0.026,96,2.107,99,2.772,100,2.772,104,2.107,109,1.88,118,1.667,121,1.142,127,2.391,144,2.391,147,2.391,155,3.661,201,2.391,275,2.781,276,4.822,277,4.1,278,4.425,279,2.772,280,1.691,281,2.391,282,2.772]],["title/classes/QueryParam.html",[67,0.266,174,1.064]],["body/classes/QueryParam.html",[2,0.239,3,0.209,4,0.18,7,0.588,12,0.34,16,0.153,17,0.425,18,0.82,26,0.593,30,0.704,32,0.478,33,0.038,34,0.396,35,0.409,36,0.405,47,0.571,48,1.111,52,1.464,57,0.499,62,0.431,63,0.829,65,1.089,66,0.34,67,0.296,68,0.726,84,0.016,85,0.016,88,0.557,89,1.596,90,1.307,94,2.15,98,1.538,101,1.114,107,1.145,120,1.205,121,1.378,140,2.431,143,2.653,159,0.557,169,1.378,170,1.28,171,1.08,173,1.477,174,1.767,180,0.74,182,0.815,228,1.873,230,0.901,253,1.28,257,1.979,264,0.815,280,1.979,283,1.002,284,1.28,285,2.747,286,2.386,287,2.086,288,2.176,289,2.319,290,2.001,291,1.763,292,2.823,293,1.785,294,2.747,295,2.39,296,1.785,297,2.695,298,1.785,299,2.39,300,1.785,301,1.785,302,1.785,303,2.39,304,1.785,305,1.785,306,2.39,307,2.176,308,1.785,309,2.176,310,2.465,311,1.785,312,1.785,313,1.747,314,0.815,315,1.573,316,1.002,317,0.901,318,1.942,319,0.74,320,1.002,321,1.002,322,0.612,323,0.815,324,2.39,325,1.123,326,1.002,327,1.415,328,1.123,329,1.002,330,1.763,331,1.056,332,2.15,333,2.352,334,1.624,335,1.415,336,1.002,337,2.282,338,1.123,339,1.123,340,1.123,341,1.304,342,1.763,343,0.901,344,1.763,345,2.679,346,1.002,347,1.123,348,1.123,349,1.942,350,1.763,351,1.763,352,1.123,353,1.763,354,1.123,355,2.653,356,1.002,357,1.002,358,1.123,359,2.679,360,2.176,361,1.763,362,1.763,363,1.123,364,1.123,365,1.123,366,1.123,367,0.74,368,1.123,369,1.123,370,2.465,371,1.123,372,1.123,373,1.123,374,1.123,375,1.123,376,1.123,377,1.123,378,1.123,379,1.123,380,1.002,381,1.123,382,1.123,383,1.573,384,1.002,385,1.573,386,1.123,387,1.002,388,1.123,389,1.123,390,1.123,391,1.002,392,1.123,393,1.002,394,1.123,395,1.123,396,1.123,397,1.123]],["title/injectables/QueryParamBuilder.html",[132,1.286,398,2.568]],["body/injectables/QueryParamBuilder.html",[2,0.327,3,0.286,4,0.246,7,0.246,16,0.209,17,0.539,18,0.837,30,0.78,32,0.596,33,0.038,34,0.588,35,0.419,36,0.676,47,0.806,57,0.572,61,0.416,62,0.304,63,0.516,65,0.972,66,0.875,67,0.209,68,0.416,84,0.021,85,0.021,88,0.762,89,1.49,90,1.21,98,1.189,107,1.143,120,1.075,132,1.734,159,0.762,169,1.563,170,2.098,171,1.435,173,0.919,174,2.143,182,1.114,287,1.904,288,2.023,292,2.721,294,3.291,310,2.233,319,1.011,322,0.837,323,1.114,333,1.911,334,1.904,341,1.577,398,2.937,399,2.658,400,2.018,401,4.217,402,2.987,403,4.217,404,4.217,405,5.096,406,5.011,407,2.439,408,2.439,409,2.439,410,2.439,411,2.439,412,5.096,413,2.439,414,2.439,415,2.439,416,5.096,417,2.439,418,2.439,419,2.439,420,5.096,421,2.439,422,2.439,423,2.439,424,2.937,425,2.937,426,2.937,427,2.937,428,2.937,429,2.937,430,3.803,431,2.937,432,1.741,433,2.439,434,2.439,435,2.439,436,3.549,437,2.439,438,2.439,439,2.439,440,2.018,441,2.018,442,2.439,443,2.439,444,2.439,445,2.439,446,2.439,447,2.439,448,2.439]],["title/classes/QueryParamGroup.html",[67,0.266,341,1.169]],["body/classes/QueryParamGroup.html",[2,0.245,3,0.214,4,0.184,7,0.589,12,0.348,16,0.156,17,0.433,18,0.813,26,0.603,30,0.679,32,0.512,33,0.038,34,0.461,35,0.416,36,0.504,47,0.661,48,1.135,52,1.401,57,0.504,62,0.434,63,0.839,65,1.008,66,0.348,67,0.301,68,0.734,84,0.017,85,0.017,88,0.57,89,1.595,90,1.307,94,2.173,98,1.44,101,1.127,107,1.154,120,1.213,121,1.111,140,2.326,143,2.676,159,0.57,161,1.075,169,1.309,170,1.812,171,1.489,173,1.495,174,1.888,180,0.756,182,0.834,228,1.89,230,0.922,253,1.302,257,2.003,264,0.834,280,1.44,283,1.025,284,1.302,285,2.416,286,2.003,287,1.89,288,2.044,289,2.36,290,2.036,291,1.148,292,2.49,294,2.845,295,1.97,297,2.304,299,1.97,303,1.97,306,2.416,307,2.208,309,2.208,310,3.261,313,1.772,314,0.834,315,1.601,316,1.025,317,0.922,318,1.97,319,0.756,320,1.025,321,1.025,322,0.626,323,0.834,324,2.416,325,1.148,326,1.025,327,1.44,328,1.148,329,1.025,330,1.794,331,1.075,332,2.618,333,2.412,334,1.644,335,1.44,336,1.025,337,2.304,338,1.148,339,1.148,340,1.148,341,1.495,342,1.794,343,2.003,344,1.794,345,2.708,346,1.025,347,1.148,348,1.148,349,1.97,350,1.794,351,1.794,352,1.794,353,1.794,354,1.794,355,2.676,356,1.025,357,1.025,358,1.148,359,2.708,360,2.208,361,1.794,362,1.794,363,1.148,364,1.148,365,1.148,366,1.148,367,0.756,368,1.148,369,1.148,370,2.496,371,1.148,372,1.148,373,1.148,374,1.148,375,1.148,376,1.148,377,1.148,378,1.148,379,1.148,380,1.025,381,1.148,382,1.148,383,1.601,384,1.025,385,1.601,386,1.148,387,1.025,388,1.148,389,1.148,390,1.148,391,1.025,392,1.148,393,1.025,394,1.148,395,1.148,396,1.148,397,1.148,449,2.36,450,1.825,451,1.825,452,1.825,453,1.825,454,1.825,455,1.825,456,1.825,457,1.825,458,1.825,459,1.825,460,1.825]],["title/directives/QueryParamGroupDirective.html",[0,0.094,461,1.567]],["body/directives/QueryParamGroupDirective.html",[0,0.163,2,0.322,3,0.282,4,0.243,6,0.509,7,0.591,9,1.071,10,0.906,11,0.751,14,1.097,16,0.206,17,0.533,18,0.719,26,0.743,30,0.612,32,0.243,33,0.038,34,0.355,35,0.249,36,0.486,47,0.756,48,0.966,57,0.629,61,0.41,62,0.206,63,1.177,66,0.79,67,0.206,68,0.962,84,0.021,85,0.021,88,0.751,89,1.456,90,1.193,98,1.38,101,1.179,107,1.187,118,1.564,120,1.226,132,0.996,159,0.751,161,0.906,165,1.513,169,1.51,171,1.516,174,2.051,180,0.996,181,3.19,182,1.098,214,1.717,228,1.72,247,2.611,248,2.963,249,3.259,250,2.872,286,1.214,313,2.305,314,1.098,317,1.214,319,0.996,322,0.825,323,1.604,326,2.846,327,2.096,332,1.774,333,1.604,341,2.097,343,1.214,346,1.35,349,2.33,355,1.972,356,1.35,357,1.35,367,1.456,393,1.972,399,2.217,402,2.508,461,1.774,462,1.99,463,2.405,464,4.151,465,2.405,466,2.405,467,2.405,468,2.405,469,2.405,470,2.405,471,3.513,472,2.405,473,1.513,474,1.513,475,2.096,476,1.99,477,3.435,478,3.513,479,2.907,480,2.907,481,2.405,482,1.99,483,2.405,484,2.405,485,2.405,486,2.405,487,3.513,488,2.405,489,1.717,490,2.405,491,2.405,492,1.972,493,2.405,494,4.151,495,3.513,496,3.513,497,3.513,498,2.405,499,2.405,500,2.405,501,3.513,502,2.405,503,2.405,504,3.435,505,2.405,506,2.405,507,2.405,508,2.405,509,2.405,510,2.405,511,2.405,512,3.513,513,2.405,514,2.405,515,2.405,516,2.405,517,2.405,518,2.405,519,2.405,520,2.405,521,2.405,522,1.99,523,1.513,524,2.405,525,1.99,526,1.99,527,1.717,528,1.99,529,1.717,530,1.99,531,1.99,532,2.405,533,2.405,534,2.405,535,2.405,536,2.405,537,1.99,538,2.907,539,2.405,540,2.907,541,2.405,542,2.405,543,1.99,544,2.405,545,2.405,546,2.405,547,2.405,548,2.405,549,2.405,550,3.513,551,2.405,552,2.405,553,2.405,554,2.405,555,2.405,556,2.405,557,2.405,558,2.405,559,2.405,560,2.405,561,2.405,562,2.405,563,2.405,564,3.513,565,2.405,566,2.405,567,2.405,568,2.405,569,2.405,570,2.405,571,2.405,572,2.405,573,2.405,574,3.513,575,2.405,576,2.405]],["title/interfaces/QueryParamGroupValue.html",[331,1.169,332,1.567]],["body/interfaces/QueryParamGroupValue.html",[2,0.278,3,0.243,4,0.21,7,0.571,12,0.396,16,0.178,18,0.793,26,0.439,30,0.278,32,0.429,33,0.038,34,0.21,35,0.324,47,0.51,48,1.114,52,1.461,57,0.535,62,0.451,63,0.898,65,1.056,66,0.396,67,0.27,68,0.779,84,0.019,85,0.019,88,0.649,89,1.595,90,1.307,94,1.591,98,1.496,101,1.207,107,1.204,120,1.232,121,1.179,140,2.225,143,2.802,159,0.649,169,1.359,170,1.439,171,1.189,174,1.806,180,0.861,182,0.949,228,1.991,230,1.049,253,1.439,257,1.922,264,0.949,280,1.591,283,1.166,285,2.563,286,2.145,287,1.991,288,2.131,291,1.307,292,2.597,294,2.384,295,2.136,297,2.426,299,2.136,303,2.136,306,2.136,307,1.982,309,1.982,313,1.922,314,0.949,315,1.769,316,1.166,317,1.049,318,2.136,319,0.861,320,1.166,321,1.166,322,0.713,323,0.949,324,2.563,325,1.307,326,1.166,327,1.591,328,1.307,329,1.166,330,1.982,331,1.434,332,2.426,333,2.491,334,1.76,335,1.591,336,1.166,337,2.426,338,1.307,339,1.307,340,1.307,341,1.434,342,1.982,343,1.049,344,1.982,345,2.872,346,1.166,347,1.307,348,1.307,349,2.136,350,1.982,351,1.982,352,1.307,353,1.982,354,1.307,355,2.802,356,1.166,357,1.166,358,1.307,359,2.872,360,2.394,361,1.982,362,1.982,363,1.307,364,1.307,365,1.307,366,1.307,367,0.861,368,1.307,369,1.307,370,2.672,371,1.307,372,1.307,373,1.307,374,1.307,375,1.307,376,1.307,377,1.307,378,1.307,379,1.307,380,1.166,381,1.307,382,1.307,383,1.769,384,1.166,385,1.769,386,1.307,387,1.166,388,1.307,389,1.307,390,1.307,391,1.166,392,1.307,393,1.166,394,1.307,395,1.307,396,1.307,397,1.307,577,2.078]],["title/modules/QueryParamModule.html",[578,1.417,579,1.567]],["body/modules/QueryParamModule.html",[0,0.145,1,3.322,2,0.414,3,0.362,4,0.312,6,0.653,7,0.423,12,1.047,17,0.469,18,0.414,30,0.414,32,0.312,33,0.038,34,0.312,35,0.379,36,0.362,47,0.562,57,0.659,61,0.527,62,0.437,63,0.653,67,0.265,84,0.025,85,0.025,86,3.322,112,2.989,156,2.992,159,0.965,161,1.164,169,1.082,171,1.309,173,1.164,183,3.396,192,2.703,207,2.989,263,2.205,275,3.322,310,2.636,322,1.059,343,1.56,367,1.736,399,1.914,461,2.989,473,2.636,474,2.992,475,2.989,476,2.556,578,1.914,579,3.197,580,1.734,581,2.556,582,3.396,583,2.205,584,2.556,585,2.556,586,2.556,587,3.322,588,2.989,589,3.322,590,3.468,591,2.556,592,2.205,593,2.556,594,4.191,595,2.556,596,4.191,597,3.089,598,2.556,599,4.757,600,3.936,601,2.556,602,2.556,603,3.089,604,3.089,605,4.191,606,4.191]],["title/directives/QueryParamNameDirective.html",[0,0.094,475,1.567]],["body/directives/QueryParamNameDirective.html",[0,0.144,2,0.41,3,0.358,4,0.309,6,0.88,7,0.309,9,1.074,10,2.283,11,0.955,14,1.3,16,0.262,17,0.632,18,0.765,26,0.88,30,0.681,32,0.309,33,0.038,34,0.478,35,0.336,36,0.595,47,0.712,48,0.88,57,0.595,58,1.152,59,1.049,61,0.521,62,0.357,67,0.262,68,0.807,84,0.024,85,0.03,88,0.955,89,1.415,90,1.16,101,0.869,107,1.244,112,2.102,118,1.783,120,0.974,121,1.583,132,1.267,161,1.152,169,1.415,173,1.152,228,2.202,247,2.977,250,3.195,251,2.183,253,2.161,262,2.971,264,1.396,284,1.9,333,2.319,341,1.152,367,1.267,399,2.426,461,2.565,475,2.102,489,2.183,492,1.716,522,2.53,523,1.923,525,3.444,526,3.916,527,2.971,601,2.53,602,2.53,607,3.058,608,5.908,609,4.162,610,3.058,611,3.058,612,4.162,613,4.162,614,2.53,615,3.058,616,3.058,617,3.058,618,3.058,619,3.058,620,3.058,621,3.058,622,2.183,623,3.058,624,3.058,625,2.53,626,3.058,627,3.058,628,3.058,629,3.058,630,2.53,631,2.183,632,3.058,633,3.058,634,3.058,635,3.058,636,3.058,637,2.53,638,3.058,639,3.058,640,5.08,641,5.314,642,5.314,643,3.058,644,4.162,645,3.058,646,2.53,647,4.162,648,3.444,649,2.53,650,2.53,651,3.058,652,3.058]],["title/interfaces/QueryParamOpts.html",[292,1.567,331,1.169]],["body/interfaces/QueryParamOpts.html",[2,0.26,3,0.227,4,0.196,7,0.569,12,0.369,16,0.166,18,0.785,26,0.41,32,0.414,33,0.038,34,0.196,35,0.392,36,0.589,47,0.489,48,1.092,52,1.498,57,0.518,62,0.442,63,0.867,65,1.135,66,0.369,67,0.256,68,0.755,84,0.018,85,0.018,88,0.606,89,1.602,90,1.312,94,1.509,98,1.467,101,1.164,107,1.178,120,1.234,121,1.258,140,2.184,143,2.735,159,0.606,169,1.406,170,1.365,171,1.139,174,1.808,180,0.804,182,0.886,228,1.938,230,1.509,253,1.365,257,1.841,264,0.886,280,2.069,283,1.089,284,1.365,285,2.824,286,2.461,287,2.139,288,2.256,291,1.22,292,2.607,294,2.3,295,2.485,297,2.361,299,2.485,303,2.485,306,2.047,307,1.88,309,1.88,313,1.841,314,0.886,315,2.3,316,1.089,317,0.979,318,2.047,319,0.804,320,1.089,321,1.089,322,0.665,323,0.886,324,2.485,325,1.22,326,1.089,327,2.069,328,1.22,329,1.089,330,1.88,331,1.374,332,2.235,333,2.407,334,2.019,335,1.841,336,1.678,337,2.607,338,1.88,339,1.88,340,1.88,341,1.374,342,1.88,343,0.979,344,1.88,345,2.785,346,1.089,347,1.22,348,1.22,349,2.047,350,1.88,351,1.88,352,1.22,353,1.88,354,1.22,355,2.735,356,1.089,357,1.089,358,1.22,359,2.785,360,2.294,361,1.88,362,1.88,363,1.22,364,1.22,365,1.22,366,1.22,367,0.804,368,1.22,369,1.22,370,2.578,371,1.22,372,1.22,373,1.22,374,1.22,375,1.22,376,1.22,377,1.22,378,1.22,379,1.22,380,1.089,381,1.22,382,1.22,383,1.678,384,1.089,385,1.678,386,1.22,387,1.089,388,1.22,389,1.22,390,1.22,391,1.089,392,1.22,393,1.089,394,1.22,395,1.22,396,1.22,397,1.22]],["title/directives/RangeControlValueAccessorDirective.html",[0,0.094,587,1.742]],["body/directives/RangeControlValueAccessorDirective.html",[0,0.152,2,0.454,3,0.397,4,0.343,6,1.236,7,0.607,8,1.278,9,1.152,10,1.878,11,1.059,12,0.949,14,1.393,16,0.291,17,0.677,18,0.819,19,2.037,20,2.037,21,2.037,22,2.037,23,2.517,24,2.517,26,0.717,27,1.903,28,2.194,29,2.17,30,0.772,32,0.556,33,0.038,34,0.556,35,0.391,36,0.644,37,1.848,39,1.903,40,1.848,42,2.504,43,2.421,44,2.037,46,2.194,47,0.71,48,1.12,49,2.037,51,2.037,52,1.416,54,2.037,55,2.037,57,0.522,58,1.681,59,1.163,60,1.848,61,0.578,62,0.382,63,0.943,64,1.405,65,0.717,66,0.646,67,0.291,68,0.85,69,1.548,70,1.548,71,1.548,73,2.133,76,1.712,77,2.133,78,2.037,79,1.712,80,1.848,82,1.548,83,1.548,84,0.026,85,0.026,96,2.133,109,1.903,118,1.681,121,0.875,124,2.421,127,2.421,144,2.421,147,2.421,201,2.421,279,2.806,280,1.712,281,2.421,282,3.691,587,2.798,653,4.835,654,4.125,655,4.461,656,3.391,657,3.391]],["title/interfaces/RouterAdapter.html",[181,1.952,331,1.169]],["body/interfaces/RouterAdapter.html",[2,0.528,3,0.462,4,0.398,16,0.338,17,0.746,30,0.528,32,0.398,33,0.038,34,0.398,35,0.398,36,0.462,47,0.528,57,0.627,61,0.672,62,0.48,63,1.039,84,0.029,85,0.029,88,1.231,89,1.588,90,1.301,107,1.15,120,1.253,137,2.758,157,3.091,162,3.524,163,4.636,168,4.066,169,1.446,170,2.444,171,1.75,174,1.353,175,4.066,180,1.634,181,3.091,284,2.243,306,3.145,314,1.801,322,1.685,331,1.851,432,2.815,473,2.481,474,2.481,658,2.815,659,3.943,660,3.943,661,3.943,662,3.943,663,3.943,664,3.263,665,3.263]],["title/directives/SelectControlValueAccessorDirective.html",[0,0.094,588,1.567]],["body/directives/SelectControlValueAccessorDirective.html",[0,0.137,2,0.374,3,0.327,4,0.282,6,1.24,7,0.625,8,1.052,9,1.009,10,1.7,11,0.872,12,0.859,14,1.221,16,0.239,17,0.593,18,0.831,19,1.785,20,1.785,21,1.785,22,1.785,23,2.278,24,2.278,25,2.459,26,0.591,27,1.567,28,2.025,29,2.062,30,0.779,32,0.553,33,0.038,34,0.553,35,0.397,36,0.641,37,1.62,38,2.311,39,1.567,40,1.62,41,2.311,42,2.194,44,1.785,46,2.025,47,0.77,48,1.181,49,1.785,51,1.785,52,1.282,54,1.785,55,1.785,56,1.994,57,0.458,58,1.473,59,0.958,60,1.62,61,0.476,62,0.335,63,0.827,64,1.157,65,0.591,66,0.532,67,0.239,68,0.933,69,1.275,70,1.275,71,1.275,72,1.994,76,1.41,78,1.785,79,1.41,80,1.869,82,1.275,83,1.275,84,0.023,85,0.023,98,1.651,102,2.311,103,1.994,107,0.653,109,1.567,120,1.345,121,1.484,131,1.994,173,1.052,197,3.235,198,4.044,199,3.235,202,3.235,204,3.236,205,2.311,208,2.311,209,3.235,211,2.791,213,2.311,214,1.994,215,2.311,216,2.311,217,2.311,219,4.257,225,2.311,226,2.311,234,2.311,239,2.311,241,2.311,242,2.311,244,2.311,245,2.311,281,1.994,284,1.785,391,2.194,588,2.278,666,4.187,667,3.733,668,3.909,669,2.792,670,2.792,671,2.792,672,2.792,673,2.792,674,2.792,675,2.792,676,2.792,677,2.792,678,2.311]],["title/directives/SelectOptionDirective.html",[0,0.094,589,1.742]],["body/directives/SelectOptionDirective.html",[0,0.159,2,0.504,3,0.441,4,0.38,6,0.796,7,0.603,9,1.232,11,1.176,14,1.49,16,0.323,17,0.724,18,0.791,26,1.009,28,2.283,29,2.223,30,0.762,32,0.482,33,0.037,34,0.482,35,0.267,36,0.68,37,2.171,47,0.702,48,1.108,57,0.559,61,0.642,62,0.323,67,0.323,68,0.94,80,1.56,84,0.028,85,0.028,98,1.07,118,1.974,120,0.881,121,1.232,140,1.56,161,1.798,194,1.901,204,2.368,246,3.115,247,3.296,248,3.74,249,3.933,250,3.466,251,2.687,252,3.115,253,2.179,255,3.115,256,3.115,257,1.901,262,3.407,263,2.687,264,2.516,265,3.949,267,3.115,268,3.115,269,2.368,270,3.115,271,3.115,588,2.782,589,2.679,666,4.147,679,4.772,680,3.764,681,4.772]],["title/changelog.html",[682,1.861,683,1.861,684,2.606]],["body/changelog.html",[0,0.11,4,0.411,6,0.931,7,0.47,9,0.494,12,0.886,17,0.449,18,0.257,25,2.561,29,0.722,30,0.397,33,0.024,34,0.299,35,0.257,36,0.545,40,0.793,62,0.254,65,0.765,66,0.365,81,1.585,83,0.874,84,0.017,85,0.017,88,0.598,90,0.405,94,0.967,101,0.544,107,0.448,118,0.722,121,0.494,137,1.075,140,0.793,159,0.598,161,1.828,162,2.276,165,1.205,169,1.201,173,1.115,184,2.583,191,1.367,192,0.874,194,1.495,228,0.793,230,1.495,269,2.769,284,1.652,285,1.661,286,0.967,287,1.226,288,2.01,290,1.367,297,0.967,319,0.793,323,0.874,329,1.075,334,1.226,335,1.495,336,1.075,337,2.055,341,1.115,383,1.075,385,1.661,401,1.585,402,2.583,403,1.585,404,1.585,440,2.994,441,1.585,449,1.585,482,1.585,489,4.258,492,3.002,504,1.585,523,1.862,529,3.322,531,1.585,537,2.994,538,1.585,543,3.642,578,0.874,580,1.661,583,2.113,595,2.449,598,1.585,630,2.449,631,1.367,648,1.585,649,1.585,685,1.915,686,1.915,687,2.96,688,1.915,689,4.071,690,2.96,691,1.915,692,1.915,693,1.915,694,1.915,695,1.915,696,5.665,697,6.061,698,6.193,699,2.96,700,1.915,701,1.915,702,1.915,703,1.915,704,1.915,705,1.915,706,4.851,707,2.96,708,2.96,709,1.915,710,1.915,711,2.96,712,1.915,713,1.915,714,1.915,715,1.915,716,1.915,717,3.618,718,1.915,719,6.228,720,5.254,721,3.642,722,3.618,723,2.96,724,1.915,725,1.915,726,1.915,727,1.915,728,3.618,729,1.915,730,1.915,731,2.994,732,4.401,733,1.915,734,1.915,735,1.915,736,1.915,737,2.96,738,1.915,739,1.915,740,1.915,741,1.915,742,1.915,743,4.401,744,2.449,745,1.915,746,1.915,747,1.915,748,1.915,749,2.96,750,4.071,751,1.915,752,5.847,753,1.915,754,1.915,755,3.618,756,1.585,757,1.915,758,4.401,759,1.915,760,1.915,761,1.915,762,1.915,763,1.915,764,4.787,765,5.785,766,3.618,767,3.618,768,1.915,769,1.915,770,1.915,771,1.915,772,5.143,773,1.915,774,1.915,775,1.915,776,1.915,777,1.915,778,1.915,779,1.915,780,1.915,781,2.449,782,1.915,783,1.915,784,1.915,785,1.915,786,1.915,787,1.915,788,1.915,789,1.915,790,4.653,791,1.915,792,1.915,793,1.915,794,2.96,795,3.642,796,1.915,797,1.915,798,3.618,799,1.915,800,1.915,801,1.915,802,1.915,803,1.915,804,3.463,805,1.915,806,1.915,807,1.915,808,1.915,809,2.96,810,1.915,811,2.96,812,1.915,813,2.96,814,1.915,815,1.915,816,1.915,817,1.915,818,1.915,819,1.915,820,4.071,821,3.642,822,1.915,823,1.915,824,1.585,825,1.915,826,1.915,827,2.96,828,2.449,829,1.915,830,1.915,831,1.915,832,1.915,833,1.915,834,1.915,835,1.915,836,1.915,837,1.915,838,1.915,839,1.915,840,1.915,841,1.915,842,1.915,843,1.915,844,4.071,845,1.915,846,1.585,847,1.915,848,1.915,849,1.915,850,1.915,851,1.915,852,1.585,853,1.915,854,1.915,855,1.915,856,1.915,857,1.915,858,1.915,859,1.915,860,1.915,861,1.915,862,1.915,863,1.915,864,1.915,865,1.585,866,1.915,867,1.585,868,1.205,869,1.915,870,2.96,871,1.915,872,1.915,873,1.915,874,1.915,875,1.915,876,1.915,877,4.851,878,1.915,879,1.915,880,2.96,881,1.915,882,1.915,883,1.915,884,1.915,885,1.915,886,2.96,887,1.915,888,1.915,889,1.915,890,1.915,891,2.96,892,1.915,893,1.915,894,1.915,895,1.915,896,1.915,897,1.915,898,1.915,899,1.915,900,1.915,901,1.915,902,1.915,903,1.585,904,1.915,905,1.915,906,1.915,907,2.96,908,1.915,909,1.915,910,1.915,911,1.915,912,1.915,913,2.96,914,1.915,915,1.915,916,1.915,917,2.96,918,1.915,919,1.915,920,1.915,921,1.915,922,1.915,923,1.915,924,1.915,925,1.915,926,4.071,927,1.915,928,1.915,929,1.915,930,1.915,931,1.585,932,1.915,933,1.915,934,1.915,935,1.915,936,1.915,937,1.915,938,1.915,939,1.915,940,1.915,941,1.915,942,3.618,943,1.915,944,1.915,945,1.915,946,1.915,947,1.915,948,1.915,949,1.915,950,2.96,951,1.915,952,1.915,953,1.915,954,1.915,955,2.96,956,1.585,957,1.915,958,1.915,959,1.915,960,1.915,961,2.96,962,1.585,963,1.915,964,1.915,965,1.915,966,1.915,967,1.915,968,2.96,969,1.915,970,1.915,971,4.071,972,1.915,973,1.915,974,1.915,975,1.915,976,1.915,977,1.915,978,1.915,979,1.915,980,1.915,981,2.994,982,1.915,983,1.915,984,1.915,985,1.915,986,2.96,987,1.915,988,1.915,989,2.449,990,1.915,991,1.915,992,1.915,993,1.915,994,1.915,995,1.915,996,1.915,997,1.915,998,1.585,999,1.915,1000,1.915,1001,1.915,1002,1.915,1003,1.915,1004,1.915,1005,1.915,1006,1.915,1007,1.915,1008,1.915,1009,1.915,1010,1.915,1011,1.915,1012,1.915,1013,2.96,1014,1.915]],["title/dependencies.html",[580,2.09,1015,2.606]],["body/dependencies.html",[33,0.037,59,1.635,61,0.813,84,0.032,85,0.032,135,3.945,180,1.976,314,2.177,319,1.976,580,3.091,804,3.404,1016,4.768,1017,4.768,1018,5.969,1019,4.768]],["title/miscellaneous/functions.html",[101,1.058,1020,1.316]],["body/miscellaneous/functions.html",[6,0.954,7,0.573,8,1.699,16,0.295,32,0.627,33,0.037,34,0.627,35,0.378,36,0.731,46,1.428,84,0.026,85,0.026,89,1.582,90,1.296,101,1.428,113,2.461,136,2.852,137,1.935,169,1.376,174,1.723,287,1.428,288,1.428,316,2.531,317,2.276,318,2.531,320,2.531,321,2.531,334,1.868,337,2.691,384,1.935,387,1.935,399,1.574,462,4.41,477,2.852,479,2.852,480,2.852,1020,1.74,1021,5.024,1022,4.577,1023,4.508,1024,3.731,1025,4.852,1026,3.731,1027,3.731,1028,3.731,1029,3.731,1030,3.731,1031,5.024,1032,4.508,1033,4.508,1034,3.587,1035,4.508,1036,4.508,1037,2.852,1038,3.587,1039,4.508,1040,5.024,1041,2.852,1042,2.852,1043,3.447,1044,3.447,1045,4.508,1046,3.447,1047,3.447,1048,2.852,1049,3.447,1050,5.674,1051,3.447,1052,3.447,1053,3.447,1054,3.447,1055,3.447,1056,2.461,1057,3.447,1058,4.508,1059,3.447,1060,3.447,1061,4.508]],["title/index.html",[16,0.223,682,1.861,683,1.861]],["body/index.html",[3,0.428,6,1.192,32,0.473,33,0.036,57,0.66,59,1.255,61,0.624,62,0.313,67,0.313,84,0.028,85,0.028,107,0.856,118,1.379,159,1.143,162,3.545,165,3.252,194,1.847,269,3.429,297,1.847,367,2.142,380,2.054,492,3.06,523,2.948,527,3.892,528,3.028,529,4.023,530,3.028,540,3.878,578,1.671,579,2.61,582,3.345,600,3.878,622,2.612,625,3.028,631,2.612,646,4.278,650,3.028,731,3.028,744,3.028,781,4.278,795,4.278,804,2.612,821,4.851,824,3.028,828,4.278,846,3.028,852,3.028,865,4.511,868,2.948,903,3.028,962,3.028,989,3.028,998,4.278,1062,5.17,1063,4.686,1064,3.659,1065,3.028,1066,4.686,1067,4.686,1068,4.686,1069,3.659,1070,3.659,1071,3.659,1072,3.659,1073,5.17,1074,3.659,1075,3.659,1076,4.686,1077,3.659,1078,3.659,1079,4.686,1080,3.659,1081,3.659,1082,3.659,1083,3.659,1084,3.659,1085,3.659,1086,3.659,1087,3.659,1088,3.659,1089,3.659,1090,3.659,1091,3.659,1092,3.659,1093,3.659,1094,3.659,1095,3.659,1096,4.686,1097,4.686,1098,5.452,1099,3.659,1100,3.659,1101,3.659,1102,4.686,1103,4.686,1104,3.659,1105,5.17,1106,3.659,1107,3.659,1108,3.659,1109,3.659,1110,3.659,1111,3.659,1112,3.659,1113,3.659,1114,3.659,1115,3.659,1116,3.659,1117,3.659,1118,3.028,1119,3.659,1120,3.659,1121,3.659,1122,3.028]],["title/license.html",[682,1.861,683,1.861,868,1.64]],["body/license.html",[4,0.429,12,0.808,33,0.03,40,1.758,84,0.03,85,0.03,90,0.897,191,3.029,313,2.142,492,2.885,592,3.029,622,3.947,637,3.511,764,3.511,867,4.755,868,2.669,956,4.253,1065,4.575,1118,3.511,1122,3.511,1123,5.529,1124,4.243,1125,4.243,1126,4.243,1127,5.139,1128,4.243,1129,4.243,1130,4.243,1131,4.243,1132,5.139,1133,4.243,1134,6.15,1135,4.243,1136,5.139,1137,4.243,1138,4.243,1139,4.243,1140,4.243,1141,4.243,1142,4.243,1143,4.243,1144,4.243,1145,4.243,1146,4.243,1147,4.243,1148,4.243,1149,4.243,1150,5.139,1151,5.139,1152,4.243,1153,4.243,1154,5.139,1155,4.243,1156,4.243,1157,4.243,1158,4.243,1159,4.243,1160,4.243,1161,4.243,1162,4.243,1163,4.243,1164,4.243,1165,4.243,1166,4.243,1167,4.243,1168,4.243,1169,4.243,1170,4.243,1171,4.243,1172,4.243,1173,4.243]],["title/modules.html",[578,1.92]],["body/modules.html",[33,0.033,84,0.033,85,0.033,335,2.476,578,2.239,579,2.476,721,4.059,756,4.059,1174,4.905]],["title/overview.html",[1175,3.479]],["body/overview.html",[0,0.117,1,3.328,12,0.733,33,0.037,62,0.33,67,0.33,84,0.028,85,0.028,86,3.328,112,2.994,132,1.595,192,2.707,207,2.994,275,3.328,331,1.45,461,2.994,475,2.994,578,2.21,579,3.226,580,2.161,581,3.185,582,2.748,583,2.748,584,3.185,585,3.185,586,3.185,587,3.328,588,2.994,589,3.328,590,4.005,591,3.185,592,2.748,678,3.185,931,3.185,981,4.005,1175,3.185,1176,3.849]],["title/miscellaneous/typealiases.html",[1020,1.316,1177,3.723]],["body/miscellaneous/typealiases.html",[16,0.371,33,0.035,35,0.307,84,0.031,85,0.031,89,1.569,90,1.285,101,1.682,157,2.724,169,1.44,171,1.742,283,2.431,287,1.794,288,1.794,295,3.131,299,3.131,303,3.131,315,3.131,322,1.485,324,3.131,327,2.816,334,1.794,399,1.977,400,4.616,406,4.616,431,4.788,432,3.091,658,3.714,1020,2.186,1034,3.714,1038,3.091,1056,3.091,1178,4.33,1179,5.918,1180,3.583]],["title/miscellaneous/variables.html",[1020,1.316,1181,3.081]],["body/miscellaneous/variables.html",[0,0.143,1,2.635,5,2.491,6,1.256,7,0.635,8,2.238,12,1.039,13,3.884,16,0.258,33,0.038,35,0.422,58,2.056,60,2.261,64,2.261,65,1.154,66,1.064,84,0.024,85,0.024,86,1.69,89,1.507,90,1.234,98,1.17,107,0.964,112,2.37,113,2.149,114,3.884,120,0.964,157,2.591,158,2.491,159,1.286,160,3.408,161,1.134,171,1.286,173,2.313,183,3.351,184,2.149,192,2.143,193,2.149,194,2.079,195,3.884,207,1.52,211,3.603,275,2.635,276,2.491,277,3.884,322,1.033,399,1.375,424,3.884,425,3.884,426,3.884,427,3.884,428,3.884,429,3.884,430,3.884,461,1.52,473,2.953,474,2.953,475,1.52,579,1.52,587,2.635,588,2.37,589,1.69,593,3.408,614,3.884,653,2.491,654,3.884,658,3.351,664,2.491,665,2.491,666,2.149,667,3.884,1020,1.52,1022,2.491,1024,2.491,1025,4.516,1026,2.491,1027,2.491,1028,2.491,1029,2.491,1030,2.491,1034,2.149,1037,3.408,1038,2.149,1041,2.491,1042,2.491,1048,2.491,1056,2.149,1180,3.408,1181,2.491,1182,3.01,1183,4.118,1184,3.01,1185,4.694,1186,3.01,1187,3.01,1188,3.01,1189,3.01,1190,4.118,1191,3.01]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":217,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["0.0.2",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["07c103e",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["0f566ad",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":678,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"overview.html":{}}}],["1.1.1",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1176,"title":{},"body":{"overview.html":{}}}],["12",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["15ce1e",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":981,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2018",{"_index":764,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["2e39369",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["2f2675e",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":931,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["35a48b",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["3ed6e3",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["48f2da4",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["51ca66",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["5d90b63",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["60377e5",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["6148a68",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["781f009",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":70,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["_registeronchange(fn",{"_index":350,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_setparent(par",{"_index":397,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_updatevalu",{"_index":289,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_updatevalue(opt",{"_index":309,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["_valuechang",{"_index":342,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["a0bde9b",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["a0de621",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["aadad1b",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":1149,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":161,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["accessor.direct",{"_index":263,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{}}}],["accessor.directive.t",{"_index":8,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accessor.directive.ts:16",{"_index":672,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:20",{"_index":43,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:25",{"_index":38,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:26",{"_index":201,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:27",{"_index":31,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:28",{"_index":96,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:32",{"_index":56,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:33",{"_index":279,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:34",{"_index":669,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:35",{"_index":200,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:36",{"_index":45,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:37",{"_index":124,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":99,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:39",{"_index":671,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:40",{"_index":50,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:41",{"_index":656,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:42",{"_index":104,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:44",{"_index":53,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:45",{"_index":657,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:46",{"_index":100,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:47",{"_index":126,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:50",{"_index":102,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:52",{"_index":122,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:54",{"_index":103,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:58",{"_index":205,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:62",{"_index":131,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:66",{"_index":208,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:67",{"_index":128,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:70",{"_index":670,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:71",{"_index":129,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:72",{"_index":203,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:75",{"_index":130,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:76",{"_index":210,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessors.t",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors/accessor",{"_index":602,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1168,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":166,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["ad",{"_index":489,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["adapt",{"_index":603,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["adapter.interfac",{"_index":182,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["adapter.interface.t",{"_index":658,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["adapter.interface.ts:23",{"_index":659,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["adapter.service.t",{"_index":160,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.service.ts:16",{"_index":167,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:21",{"_index":177,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:25",{"_index":179,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:29",{"_index":172,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter/default",{"_index":158,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter/rout",{"_index":322,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":523,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add/index.t",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addmatchingvers",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimport",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(opt",{"_index":1043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addqueryparam(direct",{"_index":517,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["aea857a",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["afeae98",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["alia",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":1178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":989,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["alway",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["analyt",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1143,"title":{},"body":{"license.html":{}}}],["android",{"_index":138,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["angular'",{"_index":1093,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":59,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":180,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["angularvers",{"_index":1046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anoth",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":631,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":998,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":1078,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1064,"title":{},"body":{"index.html":{}}}],["argument",{"_index":39,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["aris",{"_index":1172,"title":{},"body":{"license.html":{}}}],["array",{"_index":231,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.from(this.optionmap.key",{"_index":245,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["array.from(this.options.entri",{"_index":220,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.isarray(valu",{"_index":227,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.isarray(valueaccessor",{"_index":639,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["assert",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":1135,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":1161,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":1075,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["b",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b19a81",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["badg",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["bb15442",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["bbaf6e4",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["becom",{"_index":1112,"title":{},"body":{"index.html":{}}}],["befor",{"_index":534,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["benefit",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["blur",{"_index":24,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["bookmark",{"_index":1102,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["booleanparam",{"_index":401,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(opt",{"_index":405,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":583,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{}}}],["box",{"_index":1109,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1174,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":721,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["buffer",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["builder.service.t",{"_index":400,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["builder.service.ts:28",{"_index":411,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:44",{"_index":421,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:45",{"_index":423,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:46",{"_index":422,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:58",{"_index":413,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:59",{"_index":414,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:60",{"_index":415,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:72",{"_index":409,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:73",{"_index":408,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:74",{"_index":407,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:86",{"_index":417,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:87",{"_index":418,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:88",{"_index":419,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["built",{"_index":649,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["builtinaccessor",{"_index":641,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["button",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1126,"title":{},"body":{"license.html":{}}}],["c",{"_index":1124,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["c6b3a1e",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["c6cd845",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["can't",{"_index":628,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["care",{"_index":1092,"title":{},"body":{"index.html":{}}}],["case",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["cfa25df",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["chanc",{"_index":532,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chang",{"_index":25,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["change(ev",{"_index":41,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["changefn(this.valu",{"_index":361,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefn(valu",{"_index":392,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefunct",{"_index":344,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["changelog",{"_index":684,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":1131,"title":{},"body":{"license.html":{}}}],["check",{"_index":81,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"changelog.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirect",{"_index":1,"title":{"directives/CheckboxControlValueAccessorDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["chmod",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["choos",{"_index":634,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["claim",{"_index":1164,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["close",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["cluster_queryparammodul",{"_index":584,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_declar",{"_index":585,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_export",{"_index":586,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["collect",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["combinedparam",{"_index":564,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["combinewith",{"_index":285,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["command",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":1119,"title":{},"body":{"index.html":{}}}],["compar",{"_index":315,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":334,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":531,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["compos",{"_index":142,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend",{"_index":116,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend(ev",{"_index":125,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionstart",{"_index":117,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["concatmap",{"_index":469,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["concatmap(param",{"_index":557,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["condit",{"_index":1148,"title":{},"body":{"license.html":{}}}],["config",{"_index":598,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeropt",{"_index":606,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configur",{"_index":617,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["connect",{"_index":1173,"title":{},"body":{"license.html":{}}}],["consid",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["consist",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["consol",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":63,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(opt",{"_index":291,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["constructor(par",{"_index":251,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(platformid",{"_index":119,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["constructor(priv",{"_index":79,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(queryparam",{"_index":450,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(render",{"_index":27,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(rout",{"_index":164,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["constructor(routeradapt",{"_index":463,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["content",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":1169,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1088,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1089,"title":{},"body":{"index.html":{}}}],["control",{"_index":6,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":10,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["controlvalueaccessordirect",{"_index":86,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["convent",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":867,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1123,"title":{},"body":{"license.html":{}}}],["core",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":537,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["creat",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["createbooleandeseri",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleandeserializer(defaultvalu",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanseri",{"_index":1026,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleanserializer(defaultvalu",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createemptyondeseri",{"_index":320,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyondeserializer(deseri",{"_index":387,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonseri",{"_index":321,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonserializer(seri",{"_index":384,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createnumberdeseri",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberdeserializer(defaultvalu",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberseri",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberserializer(defaultvalu",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryparam(queryparam",{"_index":446,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["createstringdeseri",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringdeserializer(defaultvalu",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringseri",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringserializer(defaultvalu",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":646,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["custom",{"_index":650,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["customaccessor",{"_index":642,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customparam",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["d+)/.test(navigator.useragent.tolowercas",{"_index":139,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["d1d0a1b",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":1165,"title":{},"body":{"license.html":{}}}],["data",{"_index":1069,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1136,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":544,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueu",{"_index":545,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.next(newvalu",{"_index":553,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.pip",{"_index":546,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncetim",{"_index":286,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["debouncetime(queryparam.debouncetim",{"_index":548,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dec2d0f",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":582,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":173,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deseri",{"_index":424,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_seri",{"_index":425,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_deseri",{"_index":426,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_seri",{"_index":427,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_deseri",{"_index":428,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_seri",{"_index":429,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["defaultaccessor",{"_index":640,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["defaultcontrolvalueaccessordirect",{"_index":112,"title":{"directives/DefaultControlValueAccessorDirective.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteradapt",{"_index":156,"title":{"injectables/DefaultRouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{}}}],["defaultrouteradapteropt",{"_index":183,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["defaultvalu",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defin",{"_index":30,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["demo",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["demonstr",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":580,"title":{"dependencies.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["deregisteropt",{"_index":197,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["deregisteroption(id",{"_index":202,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["descript",{"_index":88,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{}}}],["deseri",{"_index":287,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserialize(queryparam",{"_index":571,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["design",{"_index":1070,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":483,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["develop",{"_index":1086,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":1096,"title":{},"body":{"index.html":{}}}],["dir.nam",{"_index":506,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["direct",{"_index":0,"title":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directive.nam",{"_index":521,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor",{"_index":524,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.registeronchange((newvalu",{"_index":552,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(newvalu",{"_index":508,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(queryparam.valu",{"_index":541,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directli",{"_index":629,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["disabl",{"_index":83,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["disabledchang",{"_index":93,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribut",{"_index":1141,"title":{},"body":{"license.html":{}}}],["doc",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":90,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["domain",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":1110,"title":{},"body":{"index.html":{}}}],["due",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["e100621",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":366,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["earli",{"_index":1085,"title":{},"body":{"index.html":{}}}],["easi",{"_index":1063,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1107,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["elementref",{"_index":29,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["emit",{"_index":511,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["emitev",{"_index":355,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["empti",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["emptyon",{"_index":337,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enough",{"_index":636,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["enqueuenavigation(param",{"_index":560,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ensur",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["entir",{"_index":513,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error",{"_index":385,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["error(`combinewith",{"_index":377,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`comparewith",{"_index":374,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`could",{"_index":519,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`deseri",{"_index":372,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`emptyon",{"_index":379,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`mor",{"_index":647,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`no",{"_index":525,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`pleas",{"_index":365,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`provid",{"_index":229,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["error(`queryparamnam",{"_index":621,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`seri",{"_index":369,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`y",{"_index":488,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["event",{"_index":40,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["event.target",{"_index":281,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["eventemitt",{"_index":95,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exampl",{"_index":744,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["execut",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["explan",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["explicitli",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":62,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["exporta",{"_index":105,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["express",{"_index":1155,"title":{},"body":{"license.html":{}}}],["extend",{"_index":328,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["extra",{"_index":170,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}}}],["f02d26d",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["f394fa6",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["f4c3365",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["f526b61",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":143,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["fce4ec2",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["featur",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{}}}],["filter",{"_index":1068,"title":{},"body":{"index.html":{}}}],["filter(([id",{"_index":221,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["filter(id",{"_index":235,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["find",{"_index":520,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["finish",{"_index":339,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["first",{"_index":440,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fit",{"_index":1158,"title":{},"body":{"license.html":{}}}],["fix",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":46,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["fnchang",{"_index":69,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["fntouch",{"_index":71,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["follow",{"_index":1147,"title":{},"body":{"license.html":{}}}],["forget",{"_index":522,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":527,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["forroot",{"_index":595,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["forroot(config",{"_index":596,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["forwardref",{"_index":60,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":526,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1130,"title":{},"body":{"license.html":{}}}],["function",{"_index":101,"title":{"miscellaneous/functions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function(opt",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":1146,"title":{},"body":{"license.html":{}}}],["gener",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":682,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["get(queryparamnam",{"_index":352,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["getangularmajorvers",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingvers",{"_index":1032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingversion(angularvers",{"_index":1044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getoptionid(valu",{"_index":244,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["getparamsforvalue(queryparam",{"_index":562,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["getqueryparammap",{"_index":178,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getselect",{"_index":258,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["geturl",{"_index":176,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getvalu",{"_index":459,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["globalrouteropt",{"_index":464,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["good",{"_index":635,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["googl",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":1129,"title":{},"body":{"license.html":{}}}],["green",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":402,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(queryparam",{"_index":410,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.direct",{"_index":601,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.directive.t",{"_index":462,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["group.directive.ts:35",{"_index":466,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:42",{"_index":465,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:51",{"_index":468,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:99",{"_index":467,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupopt",{"_index":574,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["guid",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["guidelin",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["hasarrayseri",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarrayserialization(queryparam",{"_index":480,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hasarrayvalu",{"_index":1035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarrayvalue(queryparam",{"_index":479,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hash",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["have",{"_index":1115,"title":{},"body":{"index.html":{}}}],["haven't",{"_index":490,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["head",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["headlin",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":536,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["herebi",{"_index":1128,"title":{},"body":{"license.html":{}}}],["histori",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["holder",{"_index":1162,"title":{},"body":{"license.html":{}}}],["hope",{"_index":633,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["host",{"_index":262,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlisten",{"_index":23,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('blur",{"_index":76,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('chang",{"_index":72,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('compositionend",{"_index":150,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('compositionstart",{"_index":148,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('input",{"_index":144,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmlinputelement).check",{"_index":75,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["htmlinputelement).valu",{"_index":147,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmloptionelement).select",{"_index":273,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["htmloptionelement).valu",{"_index":674,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#l186",{"_index":627,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["i.",{"_index":1079,"title":{},"body":{"index.html":{}}}],["icon",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":204,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["idcount",{"_index":216,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["implement",{"_index":9,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["impli",{"_index":1156,"title":{},"body":{"license.html":{}}}],["import",{"_index":57,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["imposs",{"_index":1101,"title":{},"body":{"index.html":{}}}],["improv",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["independ",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":329,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["inform",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ingo",{"_index":1125,"title":{},"body":{"license.html":{}}}],["initi",{"_index":504,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["inject",{"_index":132,"title":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["inject(ng_value_accessor",{"_index":616,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inject(ngqp_router_adapt",{"_index":484,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(ngqp_router_opt",{"_index":485,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(platform_id",{"_index":152,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["injectiontoken",{"_index":661,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["injectiontoken('ngqp_router_adapt",{"_index":664,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngqp_router_opt",{"_index":665,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":118,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('queryparamgroup",{"_index":481,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamnam",{"_index":615,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["input('valu",{"_index":268,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["input(ev",{"_index":127,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["input:not([type=checkbox]):not([type=radio])[queryparamname],textarea[queryparamnam",{"_index":115,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["input[type=checkbox][queryparamnam",{"_index":15,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["input[type=number][queryparamnam",{"_index":278,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{}}}],["input[type=range][queryparamnam",{"_index":655,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["instal",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":447,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["instead",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["instruct",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":331,"title":{"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"overview.html":{}}}],["intern",{"_index":349,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["intuit",{"_index":1071,"title":{},"body":{"index.html":{}}}],["isandroid",{"_index":1036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isandroid(navig",{"_index":136,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["isandroid(window.navig",{"_index":154,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isdis",{"_index":54,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["isfunct",{"_index":316,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["isfunction(combinewith",{"_index":376,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(comparewith",{"_index":373,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(deseri",{"_index":371,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(obj",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfunction(seri",{"_index":368,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismiss",{"_index":317,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["ismissing(combinewith",{"_index":375,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(direct",{"_index":507,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(emptyon",{"_index":378,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(obj",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismissing(param",{"_index":364,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam",{"_index":357,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam.combinewith",{"_index":565,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(queryparam.debouncetim",{"_index":547,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(this.par",{"_index":394,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismultiqueryparam",{"_index":1039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiqueryparam(queryparam",{"_index":477,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":630,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["isplatformbrows",{"_index":134,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":153,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["item",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1118,"title":{},"body":{"index.html":{},"license.html":{}}}],["know",{"_index":1090,"title":{},"body":{"index.html":{}}}],["land",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":581,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["let'",{"_index":632,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["liabil",{"_index":1166,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1163,"title":{},"body":{"license.html":{}}}],["licens",{"_index":868,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limit",{"_index":956,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":731,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["listen",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["liter",{"_index":310,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["load",{"_index":1104,"title":{},"body":{"index.html":{}}}],["locat",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["loose_identity_compar",{"_index":430,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["lose",{"_index":1117,"title":{},"body":{"index.html":{}}}],["make",{"_index":529,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["mandatori",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1106,"title":{},"body":{"index.html":{}}}],["map",{"_index":214,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["map(([id",{"_index":223,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["map((newvalu",{"_index":549,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(queryparam.seri",{"_index":569,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(valu",{"_index":233,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["mappedqueryparam",{"_index":436,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["margin",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["match",{"_index":85,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mayb",{"_index":439,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["mention",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["merchant",{"_index":1157,"title":{},"body":{"license.html":{}}}],["merg",{"_index":191,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["misalign",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":1020,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1122,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":336,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["model",{"_index":323,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["modifi",{"_index":1139,"title":{},"body":{"license.html":{}}}],["modul",{"_index":578,"title":{"modules/QueryParamModule.html":{},"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":599,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["more",{"_index":1091,"title":{},"body":{"index.html":{}}}],["move",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multi",{"_index":65,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["multiselectcontrolvalueaccessordirect",{"_index":192,"title":{"directives/MultiSelectControlValueAccessorDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multiselectoptiondirect",{"_index":207,"title":{"directives/MultiSelectOptionDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.direct",{"_index":476,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["name.directive.t",{"_index":607,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:16",{"_index":610,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:19",{"_index":609,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:32",{"_index":611,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["navig",{"_index":137,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["navigate(queryparam",{"_index":168,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["navigationextra",{"_index":662,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["necessari",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":538,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["new",{"_index":107,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":238,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["newvalu",{"_index":326,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ng",{"_index":824,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":58,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":600,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":249,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngoninit",{"_index":250,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngqp",{"_index":821,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_built_in_accessor",{"_index":614,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_built_in_accessors.some(curr",{"_index":645,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_checkbox_value_accessor",{"_index":13,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_default_value_accessor",{"_index":114,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_module_nam",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngqp_multi_select_value_accessor",{"_index":195,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_number_value_accessor",{"_index":277,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_range_value_accessor",{"_index":654,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_adapt",{"_index":473,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_opt",{"_index":474,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_select_value_accessor",{"_index":667,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":230,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["noninfring",{"_index":1160,"title":{},"body":{"license.html":{}}}],["normal",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["normalizedvalu",{"_index":155,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["notabl",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":338,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["notic",{"_index":1150,"title":{},"body":{"license.html":{}}}],["notifychang",{"_index":91,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(valu",{"_index":97,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":846,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["number",{"_index":280,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["numbercontrolvalueaccessor",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirect",{"_index":275,"title":{"directives/NumberControlValueAccessorDirective.html":{}},"body":{"directives/NumberControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numericparam",{"_index":403,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numericparam(opt",{"_index":412,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["obj",{"_index":1058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.keys(queryparams).foreach(queryparamnam",{"_index":437,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object.keys(this.queryparamgroup.queryparams).foreach(queryparamnam",{"_index":497,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["object.keys(this.queryparams).foreach(queryparamnam",{"_index":353,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.keys(value).foreach(queryparamnam",{"_index":356,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.values(this.queryparams).foreach(queryparam",{"_index":347,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["observ",{"_index":306,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{}}}],["obtain",{"_index":1133,"title":{},"body":{"license.html":{}}}],["on",{"_index":648,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["onblur",{"_index":77,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onc",{"_index":512,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["onchang",{"_index":218,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["onchange(ev",{"_index":673,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["onchangefunct",{"_index":324,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["oncompositionend(ev",{"_index":151,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["oncompositionstart",{"_index":149,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["ondestroy",{"_index":248,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninit",{"_index":247,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninput(ev",{"_index":73,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onlyself",{"_index":393,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["ontouch",{"_index":226,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opt",{"_index":294,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["option",{"_index":36,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["option.direct",{"_index":212,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["option.directive.t",{"_index":246,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:21",{"_index":256,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:27",{"_index":255,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:34",{"_index":254,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:35",{"_index":679,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:40",{"_index":259,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:44",{"_index":261,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:9",{"_index":252,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.select",{"_index":222,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["optionmap",{"_index":215,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opts.emitev",{"_index":359,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.multi",{"_index":363,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.onlyself",{"_index":395,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["organ",{"_index":1095,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":1171,"title":{},"body":{"license.html":{}}}],["out",{"_index":592,"title":{},"body":{"modules/QueryParamModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":92,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchang",{"_index":108,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('valuechang",{"_index":106,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outsid",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1175,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriteparti",{"_index":431,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["packag",{"_index":1015,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":795,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pagin",{"_index":1066,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["param(opt",{"_index":416,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.module.t",{"_index":593,"title":{},"body":{"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["param.module.ts:56",{"_index":597,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["paramcombin",{"_index":295,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeseri",{"_index":299,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parammap",{"_index":663,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["paramseri",{"_index":303,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":253,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["parsefloat(valu",{"_index":282,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["partial",{"_index":433,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["particular",{"_index":1159,"title":{},"body":{"license.html":{}}}],["patchvalu",{"_index":449,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(valu",{"_index":354,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["path",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":1127,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1145,"title":{},"body":{"license.html":{}}}],["person",{"_index":1132,"title":{},"body":{"license.html":{}}}],["phrase",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":432,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["platform_id",{"_index":133,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["platformid",{"_index":123,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["pleas",{"_index":528,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["png",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["portion",{"_index":1153,"title":{},"body":{"license.html":{}}}],["previousvalu",{"_index":325,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["privat",{"_index":68,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["progress",{"_index":1083,"title":{},"body":{"index.html":{}}}],["project",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":175,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["proper",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":284,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["provid",{"_index":12,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":434,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["proxi",{"_index":542,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["public",{"_index":18,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1140,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":637,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["push",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["queri",{"_index":367,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["queryparam",{"_index":174,"title":{"classes/QueryParam.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{}}}],["queryparam(opt",{"_index":445,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparam._registeronchange((newvalu",{"_index":498,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam._setparent(thi",{"_index":348,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam._updatevalu",{"_index":510,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.combinewith(queryparam.valu",{"_index":566,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.deserialize(valu",{"_index":573,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.multi",{"_index":478,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.param",{"_index":567,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.serialize(valu",{"_index":570,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.setvalue(valu",{"_index":358,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam.valu",{"_index":509,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparambuild",{"_index":398,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroup",{"_index":341,"title":{"classes/QueryParamGroup.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["queryparamgroup(mappedqueryparam",{"_index":444,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirect",{"_index":461,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamgroupvalu",{"_index":332,"title":{"interfaces/QueryParamGroupValue.html":{}},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparammap",{"_index":163,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparammap.get(queryparam.param",{"_index":503,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammap.getall(queryparam.param",{"_index":502,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammodul",{"_index":579,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamnam",{"_index":333,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamnamedirect",{"_index":475,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamopt",{"_index":292,"title":{"interfaces/QueryParamOpts.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamoptsinput",{"_index":406,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamshandl",{"_index":190,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["queue",{"_index":482,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["rangecontrolvalueaccessor",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirect",{"_index":587,"title":{"directives/RangeControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":533,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["readm",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["readonli",{"_index":140,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["receiv",{"_index":370,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["recurs",{"_index":340,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["reflect",{"_index":1100,"title":{},"body":{"index.html":{}}}],["regist",{"_index":535,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["registeronchang",{"_index":19,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeronchange(fn",{"_index":44,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouch",{"_index":20,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":49,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeropt",{"_index":198,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeroption(opt",{"_index":206,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["registri",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["relativeto",{"_index":188,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["releas",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":1114,"title":{},"body":{"index.html":{}}}],["remov",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":37,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["renderer2",{"_index":28,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["replac",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":184,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["resembl",{"_index":625,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["reset",{"_index":591,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["respons",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1137,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["right",{"_index":1138,"title":{},"body":{"license.html":{}}}],["root",{"_index":435,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["rout",{"_index":165,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["router",{"_index":159,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routeradapt",{"_index":181,"title":{"interfaces/RouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/RouterAdapter.html":{}}}],["routeradapteropt",{"_index":171,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":1080,"title":{},"body":{"index.html":{}}}],["routeropt",{"_index":343,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{}}}],["run",{"_index":1073,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":314,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":472,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["same",{"_index":443,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["sanitize=tru",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1077,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1120,"title":{},"body":{"index.html":{}}}],["schemat",{"_index":804,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["schematics/.../index.t",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics/ng",{"_index":1041,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1121,"title":{},"body":{"index.html":{}}}],["section",{"_index":1082,"title":{},"body":{"index.html":{}}}],["see",{"_index":297,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":194,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select:not([multiple])[queryparamnam",{"_index":668,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["select[multipl",{"_index":232,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["select[multiple][queryparamnam",{"_index":196,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["selectcontrolvalueaccessor",{"_index":626,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["selectcontrolvalueaccessordirect",{"_index":588,"title":{"directives/SelectControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selected(select",{"_index":274,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["selectedid",{"_index":213,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["selectedindex",{"_index":677,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["selectoptiondirect",{"_index":589,"title":{"directives/SelectOptionDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectvalueaccessor(valueaccessor",{"_index":638,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":612,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1144,"title":{},"body":{"license.html":{}}}],["serial",{"_index":288,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serialize(queryparam",{"_index":568,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["set",{"_index":269,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["setdisabledst",{"_index":21,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdis",{"_index":51,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setselected(select",{"_index":260,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["setupnavigationqueu",{"_index":555,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["setupqueryparam",{"_index":651,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["setvalu",{"_index":290,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(valu",{"_index":257,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["shall",{"_index":1151,"title":{},"body":{"license.html":{}}}],["share",{"_index":1103,"title":{},"body":{"index.html":{}}}],["shebang",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["simpli",{"_index":1072,"title":{},"body":{"index.html":{}}}],["singl",{"_index":380,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["skeleton",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["skipself",{"_index":613,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["small",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":1134,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["specif",{"_index":1099,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":623,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["split",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["src/.../checkbox",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":1037,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../model.t",{"_index":1179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../multi",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngqp",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../number",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../queri",{"_index":1034,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rang",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../select",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.t",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1038,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/checkbox",{"_index":5,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/default",{"_index":113,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/multi",{"_index":193,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/ngqp",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/accessors/numb",{"_index":276,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/rang",{"_index":653,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/select",{"_index":666,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/control",{"_index":87,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/model.t",{"_index":283,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/model.ts:101",{"_index":457,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:119",{"_index":458,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:132",{"_index":455,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:150",{"_index":308,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:153",{"_index":305,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:156",{"_index":302,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:159",{"_index":304,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:162",{"_index":300,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:165",{"_index":301,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:168",{"_index":298,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:171",{"_index":296,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:174",{"_index":293,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:229",{"_index":312,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:23",{"_index":577,"title":{},"body":{"interfaces/QueryParamGroupValue.html":{}}}],["src/lib/model.ts:240",{"_index":311,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:57",{"_index":454,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:60",{"_index":452,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:63",{"_index":453,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:65",{"_index":451,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:86",{"_index":456,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:91",{"_index":460,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/queri",{"_index":399,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/rout",{"_index":157,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.t",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/util.t",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":1087,"title":{},"body":{"index.html":{}}}],["standard",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":683,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1098,"title":{},"body":{"index.html":{}}}],["static",{"_index":594,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["staticprovid",{"_index":211,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["still",{"_index":1084,"title":{},"body":{"index.html":{}}}],["string",{"_index":120,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["stringparam",{"_index":404,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(opt",{"_index":420,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["style",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":313,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"license.html":{}}}],["sublicens",{"_index":1142,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":559,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["subscribe(param",{"_index":551,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["substanti",{"_index":1152,"title":{},"body":{"license.html":{}}}],["success",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":1108,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":491,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":335,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"modules.html":{}}}],["supportscomposit",{"_index":141,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["sure",{"_index":530,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["svg",{"_index":756,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sync",{"_index":539,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["synchron",{"_index":1062,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1094,"title":{},"body":{"index.html":{}}}],["t",{"_index":98,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["takeuntil",{"_index":470,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["takeuntil(this.destroy",{"_index":550,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["tap",{"_index":471,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["target",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["testrouteradapt",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navig",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["that'",{"_index":1074,"title":{},"body":{"index.html":{}}}],["this._valuechanges.asobserv",{"_index":307,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this._valuechanges.next(this.valu",{"_index":362,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":360,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.push(fn",{"_index":351,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.combinewith",{"_index":390,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.compos",{"_index":146,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.createqueryparam(queryparam",{"_index":438,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.debouncetim",{"_index":389,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deseri",{"_index":386,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deserialize(queryparam",{"_index":501,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.complet",{"_index":516,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.next",{"_index":515,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.find(dir",{"_index":505,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.push(direct",{"_index":554,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.disabledchange.emit(isdis",{"_index":111,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.elementref.nativeel",{"_index":272,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.enqueuenavigation(param",{"_index":496,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.enqueuenavigation(this.getparamsforvalue(queryparam",{"_index":499,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.fnchang",{"_index":82,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange((event.target",{"_index":74,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.fnchange(this.valu",{"_index":676,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange(valu",{"_index":109,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fntouch",{"_index":78,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getoptionid(valu",{"_index":234,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getparamsforvalue(queryparam",{"_index":495,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.globalrouteropt",{"_index":576,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.id",{"_index":265,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.idcounter++).tostr",{"_index":239,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.multi",{"_index":388,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.nam",{"_index":620,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.onchang",{"_index":243,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.optionmap.delete(id",{"_index":241,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(id",{"_index":225,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(this.selectedid",{"_index":675,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.set(id",{"_index":242,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.options.foreach((opt",{"_index":236,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.options.set(newid",{"_index":240,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.par",{"_index":264,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectOptionDirective.html":{}}}],["this.param",{"_index":381,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent._updatevalue(opt",{"_index":396,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent.addqueryparam(thi",{"_index":652,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.parent.deregisteroption(this.id",{"_index":267,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.registeropt",{"_index":680,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.parent.registeroption(thi",{"_index":266,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.parent.updateoptionvalue(this.id",{"_index":271,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.writevalue(this.parent.valu",{"_index":681,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.queryparam",{"_index":345,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.queryparamgroup",{"_index":487,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._registeronchange((valu",{"_index":493,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._updatevalu",{"_index":514,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(directive.nam",{"_index":518,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(queryparamnam",{"_index":494,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.routeropt",{"_index":575,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.next(param",{"_index":561,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.pip",{"_index":556,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.renderer.setproperty(this.elementref.nativeel",{"_index":80,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.rout",{"_index":189,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.route.queryparammap",{"_index":186,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.navig",{"_index":187,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.url",{"_index":185,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.routeradapter.navigate(param",{"_index":558,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.queryparammap.subscribe(queryparammap",{"_index":500,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeropt",{"_index":346,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.selectedid",{"_index":219,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.selectedids.includes(id",{"_index":237,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectedids.map(id",{"_index":224,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectvalueaccessor(valueaccessor",{"_index":619,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.seri",{"_index":382,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.serialize(queryparam",{"_index":563,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupnavigationqueu",{"_index":486,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupqueryparam",{"_index":624,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.stringparam",{"_index":448,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.supportscomposit",{"_index":145,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.valu",{"_index":391,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.valueaccessor",{"_index":618,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.valuechange.emit(valu",{"_index":110,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["throw",{"_index":228,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["tick",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["toc",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":89,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1170,"title":{},"body":{"license.html":{}}}],["travi",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":66,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":1113,"title":{},"body":{"index.html":{}}}],["two",{"_index":442,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["type",{"_index":35,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1177,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typo",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["u",{"_index":330,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{}}}],["uievent",{"_index":42,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["undefin",{"_index":383,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["under",{"_index":1097,"title":{},"body":{"index.html":{}}}],["unnam",{"_index":1040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessari",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["unpack",{"_index":327,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":852,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updat",{"_index":543,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["updateoptionvalu",{"_index":199,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["updateoptionvalue(id",{"_index":209,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["url",{"_index":162,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"index.html":{}}}],["us",{"_index":492,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":1081,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":604,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["useexist",{"_index":64,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1105,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":605,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["util",{"_index":319,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"dependencies.html":{}}}],["valid",{"_index":441,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["valu",{"_index":7,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":270,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["valueaccessor",{"_index":608,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessor.constructor",{"_index":644,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessors.foreach(valueaccessor",{"_index":643,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valuechang",{"_index":94,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["values.map(queryparam.deseri",{"_index":572,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["variabl",{"_index":1181,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":540,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["void",{"_index":48,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["wait",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":1076,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":1154,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":1111,"title":{},"body":{"index.html":{}}}],["websit",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1167,"title":{},"body":{"license.html":{}}}],["widget",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":622,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{},"license.html":{}}}],["word",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":781,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worri",{"_index":1116,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":318,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["wraptrycatch(fn",{"_index":1060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["write",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["writevalu",{"_index":22,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["writevalue(valu",{"_index":55,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["x",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":962,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ye",{"_index":660,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["zoom",{"_index":590,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/CheckboxControlValueAccessorDirective.html":{"url":"directives/CheckboxControlValueAccessorDirective.html","title":"directive - CheckboxControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CheckboxControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/checkbox-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=checkbox][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=checkbox][queryParamName]',\n    providers: [NGQP_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class CheckboxControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: boolean) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onInput(event: UIEvent) {\n        this.fnChange((event.target as HTMLInputElement).checked);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n\n\n            \n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabledChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyChange(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: (value: T) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * TODO Documentation\n *\n * \n * \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /** TODO Documentation */\n    @Output('valueChange')\n    public valueChange = new EventEmitter();\n\n    /** TODO Documentation */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /** TODO Documentation */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    public writeValue(value: T) {\n        this.valueChange.emit(value);\n    }\n\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DefaultControlValueAccessorDirective.html":{"url":"directives/DefaultControlValueAccessorDirective.html","title":"directive - DefaultControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DefaultControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/default-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                compositionend\n                            \n                            \n                                compositionstart\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string | null, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/default-control-value-accessor.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionend\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ncompositionend(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionstart\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompositionstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Inject, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const NGQP_DEFAULT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n};\n\nfunction isAndroid(navigator: Navigator): boolean {\n    return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n}\n\n@Directive({\n    selector: 'input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]',\n    providers: [NGQP_DEFAULT_VALUE_ACCESSOR],\n})\nexport class DefaultControlValueAccessorDirective implements ControlValueAccessor {\n\n    private readonly supportsComposition: boolean;\n    private composing = false;\n\n    private fnChange = (_: string) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        if (this.supportsComposition && this.composing) {\n            return;\n        }\n\n        this.fnChange((event.target as HTMLInputElement).value);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    @HostListener('compositionstart')\n    public onCompositionStart() {\n        this.composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    public onCompositionEnd(event: UIEvent) {\n        this.composing = false;\n        if (this.supportsComposition) {\n            this.fnChange((event.target as HTMLInputElement).value);\n        }\n    }\n\n    constructor(\n        @Optional() @Inject(PLATFORM_ID) private platformId: string | null,\n        private renderer: Renderer2,\n        private elementRef: ElementRef\n    ) {\n        this.supportsComposition = isPlatformBrowser(this.platformId || '') && !isAndroid(window.navigator);\n    }\n\n    public writeValue(value: string) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultRouterAdapter.html":{"url":"injectables/DefaultRouterAdapter.html","title":"injectable - DefaultRouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultRouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/default-router-adapter.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    url\n                                \n                                \n                                    queryParamMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/router-adapter/default-router-adapter.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        navigate(queryParams: Params, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        queryParamMap\n                    \n                \n\n                \n                    \n                        getqueryParamMap()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouterAdapter, RouterAdapterOptions } from './router-adapter.interface';\n\n/**\n * TODO Documentation\n */\nexport const DefaultRouterAdapterOptions: RouterAdapterOptions = {\n    replaceUrl: true,\n};\n\n/**\n * TODO Documentation\n */\n@Injectable()\nexport class DefaultRouterAdapter implements RouterAdapter {\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    public get url() {\n        return this.router.url;\n    }\n\n    public get queryParamMap() {\n        return this.route.queryParamMap;\n    }\n\n    public navigate(queryParams: Params, extras: RouterAdapterOptions = {}): Promise {\n        return this.router.navigate([], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n            queryParams: queryParams,\n            ...extras,\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectControlValueAccessorDirective.html":{"url":"directives/MultiSelectControlValueAccessorDirective.html","title":"directive - MultiSelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select[multiple][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption(option: MultiSelectOptionDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    MultiSelectOptionDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(values: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MultiSelectOptionDirective } from './multi-select-option.directive';\n\nexport const NGQP_MULTI_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select[multiple][queryParamName]',\n    providers: [NGQP_MULTI_SELECT_VALUE_ACCESSOR],\n})\nexport class MultiSelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    private selectedIds: string[] = [];\n    private options = new Map>();\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T[]) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change')\n    public onChange() {\n        this.selectedIds = Array.from(this.options.entries())\n            .filter(([id, option]) => option.selected)\n            .map(([id]) => id);\n        const values = this.selectedIds.map(id => this.optionMap.get(id));\n        this.fnChange(values);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(values: T[]) {\n        values = values === null ? [] : values;\n        if (!Array.isArray(values)) {\n            throw new Error(`Provided a non-array value to select[multiple]: ${values}`);\n        }\n\n        this.selectedIds = values\n            .map(value => this.getOptionId(value))\n            .filter(id => id !== null);\n        this.options.forEach((option, id) => option.selected = this.selectedIds.includes(id));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(option: MultiSelectOptionDirective): string {\n        const newId = (this.idCounter++).toString();\n        this.options.set(newId, option);\n        return newId;\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n        if (this.selectedIds.includes(id)) {\n            this.onChange();\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectOptionDirective.html":{"url":"directives/MultiSelectOptionDirective.html","title":"directive - MultiSelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: MultiSelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MultiSelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:40\n                                \n                            \n\n                \n                    \n                        setselected(selected: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { MultiSelectControlValueAccessorDirective } from './multi-select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class MultiSelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: MultiSelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption(this);\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n        }\n    }\n\n    public get selected(): boolean {\n        return (this.elementRef.nativeElement as HTMLOptionElement).selected;\n    }\n\n    public set selected(selected: boolean) {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selected', selected);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberControlValueAccessorDirective.html":{"url":"directives/NumberControlValueAccessorDirective.html","title":"directive - NumberControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/number-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=number][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/number-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_NUMBER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=number][queryParamName]',\n    providers: [NGQP_NUMBER_VALUE_ACCESSOR],\n})\nexport class NumberControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParam.html":{"url":"classes/QueryParam.html","title":"class - QueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                param\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: QueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:174\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combineWith:     ParamCombinator\n\n                    \n                \n                    \n                        \n                            Type :     ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:171\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debounceTime:     number | null\n\n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:168\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserialize:     ParamDeserializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamDeserializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:162\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        multi:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:165\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        param:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:156\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serialize:     ParamSerializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamSerializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:159\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:153\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:150\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:240\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: T | null, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:229\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T) => string;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string) => T;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        group(queryParams: literal type, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:86\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:87\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:88\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryParam, QueryParamOpts, QueryParamGroup } from './model';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\ntype OverwritePartial = Pick> & Partial>;\nexport type QueryParamOptsInput = OverwritePartial, 'serialize' | 'deserialize' | 'compareWith'>;\n\n/**\n * TODO Documentation\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * TODO Documentation\n     */\n    public group(\n        queryParams: { [ name: string ]: QueryParam | string },\n        extras: RouterAdapterOptions = {}\n    ): QueryParamGroup {\n        const mappedQueryParams: { [ queryParamName: string ]: QueryParam } = {};\n        Object.keys(queryParams).forEach(queryParamName => {\n            mappedQueryParams[ queryParamName ] = this.createQueryParam(queryParams[ queryParamName ]);\n        });\n\n        // TODO Maybe we should first validate that no two queryParams defined the same \"param\".\n        return new QueryParamGroup(mappedQueryParams, extras);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public stringParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public stringParam(opts: QueryParamOptsInput): QueryParam;\n    public stringParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public numericParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public numericParam(opts: QueryParamOptsInput): QueryParam;\n    public numericParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public booleanParam(opts: QueryParamOptsInput & { multi: true }): QueryParam;\n    public booleanParam(opts: QueryParamOptsInput): QueryParam;\n    public booleanParam(opts: QueryParamOptsInput): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public param(opts: QueryParamOpts & { multi: true }): QueryParam;\n    public param(opts: QueryParamOpts): QueryParam;\n    public param(opts: QueryParamOpts): QueryParam {\n        return new QueryParam(opts);\n    }\n\n    private createQueryParam(queryParam: QueryParam | string): QueryParam {\n        if (queryParam instanceof QueryParam) {\n            return queryParam;\n        }\n\n        return this.stringParam({\n            param: queryParam,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                queryParams\n                            \n                            \n                                    Public\n                                    Readonly\n                                routerOptions\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams: literal type, extras: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            queryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryParams:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:60\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            routerOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:63\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:57\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:132\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(queryParamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:86\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patchValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        patchValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:101\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:119\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model.ts:91\n                                \n                            \n                    \n                        \n                                TODO Documentation \n\n\n                                \n                                    Returns :     QueryParamGroupValue\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T) => string;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string) => T;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerAdapter: RouterAdapter, globalRouterOptions: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-group.directive.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerAdapter\n                                                  \n                                                        \n                                                                    RouterAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalRouterOptions\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    QueryParamGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { concatMap, debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { NGQP_ROUTER_ADAPTER, NGQP_ROUTER_OPTIONS, RouterAdapter, RouterAdapterOptions } from './router-adapter/router-adapter.interface';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParam, QueryParamGroup, QueryParamGroupValue, Unpack } from './model';\nimport { isMissing } from './util';\n\n/** TODO Documentation */\nfunction isMultiQueryParam(queryParam: QueryParam): queryParam is QueryParam {\n    return queryParam.multi;\n}\n\n/** TODO Documentation */\nfunction hasArrayValue(queryParam: QueryParam, value: T | T[]): value is T[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/** TODO Documentation */\nfunction hasArraySerialization(queryParam: QueryParam, values: string | string[]): values is string[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamGroup]',\n})\nexport class QueryParamGroupDirective implements OnInit, OnDestroy {\n\n    /** TODO Documentation */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    /** TODO Documentation */\n    private directives: QueryParamNameDirective[] = [];\n\n    /** TODO Documentation @internal */\n    private queue$ = new Subject();\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(NGQP_ROUTER_ADAPTER) private routerAdapter: RouterAdapter,\n        @Optional() @Inject(NGQP_ROUTER_OPTIONS) private globalRouterOptions: RouterAdapterOptions\n    ) {\n        this.setupNavigationQueue();\n    }\n\n    public ngOnInit() {\n        if (!this.queryParamGroup) {\n            throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n        }\n\n        this.queryParamGroup._registerOnChange((value: QueryParamGroupValue) => {\n            let params: Params = {};\n            Object.keys(value).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                if (isMissing(queryParam)) {\n                    return;\n                }\n\n                params = { ...params, ...this.getParamsForValue(queryParam, value[ queryParamName ]) };\n            });\n\n            this.enqueueNavigation(params);\n        });\n\n        Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n            const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n            queryParam._registerOnChange((newValue: any) =>\n                this.enqueueNavigation(this.getParamsForValue(queryParam, newValue))\n            );\n        });\n\n        this.routerAdapter.queryParamMap.subscribe(queryParamMap => {\n            Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                const newValue = queryParam.multi\n                    ? this.deserialize(queryParam, queryParamMap.getAll(queryParam.param))\n                    : this.deserialize(queryParam, queryParamMap.get(queryParam.param));\n\n                // Get the directive, if it has been initialized yet.\n                const directive = this.directives.find(dir => dir.name === queryParamName);\n                if (!isMissing(directive)) {\n                    directive.valueAccessor.writeValue(newValue);\n                }\n\n                queryParam.value = newValue;\n                queryParam._updateValue({ emitEvent: true, onlySelf: true });\n            });\n\n            // We used onlySelf on the queryParams so that we can emit only once on the entire group.\n            this.queryParamGroup._updateValue({ emitEvent: true });\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public addQueryParam(directive: QueryParamNameDirective): void {\n        const queryParam: QueryParam = this.queryParamGroup.get(directive.name);\n        if (!queryParam) {\n            throw new Error(`Could not find query param with name ${directive.name}. Did you forget to add it to your QueryParamGroup?`);\n        }\n        if (!directive.valueAccessor) {\n            throw new Error(`No value accessor found for the form control. Please make sure to implement ControlValueAccessor on this component.`);\n        }\n\n        // Chances are that we read the initial route before a directive has been registered here.\n        // The value in the model will be correct, but we need to sync it to the view once initially.\n        directive.valueAccessor.writeValue(queryParam.value);\n\n        // Proxy updates from the view to debounce them (if needed).\n        const debouncedQueue$ = new Subject();\n        debouncedQueue$.pipe(\n            !isMissing(queryParam.debounceTime) ? debounceTime(queryParam.debounceTime) : tap(),\n            map((newValue: any) => this.getParamsForValue(queryParam, newValue)),\n            takeUntil(this.destroy$),\n        ).subscribe(params => this.enqueueNavigation(params));\n\n        directive.valueAccessor.registerOnChange((newValue: any) => debouncedQueue$.next(newValue));\n\n        this.directives.push(directive);\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    private setupNavigationQueue() {\n        this.queue$.pipe(\n            takeUntil(this.destroy$),\n            concatMap(params => this.routerAdapter.navigate(params, this.routerOptions)),\n        ).subscribe();\n    }\n\n    private enqueueNavigation(params: Params): void {\n        this.queue$.next(params);\n    }\n\n    private getParamsForValue(queryParam: QueryParam, value: T): Params {\n        const newValue = this.serialize(queryParam, value);\n\n        const combinedParams: Params = isMissing(queryParam.combineWith)\n            ? {} : queryParam.combineWith(queryParam.value, value);\n\n        return {\n            ...(combinedParams || {}),\n            [ queryParam.param ]: newValue,\n        };\n    }\n\n    private serialize(queryParam: QueryParam, value: T): string | string[] {\n        return hasArrayValue(queryParam, value)\n            ? (value || []).map(queryParam.serialize)\n            : queryParam.serialize(value);\n    }\n\n    private deserialize(queryParam: QueryParam, values: string | string[]): Unpack | Unpack[] {\n        if (hasArraySerialization(queryParam, values)) {\n            return values.map(queryParam.deserialize);\n        } else {\n            return queryParam.deserialize(values);\n        }\n    }\n\n    private get routerOptions(): RouterAdapterOptions {\n        const groupOptions = this.queryParamGroup ? this.queryParamGroup.routerOptions : {};\n\n        return {\n            ...this.globalRouterOptions,\n            ...groupOptions,\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamGroupValue.html":{"url":"interfaces/QueryParamGroupValue.html","title":"interface - QueryParamGroupValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamGroupValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [queryParamName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T) => string;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string) => T;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param.module.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { ControlValueAccessorDirective } from './control-value-accessor.directive';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterAdapterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterAdapterOptions\n} from './router-adapter/router-adapter';\n\nconst DIRECTIVES: Type[] = [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterAdapterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static forRoot(config: { routerOptions?: RouterAdapterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: config.routerOptions ? config.routerOptions : DefaultRouterAdapterOptions,\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                valueAccessor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: QueryParamGroupDirective, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    QueryParamGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            valueAccessor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAccessor:     ControlValueAccessor | null\n\n                    \n                \n                    \n                        \n                            Type :     ControlValueAccessor | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Inject, Input, OnInit, Optional, Self, SkipSelf } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { DefaultControlValueAccessorDirective, NGQP_BUILT_IN_ACCESSORS } from './accessors/accessors';\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements OnInit {\n\n    /** TODO Documentation */\n    @Input('queryParamName')\n    public name: string;\n\n    /** TODO Documentation */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() @Host() @SkipSelf() private parent: QueryParamGroupDirective,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.parent) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = this.selectValueAccessor(valueAccessors);\n    }\n\n    public ngOnInit() {\n        if (!this.name) {\n            throw new Error(`queryParamName has been added, but without specifying the name.`);\n        }\n\n        this.setupQueryParam();\n    }\n\n    /**\n     * This resembles the selectControlValueAccessor function from\n     *   https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#L186\n     * We can't use it directly since it isn't exported in the public API, but let's hope choosing\n     * any accessor is good enough for our purposes.\n     */\n    private selectValueAccessor(valueAccessors: ControlValueAccessor[]): ControlValueAccessor | null {\n        if (!valueAccessors || !Array.isArray(valueAccessors)) {\n            return null;\n        }\n\n        let defaultAccessor: ControlValueAccessor | null = null;\n        let builtInAccessor: ControlValueAccessor | null = null;\n        let customAccessor: ControlValueAccessor | null = null;\n        valueAccessors.forEach(valueAccessor => {\n            if (valueAccessor.constructor === DefaultControlValueAccessorDirective) {\n                defaultAccessor = valueAccessor;\n            } else if (NGQP_BUILT_IN_ACCESSORS.some(current => valueAccessor.constructor === current)) {\n                if (builtInAccessor !== null) {\n                    throw new Error(`More than one built-in ControlValueAccessor matches`);\n                }\n\n                builtInAccessor = valueAccessor;\n            } else {\n                if (customAccessor !== null) {\n                    throw new Error(`More than one custom ControlValueAccessor has been found on the form control`);\n                }\n\n                customAccessor = valueAccessor;\n            }\n        });\n\n        if (customAccessor !== null) {\n            return customAccessor;\n        }\n\n        if (builtInAccessor !== null) {\n            return builtInAccessor;\n        }\n\n        if (defaultAccessor !== null) {\n            return defaultAccessor;\n        }\n\n        throw new Error(`No matching ControlValueAccessor has been found for this form control`);\n    }\n\n    private setupQueryParam(): void {\n        this.parent.addQueryParam(this);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOpts.html":{"url":"interfaces/QueryParamOpts.html","title":"interface - QueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        multi\n                                \n                                \n                                        param\n                                \n                                \n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:     ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:     Comparator>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:     ParamDeserializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamDeserializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     Unpack\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Unpack\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (+ not supported in multi-mode) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     ParamSerializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamSerializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T) => string;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string) => T;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ queryParamName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamOpts {\n    /** TODO Documentation */\n    param: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no queryParams / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(queryParamName: string): QueryParam {\n        return this.queryParams[ queryParamName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly param: string | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RangeControlValueAccessorDirective.html":{"url":"directives/RangeControlValueAccessorDirective.html","title":"directive - RangeControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RangeControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/range-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_RANGE_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=range][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/range-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_RANGE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=range][queryParamName]',\n    providers: [NGQP_RANGE_VALUE_ACCESSOR],\n})\nexport class RangeControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterAdapter.html":{"url":"interfaces/RouterAdapter.html","title":"interface - RouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        queryParamMap\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    navigate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(queryParams: Params, extras?: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/router-adapter.interface.ts:23\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryParamMap\n                                    \n                                \n                                \n                                    \n                                        queryParamMap:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { NavigationExtras, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * TODO Documentation\n */\nexport interface RouterAdapter {\n\n    /**\n     * TODO Documentation\n     */\n    url: string;\n\n    /**\n     * TODO Documentation\n     */\n    queryParamMap: Observable;\n\n    /**\n     * TODO Documentation\n     */\n    navigate(queryParams: Params, extras?: RouterAdapterOptions): Promise;\n\n}\n\n/**\n * TODO Documentation\n */\nexport type RouterAdapterOptions = Pick;\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectControlValueAccessorDirective.html":{"url":"directives/SelectControlValueAccessorDirective.html","title":"directive - SelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select:not([multiple])[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-control-value-accessor.directive.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T | null\n\n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select:not([multiple])[queryParamName]',\n    providers: [NGQP_SELECT_VALUE_ACCESSOR],\n})\nexport class SelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    public value: T | null = null;\n    private selectedId: string | null = null;\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onChange(event: UIEvent) {\n        this.selectedId = (event.target as HTMLOptionElement).value;\n        this.value = this.optionMap.get(this.selectedId);\n        this.fnChange(this.value);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: T) {\n        this.value = value;\n\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(): string {\n        return (this.idCounter++).toString();\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n\n        if (this.selectedId === id) {\n            this.fnChange(value);\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectOptionDirective.html":{"url":"directives/SelectOptionDirective.html","title":"directive - SelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: SelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    SelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { SelectControlValueAccessorDirective } from './select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class SelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: SelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption();\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.5.0 (2019-01-03)\nBug Fixes\n\ncore: Do not create an empty-on serializer if emptyOn wasn't given (f394fa6)\ncore: Fix list of built-in accessors (2e39369)\ncore: Remove customParam and replace it with param (60377e5)\ncore: Split accessors into one directive per file (a0bde9b)\ncore: Use correct param name in shorthand syntax (f526b61)\ncore: use multi property rather than checking value type (781f009)\ncore: Use proper type in accessor (5d90b63)\ndocs: Fix demo-browser in responsive case (bbaf6e4)\ndocs: Fix first TOC item (0f566ad)\ndocs: Fix fragment misalignment (f02d26d)\ndocs: Fix link to GitHub (2f2675e)\ndocs: Fix margin on fragment headings (07c103e)\ndocs: Fix overflows on small screens (e100621)\ndocs: Fix typo (c6b3a1e)\ndocs: Improve responsiveness of example (c6cd845)\ndocs: Make demo-browser content overflow if necessary (48f2da4)\ndocs: Remove GitHub button for now (aadad1b), closes #36\ndocs: Use PNG instead of SVG (cfa25df)\n\nFeatures\n\ndocs: Added Google Analytics (aea857a), closes #35\n\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            addModuleToImports   (schematics/.../index.ts)\n                        \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            getAngularMajorVersion   (schematics/.../index.ts)\n                        \n                        \n                            getMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            hasArraySerialization   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            hasArrayValue   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            isAndroid   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            isFunction   (src/.../util.ts)\n                        \n                        \n                            isMissing   (src/.../util.ts)\n                        \n                        \n                            isMultiQueryParam   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            Unnamed function   (schematics/.../index.ts)\n                        \n                        \n                            wrapTryCatch   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMatchingVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addModuleToImports\n                            \n                            \n                        \n                    \n                \n                \n                    \naddModuleToImports(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAngularMajorVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAngularMajorVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingVersion(angularVersion, context)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularVersion\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Unnamed function\n                            \n                            \n                        \n                    \n                \n                \n                    \nUnnamed function(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnDeserializer(deserializer, emptyOn)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deserializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnSerializer(serializer, emptyOn, compareWith)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        compareWith\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/query-param-group.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasArraySerialization\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArraySerialization(queryParam, values)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        values\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasArrayValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArrayValue(queryParam, value)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMultiQueryParam\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMultiQueryParam(queryParam)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParam\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isAndroid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAndroid(navigator)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFunction(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMissing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMissing(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapTryCatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nwrapTryCatch(fn, msg)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nngqp – Declaratively synchronize form controls with the URL\n\n  \n\n\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nInstallation\nSimply run ng add @ngqp/core – that's it! We will automatically install ngqp and import it into your app.\nIf you want, you can also avoid running schematics. Just run yarn add @ngqp/core (or npm install --save @ngqp/core) and import the QueryParamModule into your app module:\nimport { NgModule } from '@angular/core';\nimport { QueryParamModule } from '@ngqp/core';\n\n@NgModule({\n    imports: [\n        QueryParamModule\n    ],\n})\nexport class AppModule {}Make sure that your app is set up to use routing (i.e., using RouterModule).\nUsage\nThis section is a work in progress since ngqp is still in an early development stage.\nContributing\nPlease see CONTRIBUTING.md.\nI want to know more\nWhy should I care?\nAngular's router system makes it easy to organize different views under different routes, but often the state of a specific\nroute is not reflected in the URL. This makes it impossible to bookmark or share them as on every new page load the user has\nto set these states manually.\nWith ngqp, you can easily synchronize the state of form controls such as input boxes, dropdowns or your own custom controls\nwith a query parameter on the current URL. This way the URL becomes the single source of truth for this information, which\nallows users to share or bookmark these links and reload your page without having to worry about losing their current state.\nWhat can this be used for?\nngqp will work with any kind of control, but the common scenario would be pagination (i.e., which page a user is on) or\nfilter settings (search query, selections, …)\n\nLicensed under the MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../util.ts)\n                        \n                        \n                            OnChangeFunction   (src/.../model.ts)\n                        \n                        \n                            OverwritePartial   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            ParamCombinator   (src/.../model.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../model.ts)\n                        \n                        \n                            ParamSerializer   (src/.../model.ts)\n                        \n                        \n                            QueryParamOptsInput   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            RouterAdapterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            Unpack   (src/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/util.ts\n    \n        \n            \n                \n                    \n                        \n                        Comparator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Comparator:     function\n\n                    \n                \n            \n        \n\n    src/lib/model.ts\n    \n        \n            \n                \n                    \n                        \n                        OnChangeFunction\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        OnChangeFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamCombinator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamCombinator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamDeserializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamDeserializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamSerializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamSerializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Unpack\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Unpack:     \n\n                    \n                \n            \n        \n\n    src/lib/query-param-builder.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OverwritePartial\n                    \n                \n                \n                    \n                        OverwritePartial:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryParamOptsInput\n                    \n                \n                \n                    \n                        QueryParamOptsInput:     OverwritePartial | \"serialize\" | \"deserialize\" | \"compareWith\">\n\n                    \n                \n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        RouterAdapterOptions\n                    \n                \n                    \n                        \n                            TODO Documentation\n\n                        \n                    \n                \n                    \n                        RouterAdapterOptions:     Pick\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BOOLEAN_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_BOOLEAN_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DefaultRouterAdapterOptions   (src/.../default-router-adapter.service.ts)\n                        \n                        \n                            DIRECTIVES   (src/.../query-param.module.ts)\n                        \n                        \n                            LOOSE_IDENTITY_COMPARATOR   (src/.../util.ts)\n                        \n                        \n                            NGQP_BUILT_IN_ACCESSORS   (src/.../ngqp-accessors.ts)\n                        \n                        \n                            NGQP_CHECKBOX_VALUE_ACCESSOR   (src/.../checkbox-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_DEFAULT_VALUE_ACCESSOR   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_MODULE_NAME   (schematics/.../index.ts)\n                        \n                        \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR   (src/.../multi-select-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_NUMBER_VALUE_ACCESSOR   (src/.../number-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_RANGE_VALUE_ACCESSOR   (src/.../range-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_ROUTER_ADAPTER   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_SELECT_VALUE_ACCESSOR   (src/.../select-control-value-accessor.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/router-adapter/default-router-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterAdapterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DefaultRouterAdapterOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n}\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/query-param.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DIRECTIVES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DIRECTIVES:     Type[]\n\n                    \n                \n                    \n                        \n                            Type :     Type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOOSE_IDENTITY_COMPARATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOOSE_IDENTITY_COMPARATOR:     \n\n                    \n                \n                    \n                        \n                            Default value : (a: T, b: T) => a == b\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/ngqp-accessors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_BUILT_IN_ACCESSORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_BUILT_IN_ACCESSORS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/checkbox-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_CHECKBOX_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MODULE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MODULE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QueryParamModule'\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/multi-select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MULTI_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/number-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_NUMBER_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/range-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_RANGE_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_RANGE_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_ADAPTER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_ADAPTER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_ADAPTER')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_OPTIONS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
