var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/directives/CheckboxControlValueAccessorDirective.html",[0,0.094,1,1.742]],["body/directives/CheckboxControlValueAccessorDirective.html",[0,0.153,1,2.812,2,0.459,3,0.401,4,0.346,5,4.846,6,0.686,7,0.604,8,1.291,9,1.159,10,1.888,11,1.07,12,0.954,13,4.146,14,1.403,15,4.492,16,0.294,17,0.682,18,0.82,19,2.051,20,2.051,21,2.051,22,2.051,23,2.53,24,2.53,25,2.826,26,0.725,27,1.924,28,2.203,29,2.175,30,0.774,31,3.427,32,0.558,33,0.038,34,0.558,35,0.392,36,0.647,37,1.861,38,2.836,39,1.924,40,1.861,41,2.836,42,2.521,43,2.446,44,2.051,45,3.427,46,2.203,47,0.713,48,1.125,49,2.051,50,3.427,51,2.051,52,1.511,53,3.427,54,2.051,55,2.051,56,2.446,57,0.526,58,1.692,59,1.175,60,1.861,61,0.584,62,0.385,63,0.725,64,1.42,65,0.725,66,0.652,67,0.294,68,0.854,69,1.565,70,1.565,71,1.565,72,2.446,73,2.156,74,2.836,75,3.427,76,1.73,77,2.156,78,2.051,79,1.73,80,1.861,81,3.427,82,1.565,83,1.565,84,0.026,85,0.026]],["title/directives/ControlValueAccessorDirective.html",[0,0.094,86,1.742]],["body/directives/ControlValueAccessorDirective.html",[0,0.149,2,0.438,3,0.383,4,0.33,7,0.608,8,1.231,9,1.123,10,2.106,11,1.02,12,0.994,14,1.359,16,0.28,17,0.66,18,0.825,19,1.987,20,1.987,21,1.987,22,1.987,30,0.764,32,0.549,33,0.038,34,0.549,35,0.405,36,0.636,40,1.803,44,1.987,46,2.162,47,0.728,48,1.226,49,1.987,51,1.987,52,1.39,54,1.491,55,1.987,56,2.332,57,0.51,58,1.844,59,1.12,60,2.027,61,0.557,62,0.28,64,1.803,65,0.92,66,0.829,67,0.28,68,0.742,69,1.491,70,1.491,71,1.491,78,1.491,82,1.491,84,0.026,85,0.026,86,2.929,87,5.795,88,1.02,89,1.496,90,1.226,91,4.351,92,4.893,93,4.893,94,2.471,95,5.435,96,2.055,97,4.351,98,1.667,99,2.703,100,2.703,101,1.236,102,2.703,103,2.332,104,2.055,105,3.266,106,3.266,107,1.018,108,3.266,109,1.833,110,3.266,111,3.266]],["title/directives/DefaultControlValueAccessorDirective.html",[0,0.094,112,1.567]],["body/directives/DefaultControlValueAccessorDirective.html",[0,0.143,2,0.403,3,0.352,4,0.304,6,0.683,7,0.608,8,1.133,9,1.062,10,1.767,11,0.939,12,0.893,14,1.285,16,0.258,17,0.624,18,0.814,19,1.879,20,1.879,21,1.879,22,1.879,23,2.368,24,2.368,26,0.87,28,2.09,29,2.104,30,0.773,32,0.534,33,0.038,34,0.534,35,0.375,36,0.654,37,1.944,39,2.309,40,2.09,42,2.831,44,1.879,46,2.09,47,0.731,48,1.067,49,1.879,51,1.879,52,1.501,54,1.879,55,1.879,57,0.549,58,1.55,59,1.031,60,1.705,61,0.513,62,0.353,63,0.87,64,1.246,65,0.636,66,0.783,67,0.258,68,0.952,69,1.373,70,1.373,71,1.373,73,1.891,74,3.405,76,1.518,77,1.891,78,1.879,80,1.705,82,1.373,83,1.373,84,0.024,85,0.024,96,1.891,101,0.854,104,1.891,112,2.368,113,4.166,114,3.882,115,4.114,116,4.114,117,4.691,118,1.55,119,3.006,120,1.307,121,1.302,122,3.006,123,4.114,124,2.146,125,3.006,126,3.006,127,2.146,128,3.006,129,3.006,130,3.006,131,2.146,132,1.246,133,3.006,134,3.006,135,2.488,136,2.488,137,1.687,138,3.006,139,3.006,140,1.246,141,3.006,142,3.006,143,2.309,144,2.146,145,4.691,146,4.691,147,2.937,148,3.006,149,3.006,150,3.006,151,3.006,152,3.006,153,3.006,154,3.006,155,3.405]],["title/injectables/DefaultRouterAdapter.html",[132,1.286,156,2.215]],["body/injectables/DefaultRouterAdapter.html",[2,0.509,3,0.445,4,0.384,7,0.384,9,0.981,16,0.326,17,0.729,18,0.764,26,0.804,30,0.741,32,0.485,33,0.037,34,0.485,35,0.341,36,0.562,47,0.741,57,0.616,61,0.648,62,0.411,63,0.804,66,0.724,67,0.326,68,0.648,79,1.919,84,0.028,85,0.028,88,1.187,89,1.359,90,1.113,132,2.181,137,2.695,156,3.427,157,3.587,158,4.718,159,1.921,160,3.145,161,1.809,162,3.311,163,4.355,164,3.8,165,3.311,166,5.528,167,3.8,168,3.973,169,1.427,170,2.524,171,1.78,172,3.8,173,1.432,174,4.355,175,3.973,176,3.8,177,3.8,178,3.8,179,3.8,180,1.575,181,3.02,182,1.735,183,2.713,184,2.713,185,3.8,186,3.8,187,3.8,188,3.8,189,3.8,190,3.8,191,2.713]],["title/directives/MultiSelectControlValueAccessorDirective.html",[0,0.094,192,1.417]],["body/directives/MultiSelectControlValueAccessorDirective.html",[0,0.135,2,0.363,3,0.318,4,0.274,6,0.677,7,0.622,8,1.022,9,0.989,10,1.673,11,0.847,12,0.845,14,1.196,16,0.232,17,0.581,18,0.823,19,1.749,20,1.749,21,1.749,22,1.749,23,2.242,24,2.242,25,2.793,26,0.574,27,1.523,28,1.999,29,2.045,30,0.766,32,0.56,33,0.038,34,0.56,35,0.394,36,0.683,37,1.587,44,1.749,46,1.999,47,0.766,48,1.173,49,1.749,51,1.749,52,1.262,54,1.749,55,1.749,57,0.52,58,1.443,59,0.93,60,1.587,61,0.463,62,0.328,63,1.02,64,1.124,65,0.81,66,0.516,67,0.232,68,0.945,69,1.238,70,1.238,71,1.238,72,1.936,76,1.37,78,1.749,79,1.37,80,1.124,82,1.238,83,1.238,84,0.022,85,0.022,98,1.575,103,1.936,104,1.706,107,1.039,109,1.523,120,1.337,121,1.245,124,1.936,131,1.936,192,2.028,193,4.126,194,2.946,195,3.675,196,3.83,197,3.17,198,3.17,199,3.17,200,2.712,201,1.936,202,3.17,203,2.712,204,3.415,205,2.245,206,3.83,207,2.436,208,2.245,209,3.17,210,2.712,211,2.735,212,2.712,213,2.245,214,2.735,215,2.245,216,2.245,217,2.245,218,2.712,219,3.17,220,2.712,221,2.712,222,3.83,223,2.712,224,2.712,225,3.17,226,2.245,227,2.245,228,1.124,229,2.712,230,1.37,231,2.712,232,2.712,233,2.712,234,2.245,235,2.712,236,2.712,237,3.83,238,3.83,239,2.245,240,2.712,241,2.245,242,2.245,243,2.712,244,2.245,245,2.245]],["title/directives/MultiSelectOptionDirective.html",[0,0.094,207,1.567]],["body/directives/MultiSelectOptionDirective.html",[0,0.155,2,0.472,3,0.413,4,0.356,6,0.413,7,0.595,9,1.181,11,1.101,14,1.429,16,0.302,17,0.694,18,0.798,26,0.968,28,2.227,29,2.19,30,0.779,32,0.513,33,0.038,34,0.513,35,0.325,36,0.681,37,2.104,47,0.746,48,1.137,52,1.527,57,0.536,61,0.601,62,0.302,65,0.745,67,0.302,68,0.917,80,1.895,84,0.027,85,0.027,98,1.001,118,1.914,120,0.825,121,1.181,140,1.46,161,1.724,192,2.454,193,4.206,194,3.114,204,2.217,207,2.31,246,2.917,247,3.195,248,3.626,249,3.838,250,3.382,251,2.516,252,2.917,253,2.089,254,4.575,255,2.917,256,2.917,257,1.78,258,3.525,259,3.525,260,3.525,261,3.525,262,3.266,263,2.516,264,2.543,265,3.786,266,3.525,267,2.917,268,2.917,269,2.878,270,2.917,271,2.917,272,3.525,273,3.525,274,3.525]],["title/directives/NumberControlValueAccessorDirective.html",[0,0.094,275,1.742]],["body/directives/NumberControlValueAccessorDirective.html",[0,0.151,2,0.448,3,0.391,4,0.338,6,0.682,7,0.614,8,1.259,9,1.141,10,1.865,11,1.044,12,0.942,14,1.38,16,0.286,17,0.671,18,0.818,19,2.018,20,2.018,21,2.018,22,2.018,23,2.499,24,2.499,26,0.707,27,1.876,28,2.182,29,2.162,30,0.769,32,0.553,33,0.038,34,0.553,35,0.389,36,0.641,37,1.831,39,1.876,40,1.831,42,2.48,43,2.386,44,2.018,46,2.182,47,0.706,48,1.114,49,2.018,51,2.018,52,1.406,54,2.018,55,2.018,57,0.517,58,1.665,59,1.147,60,1.831,61,0.57,62,0.379,63,1.047,64,1.385,65,0.707,66,0.636,67,0.286,68,0.844,69,1.526,70,1.526,71,1.526,73,2.103,76,1.688,77,2.103,78,2.018,79,1.688,80,1.831,82,1.526,83,1.526,84,0.026,85,0.026,96,2.103,99,2.766,100,2.766,104,2.103,109,1.876,118,1.665,121,1.141,127,2.386,144,2.386,147,2.386,155,3.656,201,2.386,275,2.778,276,4.82,277,4.096,278,4.419,279,2.766,280,1.688,281,2.386,282,2.766]],["title/injectables/QueryParamBuilder.html",[132,1.286,283,2.568]],["body/injectables/QueryParamBuilder.html",[2,0.301,3,0.263,4,0.227,6,0.517,7,0.227,16,0.192,17,0.507,18,0.84,30,0.785,32,0.598,33,0.038,34,0.598,35,0.418,36,0.682,47,0.809,57,0.553,61,0.383,62,0.286,63,0.475,65,0.999,66,0.899,67,0.192,68,0.383,84,0.02,85,0.02,88,0.702,89,1.468,90,1.19,98,1.133,107,1.105,120,1.105,132,1.653,159,0.702,169,1.554,170,2.017,171,1.379,173,0.846,182,1.026,283,2.765,284,2.676,285,1.859,286,4.095,287,4.095,288,2.848,289,4.095,290,4.452,291,4.948,292,5.061,293,2.246,294,3.308,295,2.837,296,2.246,297,2.246,298,4.948,299,2.658,300,2.246,301,2.246,302,2.246,303,2.246,304,2.102,305,2.246,306,1.503,307,4.948,308,2.246,309,2.246,310,2.246,311,4.948,312,2.246,313,3.341,314,2.246,315,2.246,316,4.948,317,2.246,318,2.246,319,2.246,320,0.931,321,2.765,322,2.765,323,2.765,324,2.765,325,2.765,326,2.765,327,1.956,328,3.655,329,0.931,330,0.77,331,2.765,332,1.604,333,2.246,334,1.83,335,1.83,336,2.246,337,2.246,338,3.341,339,2.23,340,2.246,341,2.246,342,2.246,343,1.859,344,1.859,345,2.246,346,2.246,347,2.246,348,1.604,349,1.026,350,2.246,351,2.246,352,2.246,353,3.989,354,2.246,355,2.246]],["title/classes/QueryParamControl.html",[67,0.266,295,1.417]],["body/classes/QueryParamControl.html",[2,0.238,3,0.208,4,0.179,6,0.528,7,0.587,12,0.338,16,0.152,17,0.423,18,0.82,26,0.59,30,0.702,32,0.455,33,0.038,34,0.553,35,0.408,36,0.404,47,0.569,48,1.109,52,1.461,57,0.497,62,0.43,63,0.898,65,1.088,66,0.338,67,0.295,68,0.724,84,0.016,85,0.016,88,0.554,89,1.595,90,1.307,94,2.144,98,1.536,101,1.11,107,1.143,120,1.203,121,1.454,140,2.429,143,2.647,159,0.554,169,0.72,170,1.274,171,1.076,173,1.472,180,0.735,182,0.81,228,1.868,230,0.896,253,1.274,257,1.972,264,0.81,280,1.972,294,2.82,295,1.939,299,2.819,304,2.457,306,1.299,320,0.735,327,2.131,329,0.735,330,0.609,334,2.024,335,1.619,339,2.596,349,2.433,356,0.996,357,1.274,358,2.742,359,2.381,360,2.308,361,1.991,362,1.755,363,1.774,364,2.384,365,1.774,366,1.774,367,2.384,368,1.774,369,1.774,370,1.774,371,2.384,372,1.774,373,1.774,374,2.384,375,2.168,376,1.774,377,2.168,378,1.774,379,1.774,380,1.74,381,0.81,382,1.566,383,0.996,384,0.896,385,1.934,386,0.996,387,0.996,388,2.384,389,1.116,390,0.996,391,1.408,392,1.116,393,0.996,394,1.755,395,1.051,396,2.144,397,1.408,398,0.996,399,1.972,400,1.116,401,1.116,402,1.116,403,1.755,404,0.896,405,1.755,406,2.671,407,0.996,408,1.116,409,1.116,410,1.934,411,1.755,412,1.755,413,1.116,414,1.755,415,1.116,416,2.647,417,0.996,418,0.996,419,1.116,420,2.671,421,2.168,422,1.755,423,1.755,424,1.116,425,1.116,426,1.116,427,1.116,428,0.735,429,1.116,430,1.116,431,2.457,432,1.116,433,1.116,434,1.116,435,1.116,436,1.116,437,1.116,438,1.116,439,1.116,440,1.116,441,0.996,442,0.996,443,1.116,444,0.996,445,1.566,446,1.116,447,0.996,448,1.116,449,1.116,450,1.116,451,0.996,452,1.116,453,0.996,454,1.116,455,1.116,456,1.116,457,1.116]],["title/interfaces/QueryParamControlOpts.html",[299,1.567,395,1.169]],["body/interfaces/QueryParamControlOpts.html",[2,0.258,3,0.226,4,0.195,6,0.569,7,0.568,12,0.367,16,0.165,18,0.784,26,0.408,32,0.367,33,0.038,34,0.541,35,0.391,36,0.588,47,0.487,48,1.09,52,1.496,57,0.517,62,0.442,63,0.934,65,1.133,66,0.367,67,0.255,68,0.753,84,0.017,85,0.017,88,0.602,89,1.601,90,1.312,94,1.502,98,1.464,101,1.161,107,1.175,120,1.232,121,1.404,140,2.181,143,2.73,159,0.602,169,0.768,170,1.359,171,1.135,180,0.799,182,0.88,228,1.933,230,1.502,253,1.359,257,1.835,264,0.88,280,2.063,294,2.478,295,1.865,299,2.602,306,1.369,320,0.799,327,2.22,329,0.799,330,0.661,334,2.081,335,2.015,339,2.658,349,2.13,356,1.082,357,1.359,358,2.819,359,2.455,362,1.213,364,2.478,367,2.478,371,2.478,374,2.04,375,1.872,377,1.872,380,1.835,381,0.88,382,2.293,383,1.082,384,0.973,385,2.04,386,1.082,387,1.082,388,2.478,389,1.213,390,1.082,391,2.063,392,1.213,393,1.082,394,1.872,395,1.369,396,2.229,397,1.835,398,1.67,399,2.455,400,1.872,401,1.872,402,1.872,403,1.872,404,0.973,405,1.872,406,2.777,407,1.082,408,1.213,409,1.213,410,2.04,411,1.872,412,1.872,413,1.213,414,1.872,415,1.213,416,2.73,417,1.082,418,1.082,419,1.213,420,2.777,421,2.286,422,1.872,423,1.872,424,1.213,425,1.213,426,1.213,427,1.213,428,0.799,429,1.213,430,1.213,431,2.57,432,1.213,433,1.213,434,1.213,435,1.213,436,1.213,437,1.213,438,1.213,439,1.213,440,1.213,441,1.082,442,1.082,443,1.213,444,1.082,445,1.67,446,1.213,447,1.082,448,1.213,449,1.213,450,1.213,451,1.082,452,1.213,453,1.082,454,1.213,455,1.213,456,1.213,457,1.213]],["title/classes/QueryParamGroup.html",[67,0.266,306,1.169]],["body/classes/QueryParamGroup.html",[2,0.243,3,0.213,4,0.183,6,0.606,7,0.589,12,0.345,16,0.155,17,0.431,18,0.813,26,0.6,30,0.678,32,0.497,33,0.038,34,0.549,35,0.416,36,0.503,47,0.66,48,1.133,52,1.399,57,0.503,62,0.434,63,0.908,65,1.006,66,0.345,67,0.3,68,0.732,84,0.017,85,0.017,88,0.567,89,1.594,90,1.306,94,2.167,98,1.438,101,1.124,107,1.152,120,1.211,121,1.336,140,2.324,143,2.67,159,0.567,161,1.07,169,0.733,170,1.806,171,1.485,173,1.49,180,0.752,182,0.829,228,1.886,230,0.916,253,1.296,257,1.997,264,0.829,280,1.433,294,2.905,295,1.96,299,2.485,304,3.256,306,1.49,320,0.752,327,1.971,329,0.752,330,0.622,334,1.778,335,1.639,339,2.663,349,2.078,356,1.019,357,1.296,358,2.409,359,1.997,360,2.349,361,2.027,362,1.142,364,1.963,367,1.963,371,1.963,374,2.409,375,2.2,377,2.2,380,1.765,381,0.829,382,1.593,383,1.019,384,0.916,385,1.963,386,1.019,387,1.019,388,2.409,389,1.142,390,1.019,391,1.433,392,1.142,393,1.019,394,1.786,395,1.07,396,2.613,397,1.433,398,1.019,399,1.997,400,1.142,401,1.142,402,1.142,403,1.786,404,1.997,405,1.786,406,2.7,407,1.019,408,1.142,409,1.142,410,1.963,411,1.786,412,1.786,413,1.786,414,1.786,415,1.786,416,2.67,417,1.019,418,1.019,419,1.142,420,2.7,421,2.2,422,1.786,423,1.786,424,1.142,425,1.142,426,1.142,427,1.142,428,0.752,429,1.142,430,1.142,431,2.488,432,1.142,433,1.142,434,1.142,435,1.142,436,1.142,437,1.142,438,1.142,439,1.142,440,1.142,441,1.019,442,1.019,443,1.142,444,1.019,445,1.593,446,1.142,447,1.019,448,1.142,449,1.142,450,1.142,451,1.019,452,1.142,453,1.019,454,1.142,455,1.142,456,1.142,457,1.142,458,2.349,459,1.815,460,1.815,461,1.815,462,1.815,463,1.815,464,1.815,465,1.815,466,1.815,467,1.815,468,1.815,469,1.815]],["title/directives/QueryParamGroupDirective.html",[0,0.094,470,1.567]],["body/directives/QueryParamGroupDirective.html",[0,0.164,2,0.328,3,0.287,4,0.248,6,0.655,7,0.465,9,1.083,10,0.923,11,0.765,14,1.112,16,0.21,17,0.541,18,0.723,26,0.753,30,0.617,32,0.248,33,0.038,34,0.248,35,0.253,36,0.491,47,0.749,48,0.974,57,0.632,61,0.418,62,0.21,63,1.182,66,0.799,67,0.21,68,0.966,84,0.021,85,0.021,88,0.765,89,1.443,90,1.182,98,1.39,101,1.012,107,1.195,118,1.581,120,0.982,132,1.015,159,0.765,161,0.923,165,1.542,169,1.504,171,1.528,180,1.015,181,3.211,182,1.119,214,1.75,227,2.028,228,1.739,247,2.64,248,2.996,249,3.288,250,2.898,284,2.234,288,2.543,295,2.585,306,2.106,320,2.28,329,1.015,330,0.841,339,1.798,359,1.237,380,2.326,381,1.119,384,1.237,390,1.999,391,2.119,396,1.798,404,1.237,407,1.376,410,2.355,416,1.999,417,1.376,418,1.376,428,1.015,453,1.999,470,1.798,471,2.028,472,2.451,473,4.196,474,2.451,475,2.451,476,2.451,477,2.451,478,2.451,479,2.451,480,3.562,481,2.451,482,1.542,483,1.542,484,2.119,485,2.028,486,2.948,487,3.562,488,2.948,489,2.451,490,2.028,491,2.451,492,2.451,493,2.451,494,2.451,495,3.562,496,2.451,497,1.75,498,2.451,499,2.451,500,1.999,501,2.451,502,4.196,503,3.562,504,3.562,505,3.562,506,2.451,507,2.451,508,4.606,509,2.451,510,2.451,511,2.451,512,2.451,513,3.472,514,2.451,515,2.451,516,2.451,517,2.451,518,2.451,519,2.451,520,2.451,521,3.562,522,2.451,523,2.451,524,2.451,525,2.451,526,2.451,527,2.451,528,2.451,529,2.451,530,2.451,531,2.028,532,1.542,533,2.451,534,2.028,535,2.028,536,2.028,537,1.75,538,2.028,539,2.028,540,2.451,541,2.451,542,2.451,543,2.451,544,2.451,545,2.028,546,2.948,547,2.451,548,2.948,549,2.451,550,2.451,551,2.028,552,2.451,553,2.451,554,2.451,555,2.451,556,2.451,557,2.451,558,3.562,559,2.451,560,2.451,561,2.451,562,2.451,563,2.451,564,2.451,565,2.451,566,2.451,567,2.451,568,2.451,569,2.451,570,2.451,571,2.451,572,3.562,573,2.451,574,2.451,575,2.451,576,2.451,577,2.451,578,2.451,579,2.451,580,2.451,581,2.451,582,3.562,583,2.451,584,2.451]],["title/interfaces/QueryParamGroupValue.html",[395,1.169,396,1.567]],["body/interfaces/QueryParamGroupValue.html",[2,0.277,3,0.242,4,0.209,6,0.561,7,0.571,12,0.393,16,0.177,18,0.792,26,0.437,30,0.277,32,0.383,33,0.038,34,0.519,35,0.323,47,0.508,48,1.112,52,1.459,57,0.533,62,0.45,63,0.963,65,1.054,66,0.393,67,0.269,68,0.777,84,0.018,85,0.018,88,0.645,89,1.594,90,1.306,94,1.584,98,1.494,101,1.203,107,1.201,120,1.23,121,1.384,140,2.221,143,2.797,159,0.645,169,0.81,170,1.432,171,1.184,180,0.856,182,0.943,228,1.986,230,1.043,253,1.432,257,1.915,264,0.943,280,1.584,294,2.556,295,1.934,299,2.592,306,1.429,320,0.856,327,2.064,329,0.856,330,0.708,334,1.887,335,1.755,339,2.751,349,2.189,356,1.159,358,2.556,359,2.138,362,1.299,364,2.129,367,2.129,371,2.129,374,2.129,375,1.973,377,1.973,380,1.915,381,0.943,382,1.761,383,1.159,384,1.043,385,2.129,386,1.159,387,1.159,388,2.556,389,1.299,390,1.159,391,1.584,392,1.299,393,1.159,394,1.973,395,1.429,396,2.421,397,1.584,398,1.159,399,2.138,400,1.299,401,1.299,402,1.299,403,1.973,404,1.043,405,1.973,406,2.865,407,1.159,408,1.299,409,1.299,410,2.129,411,1.973,412,1.973,413,1.299,414,1.973,415,1.299,416,2.797,417,1.159,418,1.159,419,1.299,420,2.865,421,2.386,422,1.973,423,1.973,424,1.299,425,1.299,426,1.299,427,1.299,428,0.856,429,1.299,430,1.299,431,2.664,432,1.299,433,1.299,434,1.299,435,1.299,436,1.299,437,1.299,438,1.299,439,1.299,440,1.299,441,1.159,442,1.159,443,1.299,444,1.159,445,1.761,446,1.299,447,1.159,448,1.299,449,1.299,450,1.299,451,1.159,452,1.299,453,1.159,454,1.299,455,1.299,456,1.299,457,1.299,585,2.065]],["title/modules/QueryParamModule.html",[586,1.417,587,1.567]],["body/modules/QueryParamModule.html",[0,0.145,1,3.321,2,0.413,3,0.361,4,0.311,6,0.361,7,0.423,12,1.046,17,0.468,18,0.413,30,0.413,32,0.311,33,0.038,34,0.311,35,0.378,36,0.361,47,0.561,57,0.658,61,0.525,62,0.437,63,0.652,67,0.264,84,0.025,85,0.025,86,3.321,112,2.987,156,2.987,159,0.962,161,1.161,169,1.08,171,1.307,173,1.161,183,3.392,192,2.701,207,2.987,263,2.2,275,3.321,284,1.91,304,2.632,330,1.057,404,1.556,428,1.734,470,2.987,482,2.632,483,2.989,484,2.987,485,2.55,586,1.91,587,3.196,588,1.73,589,2.55,590,3.392,591,2.2,592,2.55,593,2.55,594,2.55,595,3.321,596,2.987,597,3.321,598,3.462,599,2.55,600,2.2,601,2.55,602,4.184,603,2.55,604,4.184,605,3.081,606,2.55,607,4.751,608,3.931,609,2.55,610,2.55,611,3.081,612,3.081,613,4.184,614,4.184]],["title/directives/QueryParamNameDirective.html",[0,0.094,484,1.567]],["body/directives/QueryParamNameDirective.html",[0,0.144,2,0.407,3,0.356,4,0.307,6,0.593,7,0.477,9,1.07,10,2.257,11,0.949,14,1.295,16,0.26,17,0.629,18,0.764,26,0.877,30,0.679,32,0.307,33,0.038,34,0.477,35,0.335,36,0.593,47,0.711,48,0.877,57,0.593,58,1.145,59,1.043,61,0.518,62,0.355,67,0.26,68,0.805,84,0.024,85,0.03,88,0.949,89,1.413,90,1.158,101,0.864,107,1.241,112,2.093,118,1.778,120,0.97,121,1.582,132,1.26,161,1.778,169,1.413,173,1.145,228,2.197,247,2.968,250,3.188,251,2.17,253,2.154,262,2.96,264,1.388,284,2.421,306,1.145,357,1.893,428,1.26,442,1.706,470,2.559,484,2.093,497,2.17,500,1.706,531,2.516,532,1.912,534,3.431,535,3.904,609,2.516,610,2.516,615,3.04,616,5.067,617,5.902,618,4.146,619,3.04,620,3.04,621,4.146,622,4.146,623,2.516,624,3.04,625,3.04,626,3.04,627,3.04,628,3.04,629,3.04,630,2.17,631,3.04,632,3.04,633,2.516,634,3.04,635,3.04,636,3.04,637,3.04,638,2.516,639,2.17,640,3.04,641,3.04,642,3.04,643,3.04,644,3.04,645,2.516,646,3.04,647,3.04,648,5.067,649,5.303,650,5.303,651,3.04,652,4.146,653,3.04,654,2.516,655,4.146,656,4.146,657,3.04,658,2.516,659,2.516,660,3.04,661,3.04]],["title/directives/RangeControlValueAccessorDirective.html",[0,0.094,595,1.742]],["body/directives/RangeControlValueAccessorDirective.html",[0,0.152,2,0.453,3,0.396,4,0.342,6,0.684,7,0.607,8,1.275,9,1.15,10,1.876,11,1.057,12,0.948,14,1.391,16,0.29,17,0.676,18,0.819,19,2.034,20,2.034,21,2.034,22,2.034,23,2.514,24,2.514,26,0.716,27,1.9,28,2.193,29,2.169,30,0.771,32,0.556,33,0.038,34,0.556,35,0.39,36,0.644,37,1.846,39,1.9,40,1.846,42,2.501,43,2.416,44,2.034,46,2.193,47,0.709,48,1.119,49,2.034,51,2.034,52,1.415,54,2.034,55,2.034,57,0.522,58,1.679,59,1.161,60,1.846,61,0.577,62,0.382,63,0.942,64,1.402,65,0.716,66,0.644,67,0.29,68,0.849,69,1.545,70,1.545,71,1.545,73,2.129,76,1.709,77,2.129,78,2.034,79,1.709,80,1.846,82,1.545,83,1.545,84,0.026,85,0.026,96,2.129,109,1.9,118,1.679,121,0.874,124,2.416,127,2.416,144,2.416,147,2.416,201,2.416,279,2.8,280,1.709,281,2.416,282,3.686,595,2.795,662,4.833,663,4.121,664,4.455,665,3.384,666,3.384]],["title/interfaces/RouterAdapter.html",[181,1.952,395,1.169]],["body/interfaces/RouterAdapter.html",[2,0.528,3,0.461,4,0.398,16,0.337,17,0.745,30,0.528,32,0.398,33,0.038,34,0.398,35,0.398,36,0.461,47,0.528,57,0.626,61,0.672,62,0.48,63,1.038,84,0.029,85,0.029,88,1.23,89,1.588,90,1.301,107,1.149,120,1.252,137,2.756,157,3.088,162,3.523,163,4.634,168,4.062,169,1.446,170,2.442,171,1.749,174,3.259,175,4.062,180,1.632,181,3.088,330,1.684,332,2.811,357,2.242,374,3.143,381,1.798,395,1.85,482,2.477,483,2.477,667,2.811,668,3.938,669,3.938,670,3.938,671,3.938,672,3.938,673,3.259,674,3.259]],["title/directives/SelectControlValueAccessorDirective.html",[0,0.094,596,1.567]],["body/directives/SelectControlValueAccessorDirective.html",[0,0.137,2,0.373,3,0.326,4,0.281,6,0.686,7,0.625,8,1.049,9,1.007,10,1.697,11,0.87,12,0.858,14,1.218,16,0.239,17,0.592,18,0.83,19,1.782,20,1.782,21,1.782,22,1.782,23,2.274,24,2.274,25,2.455,26,0.589,27,1.563,28,2.022,29,2.061,30,0.778,32,0.553,33,0.038,34,0.553,35,0.396,36,0.641,37,1.617,38,2.304,39,1.563,40,1.617,41,2.304,42,2.19,44,1.782,46,2.022,47,0.77,48,1.18,49,1.782,51,1.782,52,1.28,54,1.782,55,1.782,56,1.988,57,0.457,58,1.47,59,0.955,60,1.617,61,0.475,62,0.334,63,0.825,64,1.154,65,0.589,66,0.53,67,0.239,68,0.933,69,1.271,70,1.271,71,1.271,72,1.988,76,1.406,78,1.782,79,1.406,80,1.866,82,1.271,83,1.271,84,0.023,85,0.023,98,1.65,102,2.304,103,1.988,107,0.652,109,1.563,120,1.345,121,1.483,131,1.988,173,1.049,197,3.229,198,4.039,199,3.229,202,3.229,204,3.233,205,2.304,208,2.304,209,3.229,211,2.786,213,2.304,214,1.988,215,2.304,216,2.304,217,2.304,219,4.253,225,2.304,226,2.304,234,2.304,239,2.304,241,2.304,242,2.304,244,2.304,245,2.304,281,1.988,357,1.782,451,2.19,596,2.274,675,4.185,676,3.727,677,3.902,678,2.785,679,2.785,680,2.785,681,2.785,682,2.785,683,2.785,684,2.785,685,2.785,686,2.785,687,2.304]],["title/directives/SelectOptionDirective.html",[0,0.094,597,1.742]],["body/directives/SelectOptionDirective.html",[0,0.159,2,0.504,3,0.44,4,0.38,6,0.44,7,0.603,9,1.231,11,1.174,14,1.489,16,0.322,17,0.724,18,0.79,26,1.008,28,2.281,29,2.222,30,0.761,32,0.482,33,0.037,34,0.482,35,0.267,36,0.68,37,2.169,47,0.702,48,1.107,57,0.558,61,0.641,62,0.322,67,0.322,68,0.939,80,1.557,84,0.028,85,0.028,98,1.068,118,1.973,120,0.88,121,1.231,140,1.557,161,1.796,194,1.898,204,2.364,246,3.11,247,3.294,248,3.738,249,3.931,250,3.464,251,2.683,252,3.11,253,2.177,255,3.11,256,3.11,257,1.898,262,3.403,263,2.683,264,2.514,265,3.945,267,3.11,268,3.11,269,2.364,270,3.11,271,3.11,596,2.78,597,2.676,675,4.145,688,4.767,689,3.758,690,4.767]],["title/changelog.html",[691,1.861,692,1.861,693,2.606]],["body/changelog.html",[0,0.097,4,0.387,6,0.537,7,0.463,9,0.542,12,0.919,17,0.482,18,0.281,25,2.686,29,0.791,30,0.425,33,0.025,34,0.212,35,0.149,36,0.565,40,0.87,62,0.272,65,0.672,66,0.4,83,0.958,84,0.019,85,0.019,88,0.655,90,0.444,94,1.06,101,0.596,107,0.491,118,0.791,121,0.542,137,1.178,140,0.87,159,0.655,161,1.609,162,2.409,165,1.32,169,1.102,173,1.196,184,2.734,191,1.498,192,0.958,194,1.603,228,0.87,230,1.603,269,2.885,286,1.737,287,1.737,288,2.734,289,1.737,290,1.737,306,1.196,320,0.87,327,1.999,329,0.87,334,1.316,335,1.316,343,2.627,344,1.737,348,2.267,349,0.958,357,1.45,358,1.782,359,1.06,361,1.498,393,1.178,397,1.603,398,1.178,399,1.934,445,1.782,458,1.737,490,1.737,497,4.291,500,2.812,513,1.737,532,1.997,537,3.274,539,1.737,545,2.627,546,1.737,551,3.795,586,0.958,588,1.782,591,2.267,603,2.627,606,1.737,638,2.627,639,1.498,694,2.099,695,2.099,696,3.175,697,2.099,698,4.27,699,3.175,700,2.099,701,2.099,702,4.855,703,5.866,704,3.83,705,5.714,706,5.97,707,6.19,708,3.83,709,5.159,710,2.099,711,2.099,712,2.099,713,2.099,714,5.281,715,2.099,716,2.099,717,6.182,718,2.099,719,2.099,720,2.099,721,2.099,722,3.175,723,2.099,724,2.099,725,2.099,726,2.099,727,2.627,728,2.099,729,2.099,730,2.099,731,4.586,732,2.099,733,2.099,734,2.099,735,2.099,736,2.099,737,4.824,738,2.099,739,4.27,740,3.83,741,2.099,742,2.099,743,3.175,744,3.795,745,2.099,746,2.099,747,3.83,748,2.099,749,2.099,750,2.099,751,2.099,752,1.737,753,2.099,754,2.099,755,3.577,756,2.099,757,2.099,758,2.099,759,2.099,760,3.175,761,2.099,762,4.27,763,3.169,764,3.175,765,2.099,766,2.099,767,3.175,768,2.099,769,2.099,770,2.099,771,2.099,772,2.099,773,2.099,774,4.27,775,3.795,776,2.099,777,2.099,778,1.737,779,2.099,780,2.099,781,3.175,782,2.627,783,2.099,784,5.866,785,2.099,786,2.099,787,2.099,788,2.099,789,2.099,790,2.099,791,2.099,792,2.099,793,2.099,794,2.099,795,2.099,796,2.099,797,2.099,798,2.099,799,4.27,800,2.099,801,1.737,802,2.099,803,2.099,804,2.099,805,2.099,806,2.099,807,1.737,808,2.099,809,2.099,810,2.099,811,2.099,812,2.099,813,2.099,814,2.099,815,2.099,816,2.099,817,2.099,818,2.099,819,2.099,820,1.737,821,2.099,822,1.737,823,1.32,824,2.099,825,3.175,826,2.099,827,2.099,828,2.099,829,2.099,830,2.099,831,2.099,832,5.01,833,2.099,834,2.099,835,3.175,836,2.099,837,2.099,838,2.099,839,2.099,840,2.099,841,3.175,842,2.099,843,2.099,844,2.099,845,2.099,846,3.175,847,2.099,848,2.099,849,2.099,850,2.099,851,2.099,852,2.099,853,2.099,854,2.099,855,2.099,856,2.099,857,2.099,858,2.099,859,1.737,860,2.099,861,2.099,862,2.099,863,3.175,864,2.099,865,2.099,866,2.099,867,2.099,868,2.099,869,3.175,870,2.099,871,2.099,872,2.099,873,2.099,874,3.175,875,2.099,876,2.099,877,2.099,878,3.83,879,2.099,880,2.099,881,2.099,882,2.099,883,2.099,884,4.27,885,3.175,886,2.099,887,2.099,888,2.099,889,2.099,890,1.737,891,2.099,892,2.099,893,2.099,894,2.099,895,2.099,896,2.099,897,2.099,898,2.099,899,2.099,900,2.099,901,3.83,902,2.099,903,2.099,904,2.099,905,2.099,906,2.099,907,2.099,908,2.099,909,3.175,910,2.099,911,2.099,912,2.099,913,2.099,914,3.175,915,1.737,916,2.099,917,2.099,918,2.099,919,2.099,920,3.175,921,1.737,922,2.099,923,2.099,924,2.099,925,2.099,926,2.099,927,3.175,928,2.099,929,2.099,930,4.27,931,2.099,932,2.099,933,2.099,934,2.099,935,2.099,936,2.099,937,2.099,938,2.099,939,2.099,940,3.169,941,2.099,942,2.099,943,2.099,944,2.099,945,3.175,946,2.099,947,2.099,948,2.627,949,2.099,950,2.099,951,2.099,952,2.099,953,2.099,954,2.099,955,2.099,956,2.099,957,2.099,958,1.737,959,2.099,960,2.099,961,2.099,962,2.099,963,2.099,964,2.099,965,2.099,966,2.099,967,2.099,968,2.099,969,2.099,970,2.099,971,2.099,972,2.099,973,2.099,974,3.175,975,2.099]],["title/dependencies.html",[588,2.09,976,2.606]],["body/dependencies.html",[33,0.037,59,1.635,61,0.813,84,0.032,85,0.032,135,3.944,180,1.975,329,1.975,381,2.176,588,3.09,755,3.403,977,4.766,978,4.766,979,5.968,980,4.766]],["title/miscellaneous/functions.html",[101,1.058,981,1.316]],["body/miscellaneous/functions.html",[6,0.628,7,0.461,8,1.718,16,0.3,32,0.627,33,0.037,34,0.627,35,0.381,36,0.73,46,1.453,84,0.027,85,0.027,89,1.578,90,1.293,101,1.44,113,2.503,136,2.902,137,1.968,169,1.308,284,1.601,320,1.889,327,1.453,334,1.453,335,1.889,383,2.559,384,2.302,385,2.559,386,2.559,387,2.559,399,2.709,444,1.968,447,1.968,471,4.193,486,2.902,488,2.902,981,1.77,982,5.066,983,4.602,984,4.559,985,3.773,986,4.87,987,3.773,988,3.773,989,3.773,990,3.773,991,3.773,992,5.066,993,4.559,994,4.559,995,3.255,996,4.559,997,2.902,998,3.617,999,4.559,1000,5.066,1001,2.902,1002,2.902,1003,3.506,1004,3.506,1005,4.559,1006,3.506,1007,3.506,1008,2.902,1009,3.506,1010,5.701,1011,3.506,1012,3.506,1013,3.506,1014,3.506,1015,3.506,1016,2.503,1017,3.506,1018,4.559,1019,3.506,1020,3.506,1021,4.559]],["title/index.html",[16,0.223,691,1.861,692,1.861]],["body/index.html",[3,0.428,6,0.66,32,0.473,33,0.036,57,0.66,59,1.253,61,0.623,62,0.313,67,0.313,84,0.027,85,0.027,107,0.855,118,1.376,159,1.141,162,3.543,165,3.25,194,1.844,269,3.427,348,2.608,349,1.668,428,2.14,441,2.05,500,3.058,532,2.945,536,3.022,537,4.021,538,3.022,548,3.874,586,1.668,587,2.608,590,3.342,608,3.874,630,2.608,633,3.022,639,2.608,654,4.275,658,3.022,659,4.508,727,4.275,744,4.275,752,3.022,755,2.608,775,4.849,778,3.022,782,4.275,801,3.022,807,3.022,820,4.508,823,2.945,859,3.022,921,3.022,948,3.022,958,4.275,1022,5.166,1023,4.681,1024,3.652,1025,3.022,1026,4.681,1027,4.681,1028,4.681,1029,3.652,1030,3.652,1031,3.652,1032,3.652,1033,5.166,1034,3.652,1035,3.652,1036,4.681,1037,3.652,1038,3.652,1039,4.681,1040,3.652,1041,3.652,1042,3.652,1043,3.652,1044,3.652,1045,3.652,1046,3.652,1047,3.652,1048,3.652,1049,3.652,1050,3.652,1051,3.652,1052,3.652,1053,3.652,1054,3.652,1055,3.652,1056,4.681,1057,4.681,1058,5.448,1059,3.652,1060,3.652,1061,3.652,1062,4.681,1063,4.681,1064,3.652,1065,5.166,1066,3.652,1067,3.652,1068,3.652,1069,3.652,1070,3.652,1071,3.652,1072,3.652,1073,3.652,1074,3.652,1075,3.652,1076,3.652,1077,3.652,1078,3.022,1079,3.652,1080,3.652,1081,3.652,1082,3.022]],["title/license.html",[691,1.861,692,1.861,823,1.64]],["body/license.html",[4,0.428,12,0.807,33,0.03,40,1.756,84,0.03,85,0.03,90,0.897,191,3.026,380,2.14,500,2.883,600,3.026,630,3.945,645,3.508,702,3.508,822,4.754,823,2.667,915,4.25,1025,4.573,1078,3.508,1082,3.508,1083,5.526,1084,4.239,1085,4.239,1086,4.239,1087,5.136,1088,4.239,1089,4.239,1090,4.239,1091,4.239,1092,5.136,1093,4.239,1094,6.149,1095,4.239,1096,5.136,1097,4.239,1098,4.239,1099,4.239,1100,4.239,1101,4.239,1102,4.239,1103,4.239,1104,4.239,1105,4.239,1106,4.239,1107,4.239,1108,4.239,1109,4.239,1110,5.136,1111,5.136,1112,4.239,1113,4.239,1114,5.136,1115,4.239,1116,4.239,1117,4.239,1118,4.239,1119,4.239,1120,4.239,1121,4.239,1122,4.239,1123,4.239,1124,4.239,1125,4.239,1126,4.239,1127,4.239,1128,4.239,1129,4.239,1130,4.239,1131,4.239,1132,4.239,1133,4.239]],["title/modules.html",[586,1.92]],["body/modules.html",[33,0.033,84,0.033,85,0.033,397,2.476,586,2.239,587,2.476,763,4.058,1134,4.904,1135,4.904]],["title/overview.html",[1136,3.479]],["body/overview.html",[0,0.117,1,3.327,12,0.732,33,0.037,62,0.329,67,0.329,84,0.028,85,0.028,86,3.327,112,2.993,132,1.592,192,2.706,207,2.993,275,3.327,395,1.448,470,2.993,484,2.993,586,2.208,587,3.226,588,2.157,589,3.18,590,2.744,591,2.744,592,3.18,593,3.18,594,3.18,595,3.327,596,2.993,597,3.327,598,4.001,599,3.18,600,2.744,687,3.18,890,3.18,940,4.001,1136,3.18,1137,3.843]],["title/miscellaneous/typealiases.html",[981,1.316,1138,3.723]],["body/miscellaneous/typealiases.html",[16,0.371,33,0.035,35,0.307,84,0.031,85,0.031,89,1.569,90,1.285,101,1.681,157,2.722,169,1.439,171,1.741,284,1.975,285,4.614,292,4.614,327,1.793,330,1.484,331,4.787,332,3.089,334,1.793,335,1.793,356,2.429,364,3.13,367,3.13,371,3.13,382,3.13,388,3.13,391,2.815,667,3.713,981,2.185,995,3.713,998,3.089,1016,3.089,1139,4.326,1140,5.917,1141,3.58]],["title/miscellaneous/variables.html",[981,1.316,1142,3.081]],["body/miscellaneous/variables.html",[0,0.143,1,2.631,5,2.485,6,0.695,7,0.634,8,2.237,12,1.038,13,3.879,16,0.257,33,0.038,35,0.422,58,2.055,60,2.259,64,2.259,65,1.153,66,1.063,84,0.024,85,0.024,86,1.686,89,1.506,90,1.234,98,1.168,107,0.962,112,2.367,113,2.144,114,3.879,120,0.962,157,2.586,158,2.485,159,1.284,160,3.402,161,1.131,171,1.284,173,2.313,183,3.347,184,2.144,192,2.141,193,2.144,194,2.076,195,3.879,207,1.516,211,3.599,275,2.631,276,2.485,277,3.879,284,1.371,321,3.879,322,3.879,323,3.879,324,3.879,325,3.879,326,3.879,328,3.879,330,1.03,470,1.516,482,2.949,483,2.949,484,1.516,587,1.516,595,2.631,596,2.367,597,1.686,601,3.402,623,3.879,662,2.485,663,3.879,667,3.347,673,2.485,674,2.485,675,2.144,676,3.879,981,1.516,983,2.485,985,2.485,986,4.512,987,2.485,988,2.485,989,2.485,990,2.485,991,2.485,995,2.144,997,3.402,998,2.144,1001,2.485,1002,2.485,1008,2.485,1016,2.144,1141,3.402,1142,2.485,1143,3.003,1144,4.111,1145,3.003,1146,4.688,1147,3.003,1148,3.003,1149,3.003,1150,3.003,1151,4.111,1152,3.003]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":217,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["0.0.2",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":687,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"overview.html":{}}}],["1.1.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1137,"title":{},"body":{"overview.html":{}}}],["12",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["15ce1e",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":940,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2018",{"_index":702,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":890,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["35a48b",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["3ed6e3",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["51ca66",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["6148a68",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":70,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["_registeronchange(fn",{"_index":411,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_setparent(par",{"_index":457,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_updatevalu",{"_index":360,"title":{},"body":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{}}}],["_updatevalue(opt",{"_index":377,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_valuechang",{"_index":403,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["a0de621",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":1109,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":161,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["accessor.direct",{"_index":263,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{}}}],["accessor.directive.t",{"_index":8,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accessor.directive.ts:16",{"_index":681,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:20",{"_index":43,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:25",{"_index":38,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:26",{"_index":201,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:27",{"_index":31,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:28",{"_index":96,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:32",{"_index":56,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:33",{"_index":279,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:34",{"_index":678,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:35",{"_index":200,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:36",{"_index":45,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:37",{"_index":124,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":99,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:39",{"_index":680,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:40",{"_index":50,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:41",{"_index":665,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:42",{"_index":104,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:44",{"_index":53,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:45",{"_index":666,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:46",{"_index":100,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:47",{"_index":126,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:50",{"_index":102,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:52",{"_index":122,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:54",{"_index":103,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:58",{"_index":205,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:62",{"_index":131,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:66",{"_index":208,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:67",{"_index":128,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:70",{"_index":679,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:71",{"_index":129,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:72",{"_index":203,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:75",{"_index":130,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:76",{"_index":210,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessors.t",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors/accessor",{"_index":610,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1128,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":166,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["ad",{"_index":497,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["adapt",{"_index":611,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["adapter.interfac",{"_index":182,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["adapter.interface.t",{"_index":667,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["adapter.interface.ts:23",{"_index":668,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["adapter.service.t",{"_index":160,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.service.ts:16",{"_index":167,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:21",{"_index":177,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:25",{"_index":179,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:29",{"_index":172,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter/default",{"_index":158,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter/rout",{"_index":330,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":532,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add/index.t",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addcontrol(direct",{"_index":526,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["addmatchingvers",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimport",{"_index":984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(opt",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["afeae98",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["alia",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":1139,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":948,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["alway",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1103,"title":{},"body":{"license.html":{}}}],["android",{"_index":138,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["angular'",{"_index":1053,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":59,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":180,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["angularvers",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anoth",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":639,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":958,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":1038,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1024,"title":{},"body":{"index.html":{}}}],["argument",{"_index":39,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["aris",{"_index":1132,"title":{},"body":{"license.html":{}}}],["array",{"_index":231,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.from(this.optionmap.key",{"_index":245,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["array.from(this.options.entri",{"_index":220,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["array.isarray(valu",{"_index":227,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["array.isarray(valueaccessor",{"_index":647,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["assert",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":1095,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":1121,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":1035,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":859,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["b",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b19a81",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["badg",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["bb15442",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["becom",{"_index":1072,"title":{},"body":{"index.html":{}}}],["befor",{"_index":542,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["benefit",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["blur",{"_index":24,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["bookmark",{"_index":1062,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["booleanparam",{"_index":286,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(opt",{"_index":291,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":591,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{}}}],["box",{"_index":1069,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1135,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":763,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["buffer",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["builder.service.t",{"_index":285,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["builder.service.ts:28",{"_index":305,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:45",{"_index":312,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:46",{"_index":315,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:47",{"_index":314,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:54",{"_index":319,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:55",{"_index":318,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:56",{"_index":317,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:68",{"_index":308,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:69",{"_index":310,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:70",{"_index":309,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:82",{"_index":297,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:83",{"_index":296,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:84",{"_index":293,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:96",{"_index":302,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:97",{"_index":301,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:98",{"_index":300,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["built",{"_index":657,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["builtinaccessor",{"_index":649,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["button",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1086,"title":{},"body":{"license.html":{}}}],["c",{"_index":1084,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["can't",{"_index":636,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["care",{"_index":1052,"title":{},"body":{"index.html":{}}}],["case",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["chanc",{"_index":540,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chang",{"_index":25,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["change(ev",{"_index":41,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["changefn(this.valu",{"_index":422,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changefn(valu",{"_index":452,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changefunct",{"_index":405,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changelog",{"_index":693,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":1091,"title":{},"body":{"license.html":{}}}],["check",{"_index":81,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirect",{"_index":1,"title":{"directives/CheckboxControlValueAccessorDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["chmod",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["choos",{"_index":642,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["claim",{"_index":1124,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["close",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["cluster_queryparammodul",{"_index":592,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_declar",{"_index":593,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_export",{"_index":594,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["collect",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["combinedparam",{"_index":572,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["combinewith",{"_index":358,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["command",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":1079,"title":{},"body":{"index.html":{}}}],["compar",{"_index":382,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":335,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":539,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["compos",{"_index":142,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend",{"_index":116,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend(ev",{"_index":125,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionstart",{"_index":117,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["concatmap",{"_index":478,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["concatmap(param",{"_index":565,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["condit",{"_index":1108,"title":{},"body":{"license.html":{}}}],["config",{"_index":606,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeropt",{"_index":614,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configur",{"_index":626,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["connect",{"_index":1133,"title":{},"body":{"license.html":{}}}],["consid",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["consist",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["consol",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":63,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(control",{"_index":459,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(opt",{"_index":362,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["constructor(par",{"_index":251,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(platformid",{"_index":119,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["constructor(priv",{"_index":79,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(render",{"_index":27,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(rout",{"_index":164,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["constructor(routeradapt",{"_index":472,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["context",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":1129,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1048,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1049,"title":{},"body":{"index.html":{}}}],["control",{"_index":6,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control._registeronchange((newmodel",{"_index":506,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control._setparent(thi",{"_index":409,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["control._updatevalu",{"_index":519,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.combinewith(control.valu",{"_index":574,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.deserialize(valu",{"_index":581,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.multi",{"_index":487,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.nam",{"_index":575,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.serialize(model",{"_index":578,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.setvalue(valu",{"_index":419,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["control.valu",{"_index":518,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["controlconfig",{"_index":353,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["controlnam",{"_index":339,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["controlvalueaccessor",{"_index":10,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["controlvalueaccessordirect",{"_index":86,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["convent",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":822,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1083,"title":{},"body":{"license.html":{}}}],["core",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":545,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["creat",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["createbooleandeseri",{"_index":985,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleandeserializer(defaultvalu",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanseri",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleanserializer(defaultvalu",{"_index":1011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcontrol(controlnam",{"_index":352,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["createemptyondeseri",{"_index":386,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyondeserializer(deseri",{"_index":447,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyonseri",{"_index":387,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyonserializer(seri",{"_index":444,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createnumberdeseri",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberdeserializer(defaultvalu",{"_index":1012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberseri",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberserializer(defaultvalu",{"_index":1013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringdeseri",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringdeserializer(defaultvalu",{"_index":1014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringseri",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringserializer(defaultvalu",{"_index":1015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":654,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["custom",{"_index":658,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["customaccessor",{"_index":650,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customparam",{"_index":287,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["customparam(opt",{"_index":298,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["d+)/.test(navigator.useragent.tolowercas",{"_index":139,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["d1d0a1b",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":1125,"title":{},"body":{"license.html":{}}}],["data",{"_index":1029,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1096,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":552,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueu",{"_index":553,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.next(newmodel",{"_index":561,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.pip",{"_index":554,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncetim",{"_index":359,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["debouncetime(control.debouncetim",{"_index":556,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dec2d0f",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":590,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":173,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deseri",{"_index":321,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_seri",{"_index":322,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_deseri",{"_index":323,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_seri",{"_index":324,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_deseri",{"_index":325,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_seri",{"_index":326,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["defaultaccessor",{"_index":648,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["defaultcontrolvalueaccessordirect",{"_index":112,"title":{"directives/DefaultControlValueAccessorDirective.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteradapt",{"_index":156,"title":{"injectables/DefaultRouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{}}}],["defaultrouteradapteropt",{"_index":183,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["defaultvalu",{"_index":1010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defin",{"_index":30,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["demo",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["demonstr",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":588,"title":{"dependencies.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["deregisteropt",{"_index":197,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["deregisteroption(id",{"_index":202,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["descript",{"_index":88,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{}}}],["deseri",{"_index":334,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserialize(control",{"_index":579,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["design",{"_index":1030,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":491,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["develop",{"_index":1046,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":1056,"title":{},"body":{"index.html":{}}}],["dir.nam",{"_index":515,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["direct",{"_index":0,"title":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directive.nam",{"_index":530,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor",{"_index":533,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.registeronchange((newmodel",{"_index":560,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(control.valu",{"_index":549,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(newmodel",{"_index":517,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directli",{"_index":637,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["disabl",{"_index":83,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["disabledchang",{"_index":93,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribut",{"_index":1101,"title":{},"body":{"license.html":{}}}],["doc",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":90,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["domain",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":1070,"title":{},"body":{"index.html":{}}}],["due",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":427,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["earli",{"_index":1045,"title":{},"body":{"index.html":{}}}],["easi",{"_index":1023,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1067,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["elementref",{"_index":29,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["emit",{"_index":520,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["emitev",{"_index":416,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["emptyon",{"_index":399,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enough",{"_index":644,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["enqueuenavigation(param",{"_index":568,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ensur",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["entir",{"_index":522,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error",{"_index":445,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["error(`combinewith",{"_index":438,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`comparewith",{"_index":435,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`could",{"_index":528,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`deseri",{"_index":433,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`emptyon",{"_index":440,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`mor",{"_index":655,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`no",{"_index":534,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`pleas",{"_index":426,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`provid",{"_index":229,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["error(`queryparamnam",{"_index":629,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`seri",{"_index":430,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`y",{"_index":496,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["event",{"_index":40,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["event.target",{"_index":281,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["eventemitt",{"_index":95,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exampl",{"_index":752,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["execut",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["explan",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["explicitli",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":62,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["exporta",{"_index":105,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["express",{"_index":1115,"title":{},"body":{"license.html":{}}}],["extend",{"_index":392,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["extra",{"_index":170,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}}}],["f4c3365",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":143,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["fce4ec2",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["featur",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{}}}],["filter",{"_index":1028,"title":{},"body":{"index.html":{}}}],["filter(([id",{"_index":221,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["filter(id",{"_index":235,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["find",{"_index":529,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["finish",{"_index":401,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["first",{"_index":343,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fit",{"_index":1118,"title":{},"body":{"license.html":{}}}],["fix",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":46,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["fnchang",{"_index":69,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["fntouch",{"_index":71,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["follow",{"_index":1107,"title":{},"body":{"license.html":{}}}],["forget",{"_index":531,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":659,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["forroot",{"_index":603,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["forroot(config",{"_index":604,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["forwardref",{"_index":60,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":535,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1090,"title":{},"body":{"license.html":{}}}],["function",{"_index":101,"title":{"miscellaneous/functions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function(opt",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":1106,"title":{},"body":{"license.html":{}}}],["gener",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":691,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["get(controlnam",{"_index":413,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["getangularmajorvers",{"_index":992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingvers",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingversion(angularvers",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getoptionid(valu",{"_index":244,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["getparamsformodel(control",{"_index":570,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["getqueryparammap",{"_index":178,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getselect",{"_index":258,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["geturl",{"_index":176,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getvalu",{"_index":468,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["globalrouteropt",{"_index":473,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["good",{"_index":643,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["grant",{"_index":1089,"title":{},"body":{"license.html":{}}}],["green",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":288,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(control",{"_index":303,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.direct",{"_index":609,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.directive.t",{"_index":471,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["group.directive.ts:30",{"_index":475,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":474,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:46",{"_index":477,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:94",{"_index":476,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupopt",{"_index":582,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["guid",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["guidelin",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["hasarraymodel",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarraymodel(control",{"_index":488,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hash",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["have",{"_index":1075,"title":{},"body":{"index.html":{}}}],["haven't",{"_index":498,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["headlin",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":544,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["herebi",{"_index":1088,"title":{},"body":{"license.html":{}}}],["histori",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["holder",{"_index":1122,"title":{},"body":{"license.html":{}}}],["hope",{"_index":641,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["host",{"_index":262,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlisten",{"_index":23,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('blur",{"_index":76,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('chang",{"_index":72,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["hostlistener('compositionend",{"_index":150,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('compositionstart",{"_index":148,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('input",{"_index":144,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmlinputelement).check",{"_index":75,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["htmlinputelement).valu",{"_index":147,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmloptionelement).select",{"_index":273,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["htmloptionelement).valu",{"_index":683,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#l186",{"_index":635,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["i.",{"_index":1039,"title":{},"body":{"index.html":{}}}],["icon",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":204,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["idcount",{"_index":216,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["implement",{"_index":9,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["impli",{"_index":1116,"title":{},"body":{"license.html":{}}}],["import",{"_index":57,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["imposs",{"_index":1061,"title":{},"body":{"index.html":{}}}],["improv",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{}}}],["independ",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":393,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["inform",{"_index":1027,"title":{},"body":{"index.html":{}}}],["ingo",{"_index":1085,"title":{},"body":{"license.html":{}}}],["initi",{"_index":513,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["inject",{"_index":132,"title":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["inject(ng_value_accessor",{"_index":625,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inject(ngqp_router_adapt",{"_index":492,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(ngqp_router_opt",{"_index":493,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(platform_id",{"_index":152,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["injectiontoken",{"_index":670,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["injectiontoken('ngqp_router_adapt",{"_index":673,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngqp_router_opt",{"_index":674,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":118,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('queryparamgroup",{"_index":489,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamnam",{"_index":624,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["input('valu",{"_index":268,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["input(ev",{"_index":127,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["input:not([type=checkbox]):not([type=radio])[queryparamname],textarea[queryparamnam",{"_index":115,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["input[type=checkbox][queryparamnam",{"_index":15,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["input[type=number][queryparamnam",{"_index":278,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{}}}],["input[type=range][queryparamnam",{"_index":664,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["instal",{"_index":782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":354,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["instead",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["instruct",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":395,"title":{"interfaces/QueryParamControlOpts.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"overview.html":{}}}],["intern",{"_index":410,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["intuit",{"_index":1031,"title":{},"body":{"index.html":{}}}],["isandroid",{"_index":996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isandroid(navig",{"_index":136,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["isandroid(window.navig",{"_index":154,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isdis",{"_index":54,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["isfunct",{"_index":383,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["isfunction(combinewith",{"_index":437,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(comparewith",{"_index":434,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(deseri",{"_index":432,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(obj",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfunction(seri",{"_index":429,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismiss",{"_index":384,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["ismissing(combinewith",{"_index":436,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(control",{"_index":418,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(control.combinewith",{"_index":573,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(control.debouncetim",{"_index":555,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(direct",{"_index":516,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(emptyon",{"_index":439,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(nam",{"_index":425,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(obj",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismissing(this.par",{"_index":454,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismulticontrol",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismulticontrol(control",{"_index":486,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":638,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["isplatformbrows",{"_index":134,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":153,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["kind",{"_index":1078,"title":{},"body":{"index.html":{},"license.html":{}}}],["know",{"_index":1050,"title":{},"body":{"index.html":{}}}],["land",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":589,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["let'",{"_index":640,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["liabil",{"_index":1126,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1123,"title":{},"body":{"license.html":{}}}],["licens",{"_index":823,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limit",{"_index":915,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":348,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{},"index.html":{}}}],["listen",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["liter",{"_index":304,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["load",{"_index":1064,"title":{},"body":{"index.html":{}}}],["locat",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["loose_identity_compar",{"_index":328,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["lose",{"_index":1077,"title":{},"body":{"index.html":{}}}],["make",{"_index":537,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["mandatori",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1066,"title":{},"body":{"index.html":{}}}],["map",{"_index":214,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["map(([id",{"_index":223,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["map((newmodel",{"_index":557,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(control.seri",{"_index":577,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(valu",{"_index":233,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["mappedcontrol",{"_index":338,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["match",{"_index":85,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mayb",{"_index":342,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["mention",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["merchant",{"_index":1117,"title":{},"body":{"license.html":{}}}],["merg",{"_index":191,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["miscellan",{"_index":981,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1082,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":398,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["model",{"_index":320,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["modifi",{"_index":1099,"title":{},"body":{"license.html":{}}}],["modul",{"_index":586,"title":{"modules/QueryParamModule.html":{},"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":607,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["more",{"_index":1051,"title":{},"body":{"index.html":{}}}],["move",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multi",{"_index":65,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["multiselectcontrolvalueaccessordirect",{"_index":192,"title":{"directives/MultiSelectControlValueAccessorDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multiselectoptiondirect",{"_index":207,"title":{"directives/MultiSelectOptionDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.direct",{"_index":485,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["name.directive.t",{"_index":615,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:16",{"_index":619,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:19",{"_index":618,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:32",{"_index":620,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["navig",{"_index":137,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["navigate(queryparam",{"_index":168,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["navigationextra",{"_index":671,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["need",{"_index":546,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["new",{"_index":107,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":238,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["newmodel",{"_index":508,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["newvalu",{"_index":390,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ng",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":58,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":608,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":249,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngoninit",{"_index":250,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngqp",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":820,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_built_in_accessor",{"_index":623,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_built_in_accessors.some(curr",{"_index":653,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_checkbox_value_accessor",{"_index":13,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_default_value_accessor",{"_index":114,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_module_nam",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngqp_multi_select_value_accessor",{"_index":195,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_number_value_accessor",{"_index":277,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_range_value_accessor",{"_index":663,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_adapt",{"_index":482,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_opt",{"_index":483,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_select_value_accessor",{"_index":676,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":230,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["noninfring",{"_index":1120,"title":{},"body":{"license.html":{}}}],["normal",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["normalizedvalu",{"_index":155,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["notabl",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":400,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["notic",{"_index":1110,"title":{},"body":{"license.html":{}}}],["notifychang",{"_index":91,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(valu",{"_index":97,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":801,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["number",{"_index":280,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["numbercontrolvalueaccessor",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirect",{"_index":275,"title":{"directives/NumberControlValueAccessorDirective.html":{}},"body":{"directives/NumberControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numericparam",{"_index":289,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numericparam(opt",{"_index":307,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["obj",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.keys(controls).foreach(controlnam",{"_index":340,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object.keys(this.controls).foreach(controlnam",{"_index":414,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["object.keys(this.queryparamgroup.controls).foreach(controlnam",{"_index":505,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["object.keys(value).foreach(controlnam",{"_index":417,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["object.values(this.controls).foreach(control",{"_index":408,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["observ",{"_index":374,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}}}],["obtain",{"_index":1093,"title":{},"body":{"license.html":{}}}],["on",{"_index":656,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["onblur",{"_index":77,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onc",{"_index":521,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["onchang",{"_index":218,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["onchange(ev",{"_index":682,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["onchangefunct",{"_index":388,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["oncompositionend(ev",{"_index":151,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["oncompositionstart",{"_index":149,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["ondestroy",{"_index":248,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninit",{"_index":247,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninput(ev",{"_index":73,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onlyself",{"_index":453,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ontouch",{"_index":226,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opt",{"_index":294,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["option",{"_index":36,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["option.direct",{"_index":212,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["option.directive.t",{"_index":246,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:21",{"_index":256,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:27",{"_index":255,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:34",{"_index":254,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:35",{"_index":688,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["option.directive.ts:40",{"_index":259,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:44",{"_index":261,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["option.directive.ts:9",{"_index":252,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["option.select",{"_index":222,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["optionmap",{"_index":215,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["opts.emitev",{"_index":420,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["opts.multi",{"_index":424,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["opts.onlyself",{"_index":455,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["organ",{"_index":1055,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":1131,"title":{},"body":{"license.html":{}}}],["out",{"_index":600,"title":{},"body":{"modules/QueryParamModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":92,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchang",{"_index":108,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('valuechang",{"_index":106,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outsid",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1136,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriteparti",{"_index":331,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["packag",{"_index":976,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":744,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pagin",{"_index":1026,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["param(opt",{"_index":311,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.module.t",{"_index":601,"title":{},"body":{"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["param.module.ts:56",{"_index":605,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["paramcombin",{"_index":364,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeseri",{"_index":367,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parammap",{"_index":672,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["paramseri",{"_index":371,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":253,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["parsefloat(valu",{"_index":282,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["partial",{"_index":333,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["particular",{"_index":1119,"title":{},"body":{"license.html":{}}}],["patchvalu",{"_index":458,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(valu",{"_index":415,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["path",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":1087,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1105,"title":{},"body":{"license.html":{}}}],["person",{"_index":1092,"title":{},"body":{"license.html":{}}}],["phrase",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":332,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["platform_id",{"_index":133,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["platformid",{"_index":123,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["pleas",{"_index":536,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["portion",{"_index":1113,"title":{},"body":{"license.html":{}}}],["previousvalu",{"_index":389,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["privat",{"_index":68,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["progress",{"_index":1043,"title":{},"body":{"index.html":{}}}],["project",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":175,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["proper",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":357,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["provid",{"_index":12,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["proxi",{"_index":550,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["public",{"_index":18,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1100,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":645,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["push",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["queri",{"_index":428,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["queryparam",{"_index":174,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparambuild",{"_index":283,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamcontrol",{"_index":295,"title":{"classes/QueryParamControl.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparamcontrol(opt",{"_index":351,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamcontrolopt",{"_index":299,"title":{"interfaces/QueryParamControlOpts.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparamcontroloptsinput",{"_index":292,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamgroup",{"_index":306,"title":{"classes/QueryParamGroup.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamgroup(mappedcontrol",{"_index":347,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirect",{"_index":470,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamgroupvalu",{"_index":396,"title":{"interfaces/QueryParamGroupValue.html":{}},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparammap",{"_index":163,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparammap.get(control.nam",{"_index":512,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammap.getall(control.nam",{"_index":511,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammodul",{"_index":587,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamnam",{"_index":616,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["queryparamnamedirect",{"_index":484,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamshandl",{"_index":190,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["queue",{"_index":490,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["rangecontrolvalueaccessor",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirect",{"_index":595,"title":{"directives/RangeControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":541,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["readm",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["readonli",{"_index":140,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["receiv",{"_index":431,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["recurs",{"_index":402,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["redirect",{"_index":313,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["reflect",{"_index":1060,"title":{},"body":{"index.html":{}}}],["regist",{"_index":543,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["registeronchang",{"_index":19,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeronchange(fn",{"_index":44,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouch",{"_index":20,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":49,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeropt",{"_index":198,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeroption(opt",{"_index":206,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["registri",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["relativeto",{"_index":188,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["releas",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":1074,"title":{},"body":{"index.html":{}}}],["remov",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":37,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["renderer2",{"_index":28,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["replac",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":184,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["resembl",{"_index":633,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["reset",{"_index":599,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["respons",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1097,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["right",{"_index":1098,"title":{},"body":{"license.html":{}}}],["root",{"_index":337,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["rout",{"_index":165,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["router",{"_index":159,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routeradapt",{"_index":181,"title":{"interfaces/RouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/RouterAdapter.html":{}}}],["routeradapteropt",{"_index":171,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":1040,"title":{},"body":{"index.html":{}}}],["routeropt",{"_index":404,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{}}}],["run",{"_index":1033,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":381,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":481,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["same",{"_index":346,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["sanitize=tru",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1037,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1080,"title":{},"body":{"index.html":{}}}],["schemat",{"_index":755,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["schematics/.../index.t",{"_index":983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics/ng",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1081,"title":{},"body":{"index.html":{}}}],["section",{"_index":1042,"title":{},"body":{"index.html":{}}}],["see",{"_index":349,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":194,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select:not([multiple])[queryparamnam",{"_index":677,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["select[multipl",{"_index":232,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["select[multiple][queryparamnam",{"_index":196,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["selectcontrolvalueaccessor",{"_index":634,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["selectcontrolvalueaccessordirect",{"_index":596,"title":{"directives/SelectControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selected(select",{"_index":274,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["selectedid",{"_index":213,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["selectedindex",{"_index":686,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["selectoptiondirect",{"_index":597,"title":{"directives/SelectOptionDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectvalueaccessor(valueaccessor",{"_index":646,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":621,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1104,"title":{},"body":{"license.html":{}}}],["serial",{"_index":327,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serialize(control",{"_index":576,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["set",{"_index":269,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["setdisabledst",{"_index":21,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdis",{"_index":51,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setselected(select",{"_index":260,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["setupcontrol",{"_index":660,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["setupnavigationqueu",{"_index":563,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["setvalu",{"_index":361,"title":{},"body":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(valu",{"_index":257,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectOptionDirective.html":{}}}],["shall",{"_index":1111,"title":{},"body":{"license.html":{}}}],["share",{"_index":1063,"title":{},"body":{"index.html":{}}}],["shebang",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["simpli",{"_index":1032,"title":{},"body":{"index.html":{}}}],["singl",{"_index":441,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"index.html":{}}}],["skeleton",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["skipself",{"_index":622,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["softwar",{"_index":1094,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["specif",{"_index":1059,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":631,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["src/.../checkbox",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../model.t",{"_index":1140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../multi",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngqp",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../number",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../queri",{"_index":995,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rang",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router",{"_index":1141,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../select",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.t",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/checkbox",{"_index":5,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/default",{"_index":113,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/multi",{"_index":193,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/ngqp",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/accessors/numb",{"_index":276,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/rang",{"_index":662,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/select",{"_index":675,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/control",{"_index":87,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/model.t",{"_index":356,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/model.ts:101",{"_index":466,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:119",{"_index":467,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:132",{"_index":464,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:150",{"_index":376,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:153",{"_index":373,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:156",{"_index":370,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:159",{"_index":372,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:162",{"_index":368,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:165",{"_index":369,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:168",{"_index":366,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:171",{"_index":365,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:174",{"_index":363,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:23",{"_index":585,"title":{},"body":{"interfaces/QueryParamGroupValue.html":{}}}],["src/lib/model.ts:230",{"_index":379,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:241",{"_index":378,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:57",{"_index":463,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:60",{"_index":461,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:63",{"_index":462,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:65",{"_index":460,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:86",{"_index":465,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:91",{"_index":469,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/queri",{"_index":284,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/rout",{"_index":157,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.t",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/util.t",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":1047,"title":{},"body":{"index.html":{}}}],["standard",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":692,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1058,"title":{},"body":{"index.html":{}}}],["static",{"_index":602,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["staticprovid",{"_index":211,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["still",{"_index":1044,"title":{},"body":{"index.html":{}}}],["string",{"_index":120,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["stringparam",{"_index":290,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(opt",{"_index":316,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["style",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":380,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"license.html":{}}}],["sublicens",{"_index":1102,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":567,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["subscribe(param",{"_index":559,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["substanti",{"_index":1112,"title":{},"body":{"license.html":{}}}],["success",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":1068,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":499,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":397,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"modules.html":{}}}],["supportscomposit",{"_index":141,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["sure",{"_index":538,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["svg",{"_index":1134,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":547,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["synchron",{"_index":1022,"title":{},"body":{"index.html":{}}}],["system",{"_index":1054,"title":{},"body":{"index.html":{}}}],["t",{"_index":98,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["takeuntil",{"_index":479,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["takeuntil(this.destroy",{"_index":558,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["tap",{"_index":480,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["target",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["testrouteradapt",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navig",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["that'",{"_index":1034,"title":{},"body":{"index.html":{}}}],["this._valuechanges.asobserv",{"_index":375,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this._valuechanges.next(this.valu",{"_index":423,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":421,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.changefunctions.push(fn",{"_index":412,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.combinewith",{"_index":450,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.compos",{"_index":146,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.control",{"_index":406,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.createcontrol(controlnam",{"_index":341,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.debouncetim",{"_index":449,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.deseri",{"_index":446,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.deserialize(control",{"_index":510,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.complet",{"_index":525,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.next",{"_index":524,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.find(dir",{"_index":514,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.push(direct",{"_index":562,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.disabledchange.emit(isdis",{"_index":111,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.elementref.nativeel",{"_index":272,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.enqueuenavigation(param",{"_index":504,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.enqueuenavigation(this.getparamsformodel(control",{"_index":507,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.fnchang",{"_index":82,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange((event.target",{"_index":74,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.fnchange(this.valu",{"_index":685,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fnchange(valu",{"_index":109,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.fntouch",{"_index":78,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getoptionid(valu",{"_index":234,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.getparamsformodel(control",{"_index":503,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.globalrouteropt",{"_index":584,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.id",{"_index":265,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.idcounter++).tostr",{"_index":239,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.multi",{"_index":448,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.nam",{"_index":442,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.onchang",{"_index":243,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.optionmap.delete(id",{"_index":241,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(id",{"_index":225,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.get(this.selectedid",{"_index":684,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["this.optionmap.set(id",{"_index":242,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.options.foreach((opt",{"_index":236,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.options.set(newid",{"_index":240,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.par",{"_index":264,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.param",{"_index":355,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.parent._updatevalue(opt",{"_index":456,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.parent.addcontrol(thi",{"_index":661,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.parent.deregisteroption(this.id",{"_index":267,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.registeropt",{"_index":689,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.parent.registeroption(thi",{"_index":266,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["this.parent.updateoptionvalue(this.id",{"_index":271,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.writevalue(this.parent.valu",{"_index":690,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["this.queryparamgroup",{"_index":495,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._registeronchange((valu",{"_index":501,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._updatevalu",{"_index":523,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(controlnam",{"_index":502,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(directive.nam",{"_index":527,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.routeropt",{"_index":583,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.next(param",{"_index":569,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.pip",{"_index":564,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.renderer.setproperty(this.elementref.nativeel",{"_index":80,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.rout",{"_index":189,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.route.queryparammap",{"_index":186,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.navig",{"_index":187,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.url",{"_index":185,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.routeradapter.navigate(param",{"_index":566,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.queryparammap.subscribe(queryparammap",{"_index":509,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeropt",{"_index":407,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.selectedid",{"_index":219,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.selectedids.includes(id",{"_index":237,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectedids.map(id",{"_index":224,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["this.selectvalueaccessor(valueaccessor",{"_index":628,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.seri",{"_index":443,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.serialize(control",{"_index":571,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupcontrol",{"_index":632,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.setupnavigationqueu",{"_index":494,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.stringparam(opt",{"_index":350,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.supportscomposit",{"_index":145,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.valu",{"_index":451,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["this.valueaccessor",{"_index":627,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.valuechange.emit(valu",{"_index":110,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["throw",{"_index":228,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["tick",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":89,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1130,"title":{},"body":{"license.html":{}}}],["travi",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":66,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":1073,"title":{},"body":{"index.html":{}}}],["two",{"_index":345,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["type",{"_index":35,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1138,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":394,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["uievent",{"_index":42,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["undefin",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":1057,"title":{},"body":{"index.html":{}}}],["unnam",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessari",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["unpack",{"_index":391,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":807,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updat",{"_index":551,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["updateoptionvalu",{"_index":199,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["updateoptionvalue(id",{"_index":209,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["url",{"_index":162,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"index.html":{}}}],["us",{"_index":500,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":1041,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":612,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["useexist",{"_index":64,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1065,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":613,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["util",{"_index":329,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"dependencies.html":{}}}],["valid",{"_index":344,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["valu",{"_index":7,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":270,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["valueaccessor",{"_index":617,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessor.constructor",{"_index":652,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessors.foreach(valueaccessor",{"_index":651,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valuechang",{"_index":94,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["values.map(control.deseri",{"_index":580,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["variabl",{"_index":1142,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":548,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["void",{"_index":48,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["wait",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":1036,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":1114,"title":{},"body":{"license.html":{}}}],["way",{"_index":1071,"title":{},"body":{"index.html":{}}}],["websit",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1127,"title":{},"body":{"license.html":{}}}],["widget",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":630,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{},"license.html":{}}}],["word",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worri",{"_index":1076,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":385,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["wraptrycatch(fn",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["write",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["writevalu",{"_index":22,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["writevalue(valu",{"_index":55,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["x",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ye",{"_index":669,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["zoom",{"_index":598,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/CheckboxControlValueAccessorDirective.html":{"url":"directives/CheckboxControlValueAccessorDirective.html","title":"directive - CheckboxControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CheckboxControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/checkbox-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=checkbox][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=checkbox][queryParamName]',\n    providers: [NGQP_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class CheckboxControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: boolean) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onInput(event: UIEvent) {\n        this.fnChange((event.target as HTMLInputElement).checked);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n\n\n            \n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabledChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyChange(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: (value: T) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * TODO Documentation\n *\n * \n * \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /** TODO Documentation */\n    @Output('valueChange')\n    public valueChange = new EventEmitter();\n\n    /** TODO Documentation */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /** TODO Documentation */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    public writeValue(value: T) {\n        this.valueChange.emit(value);\n    }\n\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DefaultControlValueAccessorDirective.html":{"url":"directives/DefaultControlValueAccessorDirective.html","title":"directive - DefaultControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DefaultControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/default-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                compositionend\n                            \n                            \n                                compositionstart\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string | null, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/default-control-value-accessor.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionend\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ncompositionend(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionstart\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompositionstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Inject, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const NGQP_DEFAULT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n};\n\nfunction isAndroid(navigator: Navigator): boolean {\n    return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n}\n\n@Directive({\n    selector: 'input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]',\n    providers: [NGQP_DEFAULT_VALUE_ACCESSOR],\n})\nexport class DefaultControlValueAccessorDirective implements ControlValueAccessor {\n\n    private readonly supportsComposition: boolean;\n    private composing = false;\n\n    private fnChange = (_: string) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        if (this.supportsComposition && this.composing) {\n            return;\n        }\n\n        this.fnChange((event.target as HTMLInputElement).value);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    @HostListener('compositionstart')\n    public onCompositionStart() {\n        this.composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    public onCompositionEnd(event: UIEvent) {\n        this.composing = false;\n        if (this.supportsComposition) {\n            this.fnChange((event.target as HTMLInputElement).value);\n        }\n    }\n\n    constructor(\n        @Optional() @Inject(PLATFORM_ID) private platformId: string | null,\n        private renderer: Renderer2,\n        private elementRef: ElementRef\n    ) {\n        this.supportsComposition = isPlatformBrowser(this.platformId || '') && !isAndroid(window.navigator);\n    }\n\n    public writeValue(value: string) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultRouterAdapter.html":{"url":"injectables/DefaultRouterAdapter.html","title":"injectable - DefaultRouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultRouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/default-router-adapter.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    url\n                                \n                                \n                                    queryParamMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/router-adapter/default-router-adapter.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        navigate(queryParams: Params, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        queryParamMap\n                    \n                \n\n                \n                    \n                        getqueryParamMap()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouterAdapter, RouterAdapterOptions } from './router-adapter.interface';\n\n/**\n * TODO Documentation\n */\nexport const DefaultRouterAdapterOptions: RouterAdapterOptions = {\n    replaceUrl: true,\n};\n\n/**\n * TODO Documentation\n */\n@Injectable()\nexport class DefaultRouterAdapter implements RouterAdapter {\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    public get url() {\n        return this.router.url;\n    }\n\n    public get queryParamMap() {\n        return this.route.queryParamMap;\n    }\n\n    public navigate(queryParams: Params, extras: RouterAdapterOptions = {}): Promise {\n        return this.router.navigate([], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n            queryParams: queryParams,\n            ...extras,\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectControlValueAccessorDirective.html":{"url":"directives/MultiSelectControlValueAccessorDirective.html","title":"directive - MultiSelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select[multiple][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption(option: MultiSelectOptionDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    MultiSelectOptionDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(values: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MultiSelectOptionDirective } from './multi-select-option.directive';\n\nexport const NGQP_MULTI_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select[multiple][queryParamName]',\n    providers: [NGQP_MULTI_SELECT_VALUE_ACCESSOR],\n})\nexport class MultiSelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    private selectedIds: string[] = [];\n    private options = new Map>();\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T[]) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change')\n    public onChange() {\n        this.selectedIds = Array.from(this.options.entries())\n            .filter(([id, option]) => option.selected)\n            .map(([id]) => id);\n        const values = this.selectedIds.map(id => this.optionMap.get(id));\n        this.fnChange(values);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(values: T[]) {\n        values = values === null ? [] : values;\n        if (!Array.isArray(values)) {\n            throw new Error(`Provided a non-array value to select[multiple]: ${values}`);\n        }\n\n        this.selectedIds = values\n            .map(value => this.getOptionId(value))\n            .filter(id => id !== null);\n        this.options.forEach((option, id) => option.selected = this.selectedIds.includes(id));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(option: MultiSelectOptionDirective): string {\n        const newId = (this.idCounter++).toString();\n        this.options.set(newId, option);\n        return newId;\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n        if (this.selectedIds.includes(id)) {\n            this.onChange();\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectOptionDirective.html":{"url":"directives/MultiSelectOptionDirective.html","title":"directive - MultiSelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: MultiSelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MultiSelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:40\n                                \n                            \n\n                \n                    \n                        setselected(selected: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-option.directive.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { MultiSelectControlValueAccessorDirective } from './multi-select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class MultiSelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: MultiSelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption(this);\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n        }\n    }\n\n    public get selected(): boolean {\n        return (this.elementRef.nativeElement as HTMLOptionElement).selected;\n    }\n\n    public set selected(selected: boolean) {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selected', selected);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberControlValueAccessorDirective.html":{"url":"directives/NumberControlValueAccessorDirective.html","title":"directive - NumberControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/number-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=number][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/number-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_NUMBER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=number][queryParamName]',\n    providers: [NGQP_NUMBER_VALUE_ACCESSOR],\n})\nexport class NumberControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts: QueryParamControlOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:98\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts: QueryParamControlOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:97\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:96\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        group(controls: literal type, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        controls\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Redirects to stringParam.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryParamControl, QueryParamControlOpts, QueryParamGroup } from './model';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\ntype OverwritePartial = Pick> & Partial>;\nexport type QueryParamControlOptsInput = OverwritePartial, 'serialize' | 'deserialize' | 'compareWith'>;\n\n/**\n * TODO Documentation\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * TODO Documentation\n     */\n    public group(\n        controls: { [ name: string ]: QueryParamControl | string },\n        extras: RouterAdapterOptions = {}\n    ): QueryParamGroup {\n        const mappedControls: { [ controlName: string ]: QueryParamControl } = {};\n        Object.keys(controls).forEach(controlName => {\n            mappedControls[ controlName ] = this.createControl(controlName, controls[ controlName ]);\n        });\n\n        // TODO Maybe we should first validate that no two controls defined the same \"name\".\n        return new QueryParamGroup(mappedControls, extras);\n    }\n\n    /**\n     * Redirects to {@link stringParam}.\n     * @see stringParam\n     */\n    public param(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public param(opts: QueryParamControlOptsInput): QueryParamControl;\n    public param(opts: QueryParamControlOptsInput): QueryParamControl {\n        return this.stringParam(opts);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public stringParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public stringParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public stringParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public numericParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public numericParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public numericParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public booleanParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public booleanParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public booleanParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public customParam(opts: QueryParamControlOpts & { multi: true }): QueryParamControl;\n    public customParam(opts: QueryParamControlOpts): QueryParamControl;\n    public customParam(opts: QueryParamControlOpts): QueryParamControl {\n        return new QueryParamControl(opts);\n    }\n\n    private createControl(controlName: string, controlConfig: QueryParamControl | string): QueryParamControl {\n        if (controlConfig instanceof QueryParamControl) {\n            return controlConfig;\n        }\n\n        return this.param({\n            name: controlName,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamControl.html":{"url":"classes/QueryParamControl.html","title":"class - QueryParamControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: QueryParamControlOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:174\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combineWith:     ParamCombinator\n\n                    \n                \n                    \n                        \n                            Type :     ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:171\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debounceTime:     number | null\n\n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:168\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserialize:     ParamDeserializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamDeserializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:162\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        multi:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:165\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:156\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serialize:     ParamSerializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamSerializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:159\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:153\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:150\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:241\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: T | null, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:230\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamControlOpts.html":{"url":"interfaces/QueryParamControlOpts.html","title":"interface - QueryParamControlOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamControlOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        multi\n                                \n                                \n                                        name\n                                \n                                \n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:     ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (note: no controls / serializers, but finished values and non-recursive) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:     Comparator>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:     ParamDeserializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamDeserializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     Unpack\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Unpack\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (+ not supported in multi-mode) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     ParamSerializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamSerializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                controls\n                            \n                            \n                                    Public\n                                    Readonly\n                                routerOptions\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(controls: literal type, extras: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controls\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            controls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        controls:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:60\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            routerOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:63\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:57\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:132\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(controlName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:86\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patchValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        patchValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:101\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:119\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model.ts:91\n                                \n                            \n                    \n                        \n                                TODO Documentation \n\n\n                                \n                                    Returns :     QueryParamGroupValue\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerAdapter: RouterAdapter, globalRouterOptions: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-group.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerAdapter\n                                                  \n                                                        \n                                                                    RouterAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalRouterOptions\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    QueryParamGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:30\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { concatMap, debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { NGQP_ROUTER_ADAPTER, NGQP_ROUTER_OPTIONS, RouterAdapter, RouterAdapterOptions } from './router-adapter/router-adapter.interface';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamControl, QueryParamGroup, QueryParamGroupValue, Unpack } from './model';\nimport { isMissing } from './util';\n\n/** TODO Documentation */\nfunction isMultiControl(control: QueryParamControl): control is QueryParamControl {\n    return control.multi;\n}\n\n/** TODO Documentation */\nfunction hasArrayModel(control: QueryParamControl, model: T | T[]): model is T[] {\n    return isMultiControl(control);\n}\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamGroup]',\n})\nexport class QueryParamGroupDirective implements OnInit, OnDestroy {\n\n    /** TODO Documentation */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    /** TODO Documentation */\n    private directives: QueryParamNameDirective[] = [];\n\n    /** TODO Documentation @internal */\n    private queue$ = new Subject();\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(NGQP_ROUTER_ADAPTER) private routerAdapter: RouterAdapter,\n        @Optional() @Inject(NGQP_ROUTER_OPTIONS) private globalRouterOptions: RouterAdapterOptions\n    ) {\n        this.setupNavigationQueue();\n    }\n\n    public ngOnInit() {\n        if (!this.queryParamGroup) {\n            throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n        }\n\n        this.queryParamGroup._registerOnChange((value: QueryParamGroupValue) => {\n            let params: Params = {};\n            Object.keys(value).forEach(controlName => {\n                const control: QueryParamControl = this.queryParamGroup.get(controlName);\n                if (isMissing(control)) {\n                    return;\n                }\n\n                params = { ...params, ...this.getParamsForModel(control, value[ controlName ]) };\n            });\n\n            this.enqueueNavigation(params);\n        });\n\n        Object.keys(this.queryParamGroup.controls).forEach(controlName => {\n            const control: QueryParamControl = this.queryParamGroup.get(controlName);\n            control._registerOnChange((newModel: any) =>\n                this.enqueueNavigation(this.getParamsForModel(control, newModel))\n            );\n        });\n\n        this.routerAdapter.queryParamMap.subscribe(queryParamMap => {\n            Object.keys(this.queryParamGroup.controls).forEach(controlName => {\n                const control: QueryParamControl = this.queryParamGroup.get(controlName);\n                const newModel = this.deserialize(control,\n                    control.multi ? queryParamMap.getAll(control.name) : queryParamMap.get(control.name)\n                );\n\n                // Get the directive, if it has been initialized yet.\n                const directive = this.directives.find(dir => dir.name === controlName);\n                if (!isMissing(directive)) {\n                    directive.valueAccessor.writeValue(newModel);\n                }\n\n                control.value = newModel;\n                control._updateValue({ emitEvent: true, onlySelf: true });\n            });\n\n            // We used onlySelf on the controls so that we can emit only once on the entire group.\n            this.queryParamGroup._updateValue({ emitEvent: true });\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public addControl(directive: QueryParamNameDirective): void {\n        const control: QueryParamControl = this.queryParamGroup.get(directive.name);\n        if (!control) {\n            throw new Error(`Could not find control ${directive.name}. Did you forget to add it to your QueryParamGroup?`);\n        }\n        if (!directive.valueAccessor) {\n            throw new Error(`No value accessor found for the control. Please make sure to implement ControlValueAccessor on this component.`);\n        }\n\n        // Chances are that we read the initial route before a directive has been registered here.\n        // The value in the control will be correct, but we need to sync it to the view once initially.\n        directive.valueAccessor.writeValue(control.value);\n\n        // Proxy updates from the view to debounce them (if needed).\n        const debouncedQueue$ = new Subject();\n        debouncedQueue$.pipe(\n            !isMissing(control.debounceTime) ? debounceTime(control.debounceTime) : tap(),\n            map((newModel: any) => this.getParamsForModel(control, newModel)),\n            takeUntil(this.destroy$),\n        ).subscribe(params => this.enqueueNavigation(params));\n\n        directive.valueAccessor.registerOnChange((newModel: any) => debouncedQueue$.next(newModel));\n\n        this.directives.push(directive);\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    private setupNavigationQueue() {\n        this.queue$.pipe(\n            takeUntil(this.destroy$),\n            concatMap(params => this.routerAdapter.navigate(params, this.routerOptions)),\n        ).subscribe();\n    }\n\n    private enqueueNavigation(params: Params): void {\n        this.queue$.next(params);\n    }\n\n    private getParamsForModel(control: QueryParamControl, model: T): Params {\n        const newValue = this.serialize(control, model);\n\n        const combinedParams: Params = isMissing(control.combineWith)\n            ? {} : control.combineWith(control.value, model);\n\n        return {\n            ...combinedParams,\n            [ control.name ]: newValue,\n        };\n    }\n\n    private serialize(control: QueryParamControl, model: T): string[] {\n        return hasArrayModel(control, model)\n            ? (model || []).map(control.serialize)\n            : [control.serialize(model)];\n    }\n\n    private deserialize(control: QueryParamControl, values: string | string[]): Unpack | Unpack[] {\n        if (Array.isArray(values)) {\n            return values.map(control.deserialize);\n        } else {\n            return control.deserialize(values);\n        }\n    }\n\n    private get routerOptions(): RouterAdapterOptions {\n        const groupOptions = this.queryParamGroup ? this.queryParamGroup.routerOptions : {};\n\n        return {\n            ...this.globalRouterOptions,\n            ...groupOptions,\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamGroupValue.html":{"url":"interfaces/QueryParamGroupValue.html","title":"interface - QueryParamGroupValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamGroupValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [controlName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param.module.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { ControlValueAccessorDirective } from './control-value-accessor.directive';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterAdapterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterAdapterOptions\n} from './router-adapter/router-adapter';\n\nconst DIRECTIVES: Type[] = [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterAdapterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static forRoot(config: { routerOptions?: RouterAdapterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: config.routerOptions ? config.routerOptions : DefaultRouterAdapterOptions,\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                valueAccessor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: QueryParamGroupDirective, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    QueryParamGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            valueAccessor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAccessor:     ControlValueAccessor | null\n\n                    \n                \n                    \n                        \n                            Type :     ControlValueAccessor | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Inject, Input, OnInit, Optional, Self, SkipSelf } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { DefaultControlValueAccessorDirective, NGQP_BUILT_IN_ACCESSORS } from './accessors/accessors';\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements OnInit {\n\n    /** TODO Documentation */\n    @Input('queryParamName')\n    public name: string;\n\n    /** TODO Documentation */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() @Host() @SkipSelf() private parent: QueryParamGroupDirective,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.parent) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = this.selectValueAccessor(valueAccessors);\n    }\n\n    public ngOnInit() {\n        if (!this.name) {\n            throw new Error(`queryParamName has been added, but without specifying the name.`);\n        }\n\n        this.setupControl();\n    }\n\n    /**\n     * This resembles the selectControlValueAccessor function from\n     *   https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#L186\n     * We can't use it directly since it isn't exported in the public API, but let's hope choosing\n     * any accessor is good enough for our purposes.\n     */\n    private selectValueAccessor(valueAccessors: ControlValueAccessor[]): ControlValueAccessor | null {\n        if (!valueAccessors || !Array.isArray(valueAccessors)) {\n            return null;\n        }\n\n        let defaultAccessor: ControlValueAccessor | null = null;\n        let builtInAccessor: ControlValueAccessor | null = null;\n        let customAccessor: ControlValueAccessor | null = null;\n        valueAccessors.forEach(valueAccessor => {\n            if (valueAccessor.constructor === DefaultControlValueAccessorDirective) {\n                defaultAccessor = valueAccessor;\n            } else if (NGQP_BUILT_IN_ACCESSORS.some(current => valueAccessor.constructor === current)) {\n                if (builtInAccessor !== null) {\n                    throw new Error(`More than one built-in control value accessor matches`);\n                }\n\n                builtInAccessor = valueAccessor;\n            } else {\n                if (customAccessor !== null) {\n                    throw new Error(`More than one custom ControlValueAccessor has been found on the control`);\n                }\n\n                customAccessor = valueAccessor;\n            }\n        });\n\n        if (customAccessor !== null) {\n            return customAccessor;\n        }\n\n        if (builtInAccessor !== null) {\n            return builtInAccessor;\n        }\n\n        if (defaultAccessor !== null) {\n            return defaultAccessor;\n        }\n\n        throw new Error(`No matching control value accessor has been found for this form control`);\n    }\n\n    private setupControl(): void {\n        this.parent.addControl(this);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RangeControlValueAccessorDirective.html":{"url":"directives/RangeControlValueAccessorDirective.html","title":"directive - RangeControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RangeControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/range-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_RANGE_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=range][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/range-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_RANGE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=range][queryParamName]',\n    providers: [NGQP_RANGE_VALUE_ACCESSOR],\n})\nexport class RangeControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterAdapter.html":{"url":"interfaces/RouterAdapter.html","title":"interface - RouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        queryParamMap\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    navigate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(queryParams: Params, extras?: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/router-adapter.interface.ts:23\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryParamMap\n                                    \n                                \n                                \n                                    \n                                        queryParamMap:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { NavigationExtras, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * TODO Documentation\n */\nexport interface RouterAdapter {\n\n    /**\n     * TODO Documentation\n     */\n    url: string;\n\n    /**\n     * TODO Documentation\n     */\n    queryParamMap: Observable;\n\n    /**\n     * TODO Documentation\n     */\n    navigate(queryParams: Params, extras?: RouterAdapterOptions): Promise;\n\n}\n\n/**\n * TODO Documentation\n */\nexport type RouterAdapterOptions = Pick;\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectControlValueAccessorDirective.html":{"url":"directives/SelectControlValueAccessorDirective.html","title":"directive - SelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select:not([multiple])[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-control-value-accessor.directive.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T | null\n\n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select:not([multiple])[queryParamName]',\n    providers: [NGQP_SELECT_VALUE_ACCESSOR],\n})\nexport class SelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    public value: T | null = null;\n    private selectedId: string | null = null;\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onChange(event: UIEvent) {\n        this.selectedId = (event.target as HTMLOptionElement).value;\n        this.value = this.optionMap.get(this.selectedId);\n        this.fnChange(this.value);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: T) {\n        this.value = value;\n\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(): string {\n        return (this.idCounter++).toString();\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n\n        if (this.selectedId === id) {\n            this.fnChange(value);\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectOptionDirective.html":{"url":"directives/SelectOptionDirective.html","title":"directive - SelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-option.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: SelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-option.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    SelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-option.directive.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/select-option.directive.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Host, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { SelectControlValueAccessorDirective } from './select-control-value-accessor.directive';\n\n@Directive({\n    selector: 'option',\n})\nexport class SelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: SelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption();\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            addModuleToImports   (schematics/.../index.ts)\n                        \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            getAngularMajorVersion   (schematics/.../index.ts)\n                        \n                        \n                            getMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            hasArrayModel   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            isAndroid   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            isFunction   (src/.../util.ts)\n                        \n                        \n                            isMissing   (src/.../util.ts)\n                        \n                        \n                            isMultiControl   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            Unnamed function   (schematics/.../index.ts)\n                        \n                        \n                            wrapTryCatch   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMatchingVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addModuleToImports\n                            \n                            \n                        \n                    \n                \n                \n                    \naddModuleToImports(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAngularMajorVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAngularMajorVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingVersion(angularVersion, context)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularVersion\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Unnamed function\n                            \n                            \n                        \n                    \n                \n                \n                    \nUnnamed function(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnDeserializer(deserializer, emptyOn)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deserializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnSerializer(serializer, emptyOn, compareWith)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        compareWith\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/query-param-group.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasArrayModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArrayModel(control, model)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMultiControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMultiControl(control)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isAndroid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAndroid(navigator)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFunction(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMissing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMissing(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapTryCatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nwrapTryCatch(fn, msg)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nngqp – Declaratively synchronize form controls with the URL\n\n  \n\n\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nInstallation\nSimply run ng add @ngqp/core – that's it! We will automatically install ngqp and import it into your app.\nIf you want, you can also avoid running schematics. Just run yarn add @ngqp/core (or npm install --save @ngqp/core) and import the QueryParamModule into your app module:\nimport { NgModule } from '@angular/core';\nimport { QueryParamModule } from '@ngqp/core';\n\n@NgModule({\n    imports: [\n        QueryParamModule\n    ],\n})\nexport class AppModule {}Make sure that your app is set up to use routing (i.e., using RouterModule).\nUsage\nThis section is a work in progress since ngqp is still in an early development stage.\nContributing\nPlease see CONTRIBUTING.md.\nI want to know more\nWhy should I care?\nAngular's router system makes it easy to organize different views under different routes, but often the state of a specific\nroute is not reflected in the URL. This makes it impossible to bookmark or share them as on every new page load the user has\nto set these states manually.\nWith ngqp, you can easily synchronize the state of form controls such as input boxes, dropdowns or your own custom controls\nwith a query parameter on the current URL. This way the URL becomes the single source of truth for this information, which\nallows users to share or bookmark these links and reload your page without having to worry about losing their current state.\nWhat can this be used for?\nngqp will work with any kind of control, but the common scenario would be pagination (i.e., which page a user is on) or\nfilter settings (search query, selections, …)\n\nLicensed under the MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../util.ts)\n                        \n                        \n                            OnChangeFunction   (src/.../model.ts)\n                        \n                        \n                            OverwritePartial   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            ParamCombinator   (src/.../model.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../model.ts)\n                        \n                        \n                            ParamSerializer   (src/.../model.ts)\n                        \n                        \n                            QueryParamControlOptsInput   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            RouterAdapterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            Unpack   (src/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/util.ts\n    \n        \n            \n                \n                    \n                        \n                        Comparator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Comparator:     function\n\n                    \n                \n            \n        \n\n    src/lib/model.ts\n    \n        \n            \n                \n                    \n                        \n                        OnChangeFunction\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        OnChangeFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamCombinator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamCombinator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamDeserializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamDeserializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamSerializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamSerializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Unpack\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Unpack:     \n\n                    \n                \n            \n        \n\n    src/lib/query-param-builder.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OverwritePartial\n                    \n                \n                \n                    \n                        OverwritePartial:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryParamControlOptsInput\n                    \n                \n                \n                    \n                        QueryParamControlOptsInput:     OverwritePartial | \"serialize\" | \"deserialize\" | \"compareWith\">\n\n                    \n                \n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        RouterAdapterOptions\n                    \n                \n                    \n                        \n                            TODO Documentation\n\n                        \n                    \n                \n                    \n                        RouterAdapterOptions:     Pick\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BOOLEAN_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_BOOLEAN_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DefaultRouterAdapterOptions   (src/.../default-router-adapter.service.ts)\n                        \n                        \n                            DIRECTIVES   (src/.../query-param.module.ts)\n                        \n                        \n                            LOOSE_IDENTITY_COMPARATOR   (src/.../util.ts)\n                        \n                        \n                            NGQP_BUILT_IN_ACCESSORS   (src/.../ngqp-accessors.ts)\n                        \n                        \n                            NGQP_CHECKBOX_VALUE_ACCESSOR   (src/.../checkbox-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_DEFAULT_VALUE_ACCESSOR   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_MODULE_NAME   (schematics/.../index.ts)\n                        \n                        \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR   (src/.../multi-select-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_NUMBER_VALUE_ACCESSOR   (src/.../number-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_RANGE_VALUE_ACCESSOR   (src/.../range-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_ROUTER_ADAPTER   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_SELECT_VALUE_ACCESSOR   (src/.../select-control-value-accessor.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/router-adapter/default-router-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterAdapterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DefaultRouterAdapterOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n}\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/query-param.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DIRECTIVES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DIRECTIVES:     Type[]\n\n                    \n                \n                    \n                        \n                            Type :     Type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOOSE_IDENTITY_COMPARATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOOSE_IDENTITY_COMPARATOR:     \n\n                    \n                \n                    \n                        \n                            Default value : (a: T, b: T) => a == b\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/ngqp-accessors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_BUILT_IN_ACCESSORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_BUILT_IN_ACCESSORS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/checkbox-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_CHECKBOX_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MODULE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MODULE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QueryParamModule'\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/multi-select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MULTI_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/number-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_NUMBER_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/range-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_RANGE_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_RANGE_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_ADAPTER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_ADAPTER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_ADAPTER')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_OPTIONS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
