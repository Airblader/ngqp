var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/directives/CheckboxControlValueAccessorDirective.html",[0,0.094,1,1.742]],["body/directives/CheckboxControlValueAccessorDirective.html",[0,0.154,1,2.836,2,0.467,3,0.408,4,0.352,5,4.864,6,0.688,7,0.606,8,1.089,9,1.173,10,1.578,11,1.089,12,0.767,13,4.181,14,1.419,15,4.543,16,0.299,17,0.689,18,0.822,19,2.074,20,2.074,21,2.074,22,2.074,23,2.094,24,2.551,25,2.858,26,0.737,27,1.957,28,2.218,29,2.184,30,0.777,31,2.885,32,0.561,33,0.038,34,0.561,35,0.394,36,0.65,37,1.882,38,3.487,39,1.957,40,1.712,41,2.885,42,2.294,43,2.489,44,1.712,45,2.885,46,1.836,47,0.717,48,1.132,49,1.712,50,3.487,51,1.712,52,1.382,53,3.487,54,1.712,55,1.712,56,2.885,57,0.532,58,1.419,59,0.991,60,1.558,61,0.595,62,0.389,63,0.595,64,1.196,65,0.664,66,0.529,67,0.299,68,0.862,69,1.314,70,1.314,71,1.314,72,1.957,73,2.193,74,2.885,75,3.487,76,1.445,77,2.193,78,1.712,79,1.445,80,1.882,81,3.487,82,1.314,83,1.314,84,0.027,85,0.027]],["title/directives/ControlValueAccessorDirective.html",[0,0.094,86,1.742]],["body/directives/ControlValueAccessorDirective.html",[0,0.15,2,0.446,3,0.39,4,0.336,7,0.61,8,1.04,9,1.138,10,1.755,11,1.04,12,0.798,14,1.376,16,0.285,17,0.669,18,0.827,19,2.012,20,2.012,21,2.012,22,2.012,30,0.768,32,0.553,33,0.038,34,0.553,35,0.407,36,0.64,40,1.66,44,1.66,46,1.803,47,0.733,48,1.231,49,1.66,51,1.66,52,1.275,54,1.254,55,1.66,56,2.755,57,0.516,58,1.543,59,0.946,60,1.694,61,0.568,62,0.285,64,1.512,65,0.839,66,0.669,67,0.285,68,0.751,69,1.254,70,1.254,71,1.254,78,1.254,82,1.254,84,0.026,85,0.026,86,2.951,87,5.82,88,1.04,89,1.502,90,1.231,91,4.407,92,4.94,93,4.94,94,2.494,95,5.469,96,2.094,97,4.407,98,1.673,99,2.755,100,2.377,101,1.252,102,2.755,103,3.329,104,2.377,105,3.329,106,3.329,107,0.839,108,3.329,109,1.52,110,3.329,111,3.329]],["title/directives/DefaultControlValueAccessorDirective.html",[0,0.094,112,1.567]],["body/directives/DefaultControlValueAccessorDirective.html",[0,0.144,2,0.412,3,0.36,4,0.31,6,0.686,7,0.61,8,0.96,9,1.078,10,1.482,11,0.96,12,0.72,14,1.304,16,0.263,17,0.634,18,0.816,19,1.907,20,1.907,21,1.907,22,1.907,23,1.966,24,2.395,26,0.883,28,2.109,29,2.116,30,0.776,32,0.538,33,0.038,34,0.538,35,0.378,36,0.658,37,1.966,39,2.344,40,1.918,42,2.57,44,1.574,46,1.746,47,0.736,48,1.077,49,1.574,51,1.574,52,1.374,54,1.574,55,1.574,57,0.556,58,1.304,59,0.873,60,1.432,61,0.524,62,0.358,63,0.712,64,1.054,65,0.585,66,0.634,67,0.263,68,0.958,69,1.158,70,1.158,71,1.158,73,1.933,74,3.456,76,1.273,77,1.933,78,1.574,80,1.73,82,1.158,83,1.158,84,0.025,85,0.025,96,1.933,101,0.873,104,2.194,112,2.395,113,4.183,114,3.926,115,4.176,116,4.176,117,4.744,118,1.304,119,3.073,120,1.315,121,1.314,122,3.073,123,4.176,124,2.194,125,3.073,126,3.073,127,2.194,128,3.073,129,3.073,130,3.073,131,3.073,132,1.273,133,3.073,134,3.073,135,2.543,136,2.543,137,1.725,138,3.073,139,3.073,140,1.054,141,3.073,142,3.073,143,2.344,144,2.194,145,4.744,146,4.744,147,2.982,148,3.073,149,3.073,150,3.073,151,3.073,152,3.073,153,3.073,154,3.073,155,3.456]],["title/injectables/DefaultRouterAdapter.html",[132,1.286,156,2.215]],["body/injectables/DefaultRouterAdapter.html",[2,0.516,3,0.451,4,0.389,7,0.389,9,0.994,16,0.33,17,0.735,18,0.767,26,0.814,30,0.744,32,0.489,33,0.038,34,0.489,35,0.344,36,0.567,47,0.744,57,0.62,61,0.657,62,0.415,63,0.657,66,0.584,67,0.33,68,0.657,79,1.596,84,0.028,85,0.028,88,1.203,89,1.367,90,1.12,132,2.194,137,2.717,156,3.456,157,3.601,158,4.737,159,1.924,160,3.187,161,1.824,162,3.331,163,4.381,164,3.851,165,3.331,166,5.555,167,3.851,168,4.006,169,1.434,170,2.536,171,1.787,172,3.851,173,1.451,174,4.381,175,4.006,176,3.851,177,3.851,178,3.851,179,3.851,180,1.596,181,3.045,182,1.758,183,2.749,184,2.749,185,3.851,186,3.851,187,3.851,188,3.851,189,3.851,190,3.851,191,2.749]],["title/directives/MultiSelectControlValueAccessorDirective.html",[0,0.094,192,1.417]],["body/directives/MultiSelectControlValueAccessorDirective.html",[0,0.143,2,0.343,3,0.3,4,0.259,6,0.669,7,0.621,8,0.8,9,1.11,10,1.343,11,0.8,12,0.653,14,1.343,16,0.219,17,0.558,18,0.827,19,1.679,20,1.679,21,1.679,22,1.679,23,1.782,24,2.172,25,2.706,26,0.778,27,1.438,28,2.063,29,2.096,30,0.756,32,0.552,33,0.038,34,0.552,35,0.388,36,0.692,37,1.782,44,1.385,46,1.612,47,0.766,48,1.155,49,1.385,51,1.385,52,1.285,54,1.385,55,1.385,57,0.431,58,1.148,59,0.728,60,1.261,61,0.437,62,0.369,63,0.802,64,0.878,65,0.488,66,0.389,67,0.315,68,0.985,69,0.965,70,0.965,71,0.965,72,1.438,76,1.061,78,1.385,79,1.061,80,1.782,82,0.965,83,0.965,84,0.022,85,0.022,98,1.58,100,1.828,107,0.819,109,1.169,118,0.8,120,1.337,121,1.338,124,1.828,140,0.878,192,2.147,193,4.079,194,3.294,195,3.071,196,3.043,197,3.043,198,2.625,199,3.043,200,2.561,201,2.313,202,2.561,203,3.436,204,2.119,205,2.119,206,3.043,207,2.374,208,2.119,209,2.119,210,2.313,211,2.561,212,2.561,213,2.064,214,2.064,215,1.857,216,2.064,217,1.611,218,2.064,219,1.611,220,1.611,221,1.611,222,2.119,223,2.313,224,2.119,225,2.119,226,3.043,227,2.119,228,2.119,229,2.313,230,1.611,231,1.828,232,0.965,233,2.119,234,1.169,235,2.119,236,2.119,237,2.119,238,1.611,239,2.119,240,2.119,241,3.043,242,3.043,243,1.611,244,2.119,245,1.611,246,1.611,247,2.119,248,1.611,249,1.611,250,0.965,251,1.876,252,2.313,253,2.119,254,1.293,255,1.438,256,1.611,257,1.611,258,1.857,259,1.611,260,1.611,261,2.119,262,2.119,263,2.119]],["title/directives/MultiSelectOptionDirective.html",[0,0.094,207,1.567]],["body/directives/MultiSelectOptionDirective.html",[0,0.148,2,0.372,3,0.325,4,0.28,6,0.653,7,0.625,8,0.867,9,1.161,10,1.216,11,0.867,12,0.591,14,1.404,16,0.238,17,0.591,18,0.812,23,1.15,26,0.824,28,2.127,29,2.136,30,0.732,32,0.454,33,0.038,34,0.454,35,0.276,36,0.673,37,2.02,44,1.046,46,1.335,47,0.747,48,1.125,49,1.046,51,1.046,52,1.325,54,1.046,55,1.046,57,0.456,58,1.216,59,0.789,60,1.335,61,0.473,62,0.385,63,0.831,64,0.952,65,0.529,66,0.421,67,0.334,68,0.999,69,1.046,70,1.046,71,1.046,72,1.558,76,1.15,78,1.467,79,1.15,80,1.863,82,1.046,83,1.046,84,0.023,85,0.023,98,1.458,107,0.856,109,1.268,118,1.404,120,1.245,121,1.374,140,0.952,161,1.467,192,2.344,193,3.982,194,3.337,195,2.78,196,2.297,201,1.746,203,3.347,206,2.297,207,2.271,210,1.746,213,2.185,214,2.524,215,2.271,216,2.185,217,1.746,218,2.185,219,1.746,220,1.746,221,1.746,222,2.297,223,2.449,224,2.297,225,2.297,226,3.222,227,2.297,228,2.297,229,2.449,230,1.746,231,1.982,232,1.046,233,2.297,234,1.268,235,2.297,236,2.297,237,2.297,238,1.746,239,2.297,240,2.297,241,3.222,242,3.222,243,1.746,244,2.297,245,1.746,246,1.746,247,2.297,248,1.746,249,1.746,250,1.467,251,1.934,252,2.449,253,2.297,254,2.461,255,2.736,256,1.746,257,1.746,258,1.966,259,1.746,260,1.746,261,2.297,262,2.297,263,2.297,264,1.982,265,2.776,266,3.893,267,2.776,268,2.776,269,1.402,270,2.776,271,2.776,272,2.776,273,2.776]],["title/directives/NumberControlValueAccessorDirective.html",[0,0.094,274,1.742]],["body/directives/NumberControlValueAccessorDirective.html",[0,0.152,2,0.456,3,0.399,4,0.344,6,0.685,7,0.615,8,1.063,9,1.154,10,1.56,11,1.063,12,0.758,14,1.397,16,0.292,17,0.679,18,0.82,19,2.042,20,2.042,21,2.042,22,2.042,23,2.069,24,2.522,26,0.72,27,1.911,28,2.198,29,2.172,30,0.772,32,0.557,33,0.038,34,0.557,35,0.391,36,0.645,37,1.853,39,1.911,40,1.685,42,2.258,43,2.43,44,1.685,46,1.819,47,0.711,48,1.122,49,1.685,51,1.685,52,1.289,54,1.685,55,1.685,57,0.524,58,1.397,59,0.967,60,1.534,61,0.58,62,0.383,63,0.852,64,1.168,65,0.648,66,0.517,67,0.292,68,0.852,69,1.283,70,1.283,71,1.283,73,2.141,76,1.41,77,2.141,78,1.685,79,1.41,80,1.853,82,1.283,83,1.283,84,0.026,85,0.026,96,2.141,99,2.817,100,2.43,104,2.43,109,1.554,118,1.397,121,1.154,127,2.43,144,2.43,147,2.43,155,3.701,274,2.803,275,4.839,276,4.133,277,4.472,278,2.817,279,2.817,280,1.719,281,2.141,282,2.817]],["title/injectables/QueryParamBuilder.html",[132,1.286,283,2.568]],["body/injectables/QueryParamBuilder.html",[2,0.31,3,0.271,4,0.234,6,0.525,7,0.234,16,0.198,17,0.519,18,0.841,30,0.789,32,0.601,33,0.038,34,0.601,35,0.42,36,0.685,47,0.812,57,0.56,61,0.395,62,0.293,63,0.395,65,0.91,66,0.726,67,0.198,68,0.395,84,0.02,85,0.02,88,0.723,89,1.476,90,1.197,98,1.154,107,0.91,120,1.119,132,1.683,159,0.723,169,1.559,170,2.047,171,1.4,173,0.872,182,1.057,283,2.828,284,2.688,285,1.916,286,4.14,287,4.14,288,2.899,289,4.14,290,4.488,291,5.003,292,5.075,293,2.316,294,3.323,295,2.843,296,2.316,297,2.316,298,5.003,299,2.682,300,2.316,301,2.316,302,2.316,303,2.316,304,2.149,305,2.316,306,1.53,307,5.003,308,2.316,309,2.316,310,2.316,311,5.003,312,2.316,313,3.417,314,2.316,315,2.316,316,5.003,317,2.316,318,2.316,319,2.316,320,0.959,321,2.828,322,2.828,323,2.828,324,2.828,325,2.828,326,2.828,327,1.981,328,3.71,329,0.959,330,0.794,331,2.828,332,1.653,333,2.316,334,1.857,335,1.857,336,2.316,337,2.316,338,3.417,339,2.264,340,2.316,341,2.316,342,2.316,343,1.916,344,1.916,345,2.316,346,2.316,347,2.316,348,1.653,349,1.057,350,2.316,351,2.316,352,2.316,353,4.061,354,2.316,355,2.316]],["title/classes/QueryParamControl.html",[67,0.266,295,1.417]],["body/classes/QueryParamControl.html",[2,0.246,3,0.215,4,0.186,6,0.536,7,0.59,12,0.279,16,0.158,17,0.435,18,0.822,26,0.607,30,0.709,32,0.462,33,0.038,34,0.557,35,0.41,36,0.413,47,0.579,48,1.119,52,1.341,57,0.506,62,0.435,63,0.736,65,0.989,66,0.279,67,0.302,68,0.736,84,0.017,85,0.017,88,0.574,89,1.599,90,1.31,94,2.181,98,1.548,101,1.132,107,0.941,120,1.216,121,1.463,140,2.021,143,2.683,159,0.574,169,0.74,170,1.31,171,1.101,173,1.501,180,0.762,182,0.84,232,1.724,234,0.84,250,1.081,251,0.693,269,2.011,280,2.011,294,2.852,295,1.972,299,2.839,304,2.506,306,1.329,320,0.762,327,2.152,329,0.762,330,0.631,334,2.049,335,1.65,339,2.623,349,2.455,356,1.032,357,1.31,358,2.775,359,2.413,360,2.373,361,2.048,362,1.804,363,1.839,364,2.424,365,1.839,366,1.839,367,2.424,368,1.839,369,1.839,370,1.839,371,2.424,372,1.839,373,1.839,374,2.424,375,2.218,376,1.839,377,2.218,378,1.839,379,1.839,380,1.78,381,0.84,382,1.61,383,1.032,384,0.928,385,1.979,386,1.032,387,1.032,388,2.424,389,1.157,390,1.032,391,1.448,392,1.157,393,1.032,394,1.804,395,1.081,396,2.181,397,1.448,398,1.032,399,2.011,400,1.157,401,1.157,402,1.157,403,1.804,404,0.928,405,1.804,406,2.717,407,1.032,408,1.157,409,1.157,410,1.979,411,1.804,412,1.804,413,1.157,414,1.804,415,1.157,416,2.683,417,1.032,418,1.032,419,1.157,420,2.717,421,2.218,422,1.804,423,1.804,424,1.157,425,1.157,426,1.157,427,1.157,428,0.762,429,1.157,430,1.157,431,2.506,432,1.157,433,1.157,434,1.157,435,1.157,436,1.157,437,1.157,438,1.157,439,1.157,440,1.157,441,1.032,442,1.032,443,1.157,444,1.032,445,1.61,446,1.157,447,1.032,448,1.157,449,1.157,450,1.157,451,0.928,452,1.157,453,1.032,454,1.157,455,1.157,456,1.157,457,1.157]],["title/interfaces/QueryParamControlOpts.html",[299,1.567,395,1.169]],["body/interfaces/QueryParamControlOpts.html",[2,0.267,3,0.234,4,0.201,6,0.576,7,0.572,12,0.303,16,0.171,18,0.788,26,0.422,32,0.375,33,0.038,34,0.546,35,0.394,36,0.595,47,0.497,48,1.101,52,1.371,57,0.525,62,0.446,63,0.765,65,1.029,66,0.303,67,0.262,68,0.765,84,0.018,85,0.018,88,0.623,89,1.605,90,1.315,94,1.542,98,1.479,101,1.182,107,0.967,120,1.243,121,1.415,140,1.822,143,2.763,159,0.623,169,0.788,170,1.394,171,1.159,180,0.826,182,0.911,232,1.782,234,1.394,250,1.151,251,0.751,269,1.874,280,2.1,294,2.516,295,1.899,299,2.628,306,1.398,320,0.826,327,2.238,329,0.826,330,0.684,334,2.104,335,2.039,339,2.682,349,2.159,356,1.119,357,1.394,358,2.85,359,2.485,362,1.255,364,2.516,367,2.516,371,2.516,374,2.083,375,1.921,377,1.921,380,1.874,381,0.911,382,2.334,383,1.119,384,1.007,385,2.083,386,1.119,387,1.119,388,2.516,389,1.255,390,1.119,391,2.1,392,1.255,393,1.119,394,1.921,395,1.398,396,2.264,397,1.874,398,1.714,399,2.485,400,1.921,401,1.921,402,1.921,403,1.921,404,1.007,405,1.921,406,2.82,407,1.119,408,1.255,409,1.255,410,2.083,411,1.921,412,1.921,413,1.255,414,1.921,415,1.255,416,2.763,417,1.119,418,1.119,419,1.255,420,2.82,421,2.335,422,1.921,423,1.921,424,1.255,425,1.255,426,1.255,427,1.255,428,0.826,429,1.255,430,1.255,431,2.616,432,1.255,433,1.255,434,1.255,435,1.255,436,1.255,437,1.255,438,1.255,439,1.255,440,1.255,441,1.119,442,1.119,443,1.255,444,1.119,445,1.714,446,1.255,447,1.119,448,1.255,449,1.255,450,1.255,451,1.007,452,1.255,453,1.119,454,1.255,455,1.255,456,1.255,457,1.255]],["title/classes/QueryParamGroup.html",[67,0.266,306,1.169]],["body/classes/QueryParamGroup.html",[2,0.252,3,0.22,4,0.19,6,0.612,7,0.592,12,0.285,16,0.161,17,0.443,18,0.816,26,0.617,30,0.685,32,0.503,33,0.038,34,0.553,35,0.418,36,0.511,47,0.667,48,1.143,52,1.286,57,0.511,62,0.438,63,0.744,65,0.917,66,0.285,67,0.306,68,0.744,84,0.017,85,0.017,88,0.587,89,1.598,90,1.309,94,2.203,98,1.453,101,1.145,107,0.948,120,1.223,121,1.349,140,1.936,143,2.705,159,0.587,161,1.099,169,0.753,170,1.84,171,1.505,173,1.519,180,0.779,182,0.858,232,1.74,234,0.858,250,1.099,251,0.708,269,2.035,280,1.473,294,2.934,295,1.992,299,2.515,304,3.288,306,1.519,320,0.779,327,1.996,329,0.779,330,0.645,334,1.808,335,1.67,339,2.687,349,2.108,356,1.055,357,1.332,358,2.449,359,2.035,360,2.414,361,2.083,362,1.182,364,2.007,367,2.007,371,2.007,374,2.449,375,2.249,377,2.249,380,1.805,381,0.858,382,1.638,383,1.055,384,0.949,385,2.007,386,1.055,387,1.055,388,2.449,389,1.182,390,1.055,391,1.473,392,1.182,393,1.055,394,1.835,395,1.099,396,2.639,397,1.473,398,1.055,399,2.035,400,1.182,401,1.182,402,1.182,403,1.835,404,2.035,405,1.835,406,2.745,407,1.055,408,1.182,409,1.182,410,2.007,411,1.835,412,1.835,413,1.835,414,1.835,415,1.835,416,2.705,417,1.055,418,1.055,419,1.182,420,2.745,421,2.249,422,1.835,423,1.835,424,1.182,425,1.182,426,1.182,427,1.182,428,0.779,429,1.182,430,1.182,431,2.535,432,1.182,433,1.182,434,1.182,435,1.182,436,1.182,437,1.182,438,1.182,439,1.182,440,1.182,441,1.055,442,1.055,443,1.182,444,1.055,445,1.638,446,1.182,447,1.055,448,1.182,449,1.182,450,1.182,451,0.949,452,1.182,453,1.055,454,1.182,455,1.182,456,1.182,457,1.182,458,2.414,459,1.88,460,1.88,461,1.88,462,1.88,463,1.88,464,1.88,465,1.88,466,1.88,467,1.88,468,1.88,469,1.88]],["title/directives/QueryParamGroupDirective.html",[0,0.094,470,1.567]],["body/directives/QueryParamGroupDirective.html",[0,0.166,2,0.338,3,0.295,4,0.255,6,0.659,7,0.471,9,1.101,10,0.787,11,0.787,14,1.135,16,0.216,17,0.552,18,0.729,26,0.769,30,0.625,32,0.255,33,0.038,34,0.255,35,0.258,36,0.499,47,0.754,48,0.987,57,0.637,61,0.43,62,0.216,63,0.959,66,0.647,67,0.216,68,0.971,84,0.021,85,0.021,88,0.787,89,1.452,90,1.19,98,1.406,101,1.033,107,0.981,118,1.331,120,0.998,132,1.044,159,0.787,161,0.95,165,1.586,169,1.511,171,1.545,180,1.044,181,3.242,182,1.151,214,2.393,215,2.153,218,1.415,231,1.799,232,1.606,254,2.356,255,2.62,284,2.259,288,2.595,295,2.601,306,2.119,320,2.296,329,1.044,330,0.865,339,1.835,359,1.273,380,2.356,381,1.151,384,1.273,390,2.04,391,2.153,396,1.835,404,1.273,407,1.415,410,2.393,416,2.04,417,1.415,418,1.415,428,1.044,453,2.04,470,1.835,471,2.086,472,2.521,473,4.263,474,2.521,475,2.521,476,2.521,477,2.521,478,2.521,479,2.521,480,3.635,481,2.521,482,1.586,483,1.586,484,2.153,485,2.086,486,3.008,487,3.635,488,3.008,489,2.521,490,2.086,491,2.521,492,2.521,493,2.521,494,2.521,495,3.635,496,2.521,497,1.799,498,2.521,499,2.521,500,2.04,501,2.521,502,4.263,503,3.635,504,3.635,505,3.635,506,2.521,507,2.521,508,4.667,509,2.521,510,2.521,511,2.521,512,2.521,513,3.528,514,2.521,515,2.521,516,2.521,517,2.521,518,2.521,519,2.521,520,2.521,521,3.635,522,2.521,523,2.521,524,2.521,525,2.521,526,2.521,527,2.521,528,2.521,529,2.521,530,2.521,531,2.086,532,1.586,533,2.521,534,2.086,535,2.086,536,2.086,537,1.799,538,2.086,539,2.086,540,2.521,541,2.521,542,2.521,543,2.521,544,2.521,545,2.086,546,3.008,547,2.521,548,3.008,549,2.521,550,2.521,551,2.086,552,2.521,553,2.521,554,2.521,555,2.521,556,2.521,557,2.521,558,3.635,559,2.521,560,2.521,561,2.521,562,2.521,563,2.521,564,2.521,565,2.521,566,2.521,567,2.521,568,2.521,569,2.521,570,2.521,571,2.521,572,3.635,573,2.521,574,2.521,575,2.521,576,2.521,577,2.521,578,2.521,579,2.521,580,2.521,581,2.521,582,3.635,583,2.521,584,2.521]],["title/interfaces/QueryParamGroupValue.html",[395,1.169,396,1.567]],["body/interfaces/QueryParamGroupValue.html",[2,0.286,3,0.25,4,0.216,6,0.568,7,0.574,12,0.324,16,0.183,18,0.795,26,0.451,30,0.286,32,0.391,33,0.038,34,0.524,35,0.328,47,0.518,48,1.122,52,1.338,57,0.541,62,0.455,63,0.788,65,0.959,66,0.324,67,0.275,68,0.788,84,0.019,85,0.019,88,0.666,89,1.598,90,1.309,94,1.623,98,1.507,101,1.223,107,0.987,120,1.242,121,1.395,140,1.854,143,2.828,159,0.666,169,0.83,170,1.468,171,1.208,180,0.884,182,0.974,232,1.829,234,0.974,250,1.211,251,0.804,269,1.953,280,1.623,294,2.592,295,1.966,299,2.618,306,1.457,320,0.884,327,2.087,329,0.884,330,0.732,334,1.914,335,1.784,339,2.772,349,2.216,356,1.198,358,2.592,359,2.174,362,1.342,364,2.171,367,2.171,371,2.171,374,2.171,375,2.022,377,2.022,380,1.953,381,0.974,382,1.804,383,1.198,384,1.077,385,2.171,386,1.198,387,1.198,388,2.592,389,1.342,390,1.198,391,1.623,392,1.342,393,1.198,394,2.022,395,1.457,396,2.451,397,1.623,398,1.198,399,2.174,400,1.342,401,1.342,402,1.342,403,2.022,404,1.077,405,2.022,406,2.905,407,1.198,408,1.342,409,1.342,410,2.171,411,2.022,412,2.022,413,1.342,414,2.022,415,1.342,416,2.828,417,1.198,418,1.198,419,1.342,420,2.905,421,2.433,422,2.022,423,2.022,424,1.342,425,1.342,426,1.342,427,1.342,428,0.884,429,1.342,430,1.342,431,2.708,432,1.342,433,1.342,434,1.342,435,1.342,436,1.342,437,1.342,438,1.342,439,1.342,440,1.342,441,1.198,442,1.198,443,1.342,444,1.198,445,1.804,446,1.342,447,1.198,448,1.342,449,1.342,450,1.342,451,1.077,452,1.342,453,1.198,454,1.342,455,1.342,456,1.342,457,1.342,585,2.133]],["title/modules/QueryParamModule.html",[586,1.417,587,1.567]],["body/modules/QueryParamModule.html",[0,0.146,1,3.333,2,0.422,3,0.369,4,0.318,6,0.369,7,0.429,12,0.839,17,0.478,18,0.422,30,0.422,32,0.318,33,0.038,34,0.318,35,0.381,36,0.369,47,0.569,57,0.662,61,0.537,62,0.44,63,0.537,67,0.27,84,0.025,85,0.025,86,3.333,112,2.998,156,3.03,159,0.983,161,1.186,169,1.096,171,1.325,173,1.186,183,3.428,192,2.711,207,2.998,274,3.333,284,1.938,304,2.67,330,1.079,404,1.589,428,1.759,470,2.998,482,2.67,483,3.021,484,2.998,485,2.604,586,1.938,587,3.2,588,1.766,589,2.604,590,3.428,591,2.247,592,2.604,593,2.604,594,2.604,595,3.333,596,2.998,597,2.998,598,3.512,599,2.604,600,2.247,601,2.604,602,4.244,603,2.604,604,4.244,605,3.147,606,2.604,607,4.802,608,3.974,609,2.604,610,3.147,611,2.604,612,3.147,613,3.147,614,4.244,615,4.244]],["title/directives/QueryParamNameDirective.html",[0,0.094,484,1.567]],["body/directives/QueryParamNameDirective.html",[0,0.145,2,0.416,3,0.364,4,0.314,6,0.599,7,0.482,9,1.086,10,1.876,11,0.97,14,1.314,16,0.266,17,0.638,18,0.768,26,0.89,30,0.685,32,0.314,33,0.038,34,0.482,35,0.339,36,0.599,47,0.716,48,0.89,57,0.599,58,0.97,59,0.883,61,0.53,62,0.36,67,0.266,68,0.814,84,0.025,85,0.03,88,0.97,89,1.422,90,1.165,101,0.883,107,1.017,112,2.124,118,1.49,120,0.985,121,1.585,132,1.287,161,1.797,169,1.422,173,1.17,213,2.361,215,2.409,232,2.013,250,1.797,251,1.17,254,2.582,264,2.218,284,2.44,306,1.17,357,1.921,428,1.287,442,1.744,470,2.582,484,2.124,497,2.218,500,1.744,531,2.57,532,1.954,534,3.481,535,3.948,609,2.57,611,2.57,616,3.106,617,5.113,618,5.925,619,4.207,620,3.106,621,3.106,622,4.207,623,4.207,624,2.57,625,3.106,626,3.106,627,3.106,628,3.106,629,3.106,630,3.106,631,2.218,632,3.106,633,3.106,634,2.57,635,3.106,636,3.106,637,3.106,638,3.106,639,2.57,640,2.218,641,3.106,642,3.106,643,3.106,644,3.106,645,3.106,646,2.57,647,3.106,648,3.106,649,5.113,650,5.343,651,5.343,652,3.106,653,4.207,654,3.106,655,2.57,656,4.207,657,4.207,658,3.106,659,2.57,660,2.57,661,3.106,662,3.106]],["title/directives/RangeControlValueAccessorDirective.html",[0,0.094,595,1.742]],["body/directives/RangeControlValueAccessorDirective.html",[0,0.153,2,0.462,3,0.403,4,0.348,6,0.687,7,0.609,8,1.076,9,1.163,10,1.569,11,1.076,12,0.762,14,1.407,16,0.295,17,0.684,18,0.821,19,2.058,20,2.058,21,2.058,22,2.058,23,2.081,24,2.536,26,0.729,27,1.934,28,2.208,29,2.178,30,0.774,32,0.559,33,0.038,34,0.559,35,0.393,36,0.648,37,1.867,39,1.934,40,1.698,42,2.276,43,2.459,44,1.698,46,1.828,47,0.714,48,1.127,49,1.698,51,1.698,52,1.297,54,1.698,55,1.698,57,0.528,58,1.407,59,0.979,60,1.546,61,0.587,62,0.386,63,0.769,64,1.182,65,0.656,66,0.523,67,0.295,68,0.857,69,1.298,70,1.298,71,1.298,73,2.167,76,1.427,77,2.167,78,1.698,79,1.427,80,1.867,82,1.298,83,1.298,84,0.026,85,0.026,96,2.167,109,1.573,118,1.407,121,0.889,124,2.459,127,2.459,144,2.459,147,2.459,278,2.851,279,2.851,280,1.739,281,2.167,282,3.73,595,2.82,663,4.852,664,4.157,665,4.507,666,3.445,667,2.851]],["title/interfaces/RouterAdapter.html",[181,1.952,395,1.169]],["body/interfaces/RouterAdapter.html",[2,0.534,3,0.467,4,0.403,16,0.341,17,0.751,30,0.534,32,0.403,33,0.038,34,0.403,35,0.399,36,0.467,47,0.534,57,0.63,61,0.679,62,0.482,63,0.843,84,0.029,85,0.029,88,1.244,89,1.59,90,1.303,107,0.942,120,1.258,137,2.776,157,3.111,162,3.537,163,4.653,168,4.092,169,1.452,170,2.455,171,1.756,174,3.297,175,4.092,180,1.651,181,3.111,330,1.696,332,2.844,357,2.258,374,3.156,381,1.819,395,1.863,482,2.506,483,2.506,668,2.844,669,3.984,670,3.984,671,3.984,672,3.984,673,3.984,674,3.297,675,3.297]],["title/directives/SelectControlValueAccessorDirective.html",[0,0.094,596,1.567]],["body/directives/SelectControlValueAccessorDirective.html",[0,0.145,2,0.355,3,0.31,4,0.268,6,0.68,7,0.625,8,0.827,9,1.131,10,1.369,11,0.827,12,0.665,14,1.369,16,0.227,17,0.572,18,0.831,19,1.72,20,1.72,21,1.72,22,1.72,23,1.816,24,2.213,25,2.369,26,0.797,27,1.487,28,2.09,29,2.112,30,0.771,31,2.192,32,0.545,33,0.038,34,0.545,35,0.391,36,0.666,37,1.816,39,1.487,40,1.419,41,2.192,42,1.902,44,1.419,45,2.192,46,1.637,47,0.762,48,1.165,49,1.419,51,1.419,52,1.131,54,1.419,55,1.419,57,0.441,58,1.176,59,0.752,60,1.292,61,0.452,62,0.376,63,0.642,64,0.908,65,0.504,66,0.402,67,0.323,68,0.981,69,0.998,70,0.998,71,0.998,72,1.487,76,1.097,78,1.419,79,1.097,80,1.978,82,0.998,83,0.998,84,0.022,85,0.022,98,1.651,102,2.192,107,0.504,109,1.209,118,0.827,120,1.346,121,1.5,140,0.908,173,0.998,197,3.116,198,3.408,199,3.116,201,2.369,203,3.297,204,2.192,205,2.192,208,2.192,209,2.192,210,2.369,213,2.114,214,2.114,215,1.902,216,2.114,217,1.666,218,1.487,219,1.666,220,1.666,221,1.666,223,3.172,229,1.666,230,1.666,238,1.666,243,1.666,245,1.666,246,1.666,248,1.666,249,1.666,250,0.998,251,1.799,252,2.369,254,1.337,255,1.487,256,1.666,257,1.666,258,1.337,259,1.666,260,1.666,281,1.666,357,1.72,451,1.902,596,2.41,597,1.337,667,2.192,676,4.147,677,3.129,678,3.116,679,2.648,680,2.648,681,2.648,682,2.192,683,2.192,684,2.192,685,2.192,686,2.192,687,1.891,688,2.192,689,3.116]],["title/directives/SelectOptionDirective.html",[0,0.094,597,1.567]],["body/directives/SelectOptionDirective.html",[0,0.154,2,0.403,3,0.352,4,0.304,6,0.639,7,0.62,8,0.939,9,1.211,10,1.285,11,0.939,12,0.624,14,1.465,16,0.258,17,0.624,18,0.817,23,1.245,26,0.87,28,2.189,29,2.173,30,0.708,32,0.416,33,0.038,34,0.416,35,0.213,36,0.639,37,2.09,40,1.132,42,1.517,44,1.132,46,1.411,47,0.731,48,1.117,49,1.132,51,1.132,52,0.776,54,1.132,55,1.132,57,0.482,58,1.285,59,0.854,60,1.411,61,0.513,62,0.402,63,0.701,64,1.031,65,0.572,66,0.456,67,0.352,68,1.005,69,1.132,70,1.132,71,1.132,72,1.687,76,1.245,78,1.55,79,1.245,80,2.09,82,1.132,83,1.132,84,0.024,85,0.024,98,1.55,107,0.572,109,1.372,118,1.465,120,1.276,121,1.489,140,1.031,161,1.55,198,2.146,201,1.891,203,3.173,210,1.891,213,2.309,214,2.633,215,2.368,216,2.309,217,1.891,218,1.687,219,1.891,220,1.891,221,1.891,223,3.323,229,1.891,230,1.891,238,1.891,243,1.891,245,1.891,246,1.891,248,1.891,249,1.891,250,1.55,251,1.9,252,2.588,254,2.546,255,2.831,256,1.891,257,1.891,258,1.517,259,1.891,260,1.891,264,2.146,269,1.517,281,1.891,451,2.077,596,2.667,597,2.077,676,3.894,677,2.937,678,2.487,682,2.487,683,2.487,684,2.487,685,2.487,686,2.487,687,2.146,688,2.487,689,3.404,690,3.005,691,4.114,692,3.005,693,3.005]],["title/changelog.html",[694,1.861,695,1.861,696,2.606]],["body/changelog.html",[0,0.099,4,0.394,6,0.545,7,0.47,9,0.559,12,0.741,17,0.494,18,0.29,25,2.73,29,0.817,30,0.436,33,0.025,34,0.219,35,0.154,36,0.572,40,0.817,62,0.279,65,0.619,66,0.329,83,0.817,84,0.019,85,0.019,88,0.677,90,0.458,94,1.094,101,0.616,107,0.413,118,0.677,121,0.559,137,1.216,140,0.743,159,0.677,161,1.635,162,2.456,165,1.363,169,1.12,173,1.226,184,2.787,191,1.547,192,0.99,194,1.826,232,0.817,234,1.485,258,2.348,286,1.793,287,1.793,288,2.787,289,1.793,290,1.793,306,1.226,320,0.898,327,2.023,329,0.898,334,1.348,335,1.348,343,2.692,344,1.793,348,2.322,349,0.99,357,1.485,358,1.826,359,1.094,361,1.547,393,1.216,397,1.642,398,1.216,399,1.971,445,1.826,458,1.793,490,1.793,497,4.306,500,2.843,513,1.793,532,2.046,537,3.32,539,1.793,545,2.692,546,1.793,551,3.848,586,0.99,588,1.826,591,2.322,603,2.692,606,1.793,639,2.692,640,1.547,697,2.167,698,2.167,699,3.253,700,2.167,701,4.339,702,3.253,703,2.167,704,2.167,705,4.877,706,5.894,707,3.904,708,5.747,709,5.993,710,6.205,711,3.904,712,5.209,713,2.167,714,2.167,715,2.167,716,2.167,717,5.328,718,2.167,719,2.167,720,6.197,721,2.167,722,2.167,723,2.167,724,2.167,725,3.253,726,2.167,727,2.167,728,2.167,729,2.167,730,2.692,731,2.167,732,2.167,733,2.167,734,4.65,735,2.167,736,2.167,737,2.167,738,2.167,739,2.167,740,4.883,741,2.167,742,4.339,743,3.904,744,2.167,745,2.167,746,3.253,747,3.848,748,2.167,749,2.167,750,3.904,751,2.167,752,2.167,753,2.167,754,2.167,755,1.793,756,2.167,757,2.167,758,3.615,759,2.167,760,2.167,761,2.167,762,2.167,763,3.253,764,2.167,765,4.339,766,3.231,767,3.253,768,2.167,769,2.167,770,3.253,771,2.167,772,2.167,773,2.167,774,2.167,775,2.167,776,2.167,777,4.339,778,3.848,779,2.167,780,2.167,781,1.793,782,2.167,783,2.167,784,3.253,785,2.692,786,2.167,787,5.894,788,2.167,789,2.167,790,2.167,791,2.167,792,2.167,793,2.167,794,2.167,795,2.167,796,2.167,797,2.167,798,2.167,799,2.167,800,2.167,801,2.167,802,4.339,803,2.167,804,1.793,805,2.167,806,2.167,807,2.167,808,2.167,809,2.167,810,1.793,811,2.167,812,2.167,813,2.167,814,2.167,815,2.167,816,2.167,817,2.167,818,2.167,819,2.167,820,2.167,821,2.167,822,2.167,823,1.793,824,2.167,825,1.793,826,1.363,827,2.167,828,3.253,829,2.167,830,2.167,831,2.167,832,2.167,833,2.167,834,2.167,835,5.064,836,2.167,837,2.167,838,3.253,839,2.167,840,2.167,841,2.167,842,2.167,843,2.167,844,3.253,845,2.167,846,2.167,847,2.167,848,2.167,849,3.253,850,2.167,851,2.167,852,2.167,853,2.167,854,2.167,855,2.167,856,2.167,857,2.167,858,2.167,859,2.167,860,2.167,861,2.167,862,1.793,863,2.167,864,2.167,865,2.167,866,3.253,867,2.167,868,2.167,869,2.167,870,2.167,871,2.167,872,3.253,873,2.167,874,2.167,875,2.167,876,2.167,877,3.253,878,2.167,879,2.167,880,2.167,881,3.904,882,2.167,883,2.167,884,2.167,885,2.167,886,2.167,887,4.339,888,3.253,889,2.167,890,2.167,891,2.167,892,2.167,893,1.793,894,2.167,895,2.167,896,2.167,897,2.167,898,2.167,899,2.167,900,2.167,901,2.167,902,2.167,903,2.167,904,3.904,905,2.167,906,2.167,907,2.167,908,2.167,909,2.167,910,2.167,911,2.167,912,3.253,913,2.167,914,2.167,915,2.167,916,2.167,917,3.253,918,1.793,919,2.167,920,2.167,921,2.167,922,2.167,923,3.253,924,1.793,925,2.167,926,2.167,927,2.167,928,2.167,929,2.167,930,3.253,931,2.167,932,2.167,933,4.339,934,2.167,935,2.167,936,2.167,937,2.167,938,2.167,939,2.167,940,2.167,941,2.167,942,2.167,943,3.231,944,2.167,945,2.167,946,2.167,947,2.167,948,3.253,949,2.167,950,2.167,951,2.692,952,2.167,953,2.167,954,2.167,955,2.167,956,2.167,957,2.167,958,2.167,959,2.167,960,2.167,961,1.793,962,2.167,963,2.167,964,2.167,965,2.167,966,2.167,967,2.167,968,2.167,969,2.167,970,2.167,971,2.167,972,2.167,973,2.167,974,2.167,975,2.167,976,2.167,977,3.253,978,2.167]],["title/dependencies.html",[588,2.09,979,2.606]],["body/dependencies.html",[33,0.037,59,1.358,61,0.815,84,0.032,85,0.032,135,3.955,180,1.98,329,1.98,381,2.182,588,3.095,758,3.412,980,4.779,981,4.779,982,5.973,983,4.779]],["title/miscellaneous/functions.html",[101,1.058,984,1.316]],["body/miscellaneous/functions.html",[6,0.632,7,0.466,8,1.439,16,0.305,32,0.628,33,0.037,34,0.628,35,0.383,36,0.731,46,1.223,84,0.027,85,0.027,89,1.581,90,1.296,101,1.451,113,2.545,136,2.95,137,2.001,169,1.318,284,1.628,320,1.909,327,1.477,334,1.477,335,1.909,383,2.587,384,2.327,385,2.587,386,2.587,387,2.587,399,2.726,444,2.001,447,2.001,471,4.226,486,2.95,488,2.95,984,1.8,985,5.106,986,4.626,987,4.608,988,3.813,989,4.886,990,3.813,991,3.813,992,3.813,993,3.813,994,3.813,995,5.106,996,4.608,997,4.608,998,3.29,999,4.608,1000,2.95,1001,3.646,1002,4.608,1003,5.106,1004,2.95,1005,2.95,1006,3.564,1007,3.564,1008,4.608,1009,3.564,1010,3.564,1011,2.95,1012,3.564,1013,5.726,1014,3.564,1015,3.564,1016,3.564,1017,3.564,1018,3.564,1019,2.545,1020,3.564,1021,4.608,1022,3.564,1023,3.564,1024,4.608]],["title/index.html",[16,0.223,694,1.861,695,1.861]],["body/index.html",[3,0.434,6,0.663,32,0.477,33,0.036,57,0.663,59,1.053,61,0.632,62,0.318,67,0.318,84,0.028,85,0.028,107,0.706,118,1.158,159,1.158,162,3.56,165,3.272,194,2.081,258,2.766,348,2.646,349,1.693,428,2.155,441,2.081,500,3.075,532,2.973,536,3.067,537,4.04,538,3.067,548,3.91,586,1.693,587,2.627,590,3.374,608,3.91,631,2.646,634,3.067,640,2.646,655,4.305,659,3.067,660,4.533,730,4.305,747,4.305,755,3.067,758,2.646,778,4.865,781,3.067,785,4.305,804,3.067,810,3.067,823,4.533,826,2.973,862,3.067,924,3.067,951,3.067,961,4.305,1025,5.202,1026,4.725,1027,3.707,1028,3.067,1029,4.725,1030,4.725,1031,4.725,1032,3.707,1033,3.707,1034,3.707,1035,3.707,1036,5.202,1037,3.707,1038,3.707,1039,4.725,1040,3.707,1041,3.707,1042,4.725,1043,3.707,1044,3.707,1045,3.707,1046,3.707,1047,3.707,1048,3.707,1049,3.707,1050,3.707,1051,3.707,1052,3.707,1053,3.707,1054,3.707,1055,3.707,1056,3.707,1057,3.707,1058,3.707,1059,4.725,1060,4.725,1061,5.478,1062,3.707,1063,3.707,1064,3.707,1065,4.725,1066,4.725,1067,3.707,1068,5.202,1069,3.707,1070,3.707,1071,3.707,1072,3.707,1073,3.707,1074,3.707,1075,3.707,1076,3.707,1077,3.707,1078,3.707,1079,3.707,1080,3.707,1081,3.067,1082,3.707,1083,3.707,1084,3.707,1085,3.067]],["title/license.html",[694,1.861,695,1.861,826,1.64]],["body/license.html",[4,0.432,12,0.649,33,0.03,40,1.611,84,0.03,85,0.03,90,0.904,191,3.052,380,2.158,500,2.898,600,3.052,631,3.96,646,3.537,705,3.537,825,4.767,826,2.689,918,4.272,1028,4.59,1081,3.537,1085,3.537,1086,5.547,1087,4.275,1088,4.275,1089,4.275,1090,5.162,1091,4.275,1092,4.275,1093,4.275,1094,4.275,1095,5.162,1096,4.275,1097,6.157,1098,4.275,1099,5.162,1100,4.275,1101,4.275,1102,4.275,1103,4.275,1104,4.275,1105,4.275,1106,4.275,1107,4.275,1108,4.275,1109,4.275,1110,4.275,1111,4.275,1112,4.275,1113,5.162,1114,5.162,1115,4.275,1116,4.275,1117,5.162,1118,4.275,1119,4.275,1120,4.275,1121,4.275,1122,4.275,1123,4.275,1124,4.275,1125,4.275,1126,4.275,1127,4.275,1128,4.275,1129,4.275,1130,4.275,1131,4.275,1132,4.275,1133,4.275,1134,4.275,1135,4.275,1136,4.275]],["title/modules.html",[586,1.92]],["body/modules.html",[33,0.033,84,0.033,85,0.033,397,2.479,586,2.242,587,2.479,766,4.063,1137,4.91,1138,4.91]],["title/overview.html",[1139,3.479]],["body/overview.html",[0,0.118,1,3.336,12,0.591,33,0.037,62,0.334,67,0.334,84,0.029,85,0.029,86,3.336,112,3.001,132,1.613,192,2.714,207,3.001,274,3.336,395,1.467,470,3.001,484,3.001,586,2.225,587,3.228,588,2.185,589,3.221,590,2.779,591,2.779,592,3.221,593,3.221,594,3.221,595,3.336,596,3.001,597,3.001,598,4.033,599,3.221,600,2.779,687,2.779,893,3.221,943,4.033,1139,3.221,1140,3.893]],["title/miscellaneous/typealiases.html",[984,1.316,1141,3.723]],["body/miscellaneous/typealiases.html",[16,0.373,33,0.035,35,0.309,84,0.031,85,0.031,89,1.571,90,1.287,101,1.685,157,2.742,169,1.444,171,1.747,284,1.99,285,4.629,292,4.629,327,1.806,330,1.495,331,4.798,332,3.112,334,1.806,335,1.806,356,2.447,364,3.14,367,3.14,371,3.14,382,3.14,388,3.14,391,2.824,668,3.729,984,2.201,998,3.729,1001,3.112,1019,3.112,1142,4.359,1143,5.929,1144,3.607]],["title/miscellaneous/variables.html",[984,1.316,1145,3.081]],["body/miscellaneous/variables.html",[0,0.144,1,2.662,5,2.54,6,0.698,7,0.635,8,1.861,12,0.833,13,3.924,16,0.263,33,0.038,35,0.423,58,1.714,60,1.883,64,1.883,65,1.045,66,0.852,84,0.025,85,0.025,86,1.723,89,1.512,90,1.239,98,1.186,107,0.795,112,2.394,113,2.191,114,3.924,120,0.977,157,2.625,158,2.54,159,1.303,160,3.453,161,1.157,171,1.303,173,2.318,183,3.385,184,2.191,192,1.906,193,2.191,194,2.343,195,3.385,207,2.107,216,2.856,274,2.662,275,2.54,276,3.924,284,1.402,321,3.924,322,3.924,323,3.924,324,3.924,325,3.924,326,3.924,328,3.924,330,1.053,470,1.55,482,2.983,483,2.983,484,1.55,587,1.55,595,2.662,596,2.394,597,1.55,601,3.453,624,3.924,663,2.54,664,3.924,668,3.385,674,2.54,675,2.54,676,2.191,677,3.385,984,1.55,986,2.54,988,2.54,989,4.542,990,2.54,991,2.54,992,2.54,993,2.54,994,2.54,998,2.191,1000,3.453,1001,2.191,1004,2.54,1005,2.54,1011,2.54,1019,2.191,1144,3.453,1145,2.54,1146,3.07,1147,4.173,1148,3.07,1149,4.741,1150,3.07,1151,3.07,1152,3.07,1153,3.07,1154,4.173,1155,3.07]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":221,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["0.0.2",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":687,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{}}}],["1.1.1",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1140,"title":{},"body":{"overview.html":{}}}],["12",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["15ce1e",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":943,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2018",{"_index":705,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":893,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["35a48b",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["3ed6e3",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["51ca66",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["6148a68",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":70,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["_registeronchange(fn",{"_index":411,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_setparent(par",{"_index":457,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_updatevalu",{"_index":360,"title":{},"body":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{}}}],["_updatevalue(opt",{"_index":377,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["_valuechang",{"_index":403,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["a0de621",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":1112,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":161,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["accessor.direct",{"_index":610,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["accessor.directive.t",{"_index":8,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["accessor.directive.ts:106",{"_index":690,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["accessor.directive.ts:111",{"_index":265,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:118",{"_index":693,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["accessor.directive.ts:123",{"_index":268,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:124",{"_index":692,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["accessor.directive.ts:129",{"_index":267,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:132",{"_index":691,"title":{},"body":{"directives/SelectOptionDirective.html":{}}}],["accessor.directive.ts:136",{"_index":266,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:142",{"_index":271,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:146",{"_index":273,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["accessor.directive.ts:20",{"_index":43,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:25",{"_index":38,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:26",{"_index":278,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:27",{"_index":31,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:28",{"_index":96,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:32",{"_index":56,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:33",{"_index":279,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:36",{"_index":45,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:37",{"_index":124,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":99,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:40",{"_index":50,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:41",{"_index":666,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:42",{"_index":104,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:43",{"_index":679,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:44",{"_index":53,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:45",{"_index":667,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:46",{"_index":100,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:47",{"_index":126,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:48",{"_index":200,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:50",{"_index":102,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:52",{"_index":122,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:53",{"_index":212,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:54",{"_index":103,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:61",{"_index":680,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:62",{"_index":131,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:65",{"_index":204,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:67",{"_index":128,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:69",{"_index":205,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:71",{"_index":129,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:73",{"_index":209,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:75",{"_index":130,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:77",{"_index":208,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:81",{"_index":681,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:83",{"_index":202,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:87",{"_index":211,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{}}}],["accessors.t",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors/accessor",{"_index":611,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1131,"title":{},"body":{"license.html":{}}}],["activatedrout",{"_index":166,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["ad",{"_index":497,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["adapt",{"_index":612,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["adapter.interfac",{"_index":182,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["adapter.interface.t",{"_index":668,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["adapter.interface.ts:23",{"_index":669,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["adapter.service.t",{"_index":160,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter.service.ts:16",{"_index":167,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:21",{"_index":177,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:25",{"_index":179,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter.service.ts:29",{"_index":172,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["adapter/default",{"_index":158,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["adapter/rout",{"_index":330,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":532,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add/index.t",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addcontrol(direct",{"_index":526,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["addmatchingvers",{"_index":985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimport",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addmoduletoimports(opt",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["afeae98",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["alia",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":1142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":951,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["alway",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1106,"title":{},"body":{"license.html":{}}}],["android",{"_index":138,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["angular'",{"_index":1056,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":61,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":59,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":180,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["angularvers",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anoth",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":640,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":961,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":1041,"title":{},"body":{"index.html":{}}}],["approach",{"_index":1027,"title":{},"body":{"index.html":{}}}],["argument",{"_index":39,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["aris",{"_index":1135,"title":{},"body":{"license.html":{}}}],["array",{"_index":235,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["array.from(this.optionmap.key",{"_index":249,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["array.from(this.options.entri",{"_index":224,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["array.isarray(valu",{"_index":231,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["array.isarray(valueaccessor",{"_index":648,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["assert",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":1098,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":1124,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["automat",{"_index":1038,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":862,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["b",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b19a81",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["badg",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["bb15442",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["becom",{"_index":1075,"title":{},"body":{"index.html":{}}}],["befor",{"_index":542,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["benefit",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["blur",{"_index":24,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["bookmark",{"_index":1065,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["booleanparam",{"_index":286,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(opt",{"_index":291,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":591,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{}}}],["box",{"_index":1072,"title":{},"body":{"index.html":{}}}],["brows",{"_index":1138,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":766,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["buffer",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["builder.service.t",{"_index":285,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["builder.service.ts:28",{"_index":305,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:45",{"_index":312,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:46",{"_index":315,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:47",{"_index":314,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:54",{"_index":319,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:55",{"_index":318,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:56",{"_index":317,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:68",{"_index":308,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:69",{"_index":310,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:70",{"_index":309,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:82",{"_index":297,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:83",{"_index":296,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:84",{"_index":293,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:96",{"_index":302,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:97",{"_index":301,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:98",{"_index":300,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["built",{"_index":658,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["builtinaccessor",{"_index":650,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["button",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1089,"title":{},"body":{"license.html":{}}}],["c",{"_index":1087,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["can't",{"_index":637,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["care",{"_index":1055,"title":{},"body":{"index.html":{}}}],["case",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["chanc",{"_index":540,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chang",{"_index":25,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["change(ev",{"_index":41,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["changefn(this.valu",{"_index":422,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changefn(valu",{"_index":452,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changefunct",{"_index":405,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["changelog",{"_index":696,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":1094,"title":{},"body":{"license.html":{}}}],["check",{"_index":81,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirect",{"_index":1,"title":{"directives/CheckboxControlValueAccessorDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["chmod",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["choos",{"_index":643,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["claim",{"_index":1127,"title":{},"body":{"license.html":{}}}],["class",{"_index":67,"title":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["close",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["cluster_queryparammodul",{"_index":592,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_declar",{"_index":593,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["cluster_queryparammodule_export",{"_index":594,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["collect",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["combinedparam",{"_index":572,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["combinewith",{"_index":358,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["command",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":1082,"title":{},"body":{"index.html":{}}}],["compar",{"_index":382,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":335,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["compon",{"_index":539,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["compos",{"_index":142,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend",{"_index":116,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionend(ev",{"_index":125,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["compositionstart",{"_index":117,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["concatmap",{"_index":478,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["concatmap(param",{"_index":565,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["condit",{"_index":1111,"title":{},"body":{"license.html":{}}}],["config",{"_index":606,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeropt",{"_index":615,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configur",{"_index":627,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["connect",{"_index":1136,"title":{},"body":{"license.html":{}}}],["consid",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["consist",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["consol",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":63,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(control",{"_index":459,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(opt",{"_index":362,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["constructor(par",{"_index":264,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(platformid",{"_index":119,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["constructor(priv",{"_index":79,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["constructor(render",{"_index":27,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["constructor(rout",{"_index":164,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["constructor(routeradapt",{"_index":472,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["context",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contract",{"_index":1132,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":1051,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1052,"title":{},"body":{"index.html":{}}}],["control",{"_index":6,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control._registeronchange((newmodel",{"_index":506,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control._setparent(thi",{"_index":409,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["control._updatevalu",{"_index":519,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.combinewith(control.valu",{"_index":574,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.deserialize(valu",{"_index":581,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.multi",{"_index":487,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.nam",{"_index":575,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.serialize(model",{"_index":578,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["control.setvalue(valu",{"_index":419,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["control.valu",{"_index":518,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["controlconfig",{"_index":353,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["controlnam",{"_index":339,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["controlvalueaccessor",{"_index":10,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["controlvalueaccessordirect",{"_index":86,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["convent",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["copi",{"_index":825,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":1086,"title":{},"body":{"license.html":{}}}],["core",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":545,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["creat",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["createbooleandeseri",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleandeserializer(defaultvalu",{"_index":1012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanseri",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbooleanserializer(defaultvalu",{"_index":1014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createcontrol(controlnam",{"_index":352,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["createemptyondeseri",{"_index":386,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyondeserializer(deseri",{"_index":447,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyonseri",{"_index":387,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createemptyonserializer(seri",{"_index":444,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["createnumberdeseri",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberdeserializer(defaultvalu",{"_index":1015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberseri",{"_index":992,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createnumberserializer(defaultvalu",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringdeseri",{"_index":993,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringdeserializer(defaultvalu",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringseri",{"_index":994,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createstringserializer(defaultvalu",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":655,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["custom",{"_index":659,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["customaccessor",{"_index":651,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customparam",{"_index":287,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["customparam(opt",{"_index":298,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["d+)/.test(navigator.useragent.tolowercas",{"_index":139,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["d1d0a1b",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":1128,"title":{},"body":{"license.html":{}}}],["data",{"_index":1032,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1099,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":552,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueu",{"_index":553,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.next(newmodel",{"_index":561,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.pip",{"_index":554,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncetim",{"_index":359,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["debouncetime(control.debouncetim",{"_index":556,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dec2d0f",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":590,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":173,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deseri",{"_index":321,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_seri",{"_index":322,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_deseri",{"_index":323,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_number_seri",{"_index":324,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_deseri",{"_index":325,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["default_string_seri",{"_index":326,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["defaultaccessor",{"_index":649,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["defaultcontrolvalueaccessordirect",{"_index":112,"title":{"directives/DefaultControlValueAccessorDirective.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["defaultrouteradapt",{"_index":156,"title":{"injectables/DefaultRouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{}}}],["defaultrouteradapteropt",{"_index":183,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["defaultvalu",{"_index":1013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defin",{"_index":30,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["demo",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["demonstr",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":588,"title":{"dependencies.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["deregisteropt",{"_index":197,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["deregisteroption(id",{"_index":201,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["descript",{"_index":88,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{}}}],["deseri",{"_index":334,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserialize(control",{"_index":579,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["design",{"_index":1033,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":491,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["develop",{"_index":1049,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":1059,"title":{},"body":{"index.html":{}}}],["dir.nam",{"_index":515,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["direct",{"_index":0,"title":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directive.nam",{"_index":530,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor",{"_index":533,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.registeronchange((newmodel",{"_index":560,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(control.valu",{"_index":549,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(newmodel",{"_index":517,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directli",{"_index":638,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["disabl",{"_index":83,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["disabledchang",{"_index":93,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribut",{"_index":1104,"title":{},"body":{"license.html":{}}}],["doc",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":90,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["domain",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":1073,"title":{},"body":{"index.html":{}}}],["due",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":427,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["earli",{"_index":1048,"title":{},"body":{"index.html":{}}}],["easi",{"_index":1026,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1070,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["elementref",{"_index":29,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["emit",{"_index":520,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["emitev",{"_index":416,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["emptyon",{"_index":399,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enough",{"_index":645,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["enqueuenavigation(param",{"_index":568,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ensur",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["entir",{"_index":522,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error",{"_index":445,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["error(`combinewith",{"_index":438,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`comparewith",{"_index":435,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`could",{"_index":528,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`deseri",{"_index":433,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`emptyon",{"_index":440,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`mor",{"_index":656,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`no",{"_index":534,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`pleas",{"_index":426,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`provid",{"_index":233,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["error(`queryparamnam",{"_index":630,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`seri",{"_index":430,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["error(`y",{"_index":496,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["event",{"_index":40,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{}}}],["event.target",{"_index":281,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["eventemitt",{"_index":95,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exampl",{"_index":755,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["execut",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["explan",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["explicitli",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":62,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["exporta",{"_index":105,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["express",{"_index":1118,"title":{},"body":{"license.html":{}}}],["extend",{"_index":392,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["extra",{"_index":170,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}}}],["f4c3365",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":143,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["fce4ec2",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["featur",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{}}}],["filter",{"_index":1031,"title":{},"body":{"index.html":{}}}],["filter(([id",{"_index":225,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["filter(id",{"_index":239,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["find",{"_index":529,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["finish",{"_index":401,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["first",{"_index":343,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fit",{"_index":1121,"title":{},"body":{"license.html":{}}}],["fix",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":46,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{}}}],["fnchang",{"_index":69,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["fntouch",{"_index":71,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["follow",{"_index":1110,"title":{},"body":{"license.html":{}}}],["forget",{"_index":531,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":660,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["forroot",{"_index":603,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["forroot(config",{"_index":604,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["forwardref",{"_index":60,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":535,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1093,"title":{},"body":{"license.html":{}}}],["function",{"_index":101,"title":{"miscellaneous/functions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["function(opt",{"_index":1010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["furnish",{"_index":1109,"title":{},"body":{"license.html":{}}}],["gener",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":694,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["get(controlnam",{"_index":413,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["getangularmajorvers",{"_index":995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingvers",{"_index":996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmatchingversion(angularvers",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getoptionid(valu",{"_index":248,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["getparamsformodel(control",{"_index":570,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["getqueryparammap",{"_index":178,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getselect",{"_index":270,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["geturl",{"_index":176,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["getvalu",{"_index":468,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["globalrouteropt",{"_index":473,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["good",{"_index":644,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["grant",{"_index":1092,"title":{},"body":{"license.html":{}}}],["green",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":288,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(control",{"_index":303,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.direct",{"_index":609,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.directive.t",{"_index":471,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["group.directive.ts:30",{"_index":475,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:37",{"_index":474,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:46",{"_index":477,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:94",{"_index":476,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupopt",{"_index":582,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["guid",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["guidelin",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["hasarraymodel",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasarraymodel(control",{"_index":488,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["hash",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["have",{"_index":1078,"title":{},"body":{"index.html":{}}}],["haven't",{"_index":498,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["headlin",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":544,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["herebi",{"_index":1091,"title":{},"body":{"license.html":{}}}],["histori",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["holder",{"_index":1125,"title":{},"body":{"license.html":{}}}],["hope",{"_index":642,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["host",{"_index":213,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlisten",{"_index":23,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlistener('blur",{"_index":76,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlistener('chang",{"_index":72,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["hostlistener('compositionend",{"_index":150,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('compositionstart",{"_index":148,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["hostlistener('input",{"_index":144,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmlinputelement).check",{"_index":75,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["htmlinputelement).valu",{"_index":147,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["htmloptionelement).select",{"_index":262,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["htmloptionelement).valu",{"_index":683,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#l186",{"_index":636,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["i.",{"_index":1042,"title":{},"body":{"index.html":{}}}],["icon",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":203,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["idcount",{"_index":220,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["implement",{"_index":9,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["impli",{"_index":1119,"title":{},"body":{"license.html":{}}}],["import",{"_index":57,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["imposs",{"_index":1064,"title":{},"body":{"index.html":{}}}],["improv",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":1028,"title":{},"body":{"index.html":{},"license.html":{}}}],["independ",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":393,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["inform",{"_index":1030,"title":{},"body":{"index.html":{}}}],["ingo",{"_index":1088,"title":{},"body":{"license.html":{}}}],["initi",{"_index":513,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["inject",{"_index":132,"title":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{}},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["inject(ng_value_accessor",{"_index":626,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inject(ngqp_router_adapt",{"_index":492,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(ngqp_router_opt",{"_index":493,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(platform_id",{"_index":152,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["injectiontoken",{"_index":671,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["injectiontoken('ngqp_router_adapt",{"_index":674,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngqp_router_opt",{"_index":675,"title":{},"body":{"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":118,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["input('queryparamgroup",{"_index":489,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamnam",{"_index":625,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["input('valu",{"_index":257,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["input(ev",{"_index":127,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["input:not([type=checkbox]):not([type=radio])[queryparamname],textarea[queryparamnam",{"_index":115,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["input[type=checkbox][queryparamnam",{"_index":15,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{}}}],["input[type=number][queryparamnam",{"_index":277,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{}}}],["input[type=range][queryparamnam",{"_index":665,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{}}}],["instal",{"_index":785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":354,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["instead",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["instruct",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":395,"title":{"interfaces/QueryParamControlOpts.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"overview.html":{}}}],["intern",{"_index":410,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["intuit",{"_index":1034,"title":{},"body":{"index.html":{}}}],["isandroid",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isandroid(navig",{"_index":136,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{}}}],["isandroid(window.navig",{"_index":154,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isdis",{"_index":54,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["isfunct",{"_index":383,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["isfunction(combinewith",{"_index":437,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(comparewith",{"_index":434,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(deseri",{"_index":432,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["isfunction(obj",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfunction(seri",{"_index":429,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismiss",{"_index":384,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["ismissing(combinewith",{"_index":436,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(control",{"_index":418,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(control.combinewith",{"_index":573,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(control.debouncetim",{"_index":555,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(direct",{"_index":516,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(emptyon",{"_index":439,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(nam",{"_index":425,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismissing(obj",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismissing(this.par",{"_index":454,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ismulticontrol",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismulticontrol(control",{"_index":486,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":639,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["isplatformbrows",{"_index":134,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["isplatformbrowser(this.platformid",{"_index":153,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["kind",{"_index":1081,"title":{},"body":{"index.html":{},"license.html":{}}}],["know",{"_index":1053,"title":{},"body":{"index.html":{}}}],["land",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":589,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["let'",{"_index":641,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["liabil",{"_index":1129,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1126,"title":{},"body":{"license.html":{}}}],["licens",{"_index":826,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limit",{"_index":918,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":348,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{},"index.html":{}}}],["listen",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["liter",{"_index":304,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["load",{"_index":1067,"title":{},"body":{"index.html":{}}}],["locat",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["loose_identity_compar",{"_index":328,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/variables.html":{}}}],["lose",{"_index":1080,"title":{},"body":{"index.html":{}}}],["make",{"_index":537,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["mandatori",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1069,"title":{},"body":{"index.html":{}}}],["map",{"_index":218,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["map(([id",{"_index":227,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["map((newmodel",{"_index":557,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(control.seri",{"_index":577,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(valu",{"_index":237,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["mappedcontrol",{"_index":338,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["match",{"_index":85,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mayb",{"_index":342,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["mention",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["merchant",{"_index":1120,"title":{},"body":{"license.html":{}}}],["merg",{"_index":191,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["miscellan",{"_index":984,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1085,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":398,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["model",{"_index":320,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["modifi",{"_index":1102,"title":{},"body":{"license.html":{}}}],["modul",{"_index":586,"title":{"modules/QueryParamModule.html":{},"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":607,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["more",{"_index":1054,"title":{},"body":{"index.html":{}}}],["move",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["multi",{"_index":65,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["multiselectcontrolvalueaccessordirect",{"_index":192,"title":{"directives/MultiSelectControlValueAccessorDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multiselectoptiondirect",{"_index":207,"title":{"directives/MultiSelectOptionDirective.html":{}},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.direct",{"_index":485,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["name.directive.t",{"_index":616,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:16",{"_index":620,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:19",{"_index":619,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:32",{"_index":621,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["navig",{"_index":137,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["navigate(queryparam",{"_index":168,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["navigationextra",{"_index":672,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["need",{"_index":546,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["new",{"_index":107,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":242,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["newmodel",{"_index":508,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["newvalu",{"_index":390,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ng",{"_index":781,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":58,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":608,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":255,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngoninit",{"_index":254,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["ngqp",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_built_in_accessor",{"_index":624,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_built_in_accessors.some(curr",{"_index":654,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_checkbox_value_accessor",{"_index":13,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_default_value_accessor",{"_index":114,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_module_nam",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngqp_multi_select_value_accessor",{"_index":195,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_number_value_accessor",{"_index":276,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_range_value_accessor",{"_index":664,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_adapt",{"_index":482,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_router_opt",{"_index":483,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/variables.html":{}}}],["ngqp_select_value_accessor",{"_index":677,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":234,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["noninfring",{"_index":1123,"title":{},"body":{"license.html":{}}}],["normal",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["normalizedvalu",{"_index":155,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{}}}],["notabl",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":400,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["notic",{"_index":1113,"title":{},"body":{"license.html":{}}}],["notifychang",{"_index":91,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(valu",{"_index":97,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":804,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":121,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["number",{"_index":280,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["numbercontrolvalueaccessor",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirect",{"_index":274,"title":{"directives/NumberControlValueAccessorDirective.html":{}},"body":{"directives/NumberControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numericparam",{"_index":289,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numericparam(opt",{"_index":307,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["obj",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.keys(controls).foreach(controlnam",{"_index":340,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object.keys(this.controls).foreach(controlnam",{"_index":414,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["object.keys(this.queryparamgroup.controls).foreach(controlnam",{"_index":505,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["object.keys(value).foreach(controlnam",{"_index":417,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["object.values(this.controls).foreach(control",{"_index":408,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["observ",{"_index":374,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{}}}],["obtain",{"_index":1096,"title":{},"body":{"license.html":{}}}],["on",{"_index":657,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["onblur",{"_index":77,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onc",{"_index":521,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["onchang",{"_index":222,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["onchange(ev",{"_index":682,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["onchangefunct",{"_index":388,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["oncompositionend(ev",{"_index":151,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["oncompositionstart",{"_index":149,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["ondestroy",{"_index":214,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninit",{"_index":215,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["oninput(ev",{"_index":73,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["onlyself",{"_index":453,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["ontouch",{"_index":230,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["opt",{"_index":294,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["option",{"_index":36,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["option.select",{"_index":226,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["optionmap",{"_index":219,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["opts.emitev",{"_index":420,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["opts.multi",{"_index":424,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["opts.onlyself",{"_index":455,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["organ",{"_index":1058,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":1134,"title":{},"body":{"license.html":{}}}],["out",{"_index":600,"title":{},"body":{"modules/QueryParamModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":92,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchang",{"_index":108,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('valuechang",{"_index":106,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outsid",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1139,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriteparti",{"_index":331,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["packag",{"_index":979,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":747,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pagin",{"_index":1029,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["param(opt",{"_index":311,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.module.t",{"_index":601,"title":{},"body":{"modules/QueryParamModule.html":{},"miscellaneous/variables.html":{}}}],["param.module.ts:56",{"_index":605,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["paramcombin",{"_index":364,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeseri",{"_index":367,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["paramet",{"_index":32,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parammap",{"_index":673,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["paramseri",{"_index":371,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":250,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["parsefloat(valu",{"_index":282,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{}}}],["partial",{"_index":333,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["particular",{"_index":1122,"title":{},"body":{"license.html":{}}}],["patchvalu",{"_index":458,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(valu",{"_index":415,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["path",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":1090,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1108,"title":{},"body":{"license.html":{}}}],["person",{"_index":1095,"title":{},"body":{"license.html":{}}}],["phrase",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":332,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["platform_id",{"_index":133,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["platformid",{"_index":123,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["pleas",{"_index":536,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["portion",{"_index":1116,"title":{},"body":{"license.html":{}}}],["previousvalu",{"_index":389,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["privat",{"_index":68,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["progress",{"_index":1046,"title":{},"body":{"index.html":{}}}],["project",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":175,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["proper",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":357,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"changelog.html":{}}}],["provid",{"_index":12,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":336,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["proxi",{"_index":550,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["public",{"_index":18,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1103,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":646,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["push",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["queri",{"_index":428,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["queryparam",{"_index":174,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparambuild",{"_index":283,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamcontrol",{"_index":295,"title":{"classes/QueryParamControl.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparamcontrol(opt",{"_index":351,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamcontrolopt",{"_index":299,"title":{"interfaces/QueryParamControlOpts.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparamcontroloptsinput",{"_index":292,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamgroup",{"_index":306,"title":{"classes/QueryParamGroup.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamgroup(mappedcontrol",{"_index":347,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirect",{"_index":470,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamgroupvalu",{"_index":396,"title":{"interfaces/QueryParamGroupValue.html":{}},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["queryparammap",{"_index":163,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{}}}],["queryparammap.get(control.nam",{"_index":512,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammap.getall(control.nam",{"_index":511,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammodul",{"_index":587,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamnam",{"_index":617,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["queryparamnamedirect",{"_index":484,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["queryparamshandl",{"_index":190,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["queue",{"_index":490,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["rangecontrolvalueaccessor",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirect",{"_index":595,"title":{"directives/RangeControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/RangeControlValueAccessorDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":541,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["readm",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["readonli",{"_index":140,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{}}}],["receiv",{"_index":431,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["recurs",{"_index":402,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["redirect",{"_index":313,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["reflect",{"_index":1063,"title":{},"body":{"index.html":{}}}],["regist",{"_index":543,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["registeronchang",{"_index":19,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registeronchange(fn",{"_index":44,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["registerontouch",{"_index":20,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":49,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["registeropt",{"_index":198,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["registeroption(opt",{"_index":206,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["registri",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["relativeto",{"_index":188,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["releas",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":1077,"title":{},"body":{"index.html":{}}}],["remov",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":37,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["renderer2",{"_index":28,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["replac",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":184,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["resembl",{"_index":634,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["reset",{"_index":599,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}],["respons",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1100,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["right",{"_index":1101,"title":{},"body":{"license.html":{}}}],["root",{"_index":337,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["rout",{"_index":165,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["router",{"_index":159,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routeradapt",{"_index":181,"title":{"interfaces/RouterAdapter.html":{}},"body":{"injectables/DefaultRouterAdapter.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/RouterAdapter.html":{}}}],["routeradapteropt",{"_index":171,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["routermodul",{"_index":1043,"title":{},"body":{"index.html":{}}}],["routeropt",{"_index":404,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{}}}],["run",{"_index":1036,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":381,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"interfaces/RouterAdapter.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":481,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["same",{"_index":346,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["sanitize=tru",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1040,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1083,"title":{},"body":{"index.html":{}}}],["schemat",{"_index":758,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["schematics/.../index.t",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["schematics/ng",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1084,"title":{},"body":{"index.html":{}}}],["section",{"_index":1045,"title":{},"body":{"index.html":{}}}],["see",{"_index":349,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":194,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["select:not([multiple])[queryparamnam",{"_index":678,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["select[multipl",{"_index":236,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["select[multiple][queryparamnam",{"_index":196,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["selectcontrolvalueaccessor",{"_index":635,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["selectcontrolvalueaccessordirect",{"_index":596,"title":{"directives/SelectControlValueAccessorDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selected(select",{"_index":263,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["selectedid",{"_index":217,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectedindex",{"_index":686,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectoptiondirect",{"_index":597,"title":{"directives/SelectOptionDirective.html":{}},"body":{"modules/QueryParamModule.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["selectvalueaccessor(valueaccessor",{"_index":647,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":622,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1107,"title":{},"body":{"license.html":{}}}],["serial",{"_index":327,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serialize(control",{"_index":576,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["set",{"_index":258,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"index.html":{}}}],["setdisabledst",{"_index":21,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdis",{"_index":51,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["setselected(select",{"_index":272,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{}}}],["setupcontrol",{"_index":661,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["setupnavigationqueu",{"_index":563,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["setvalu",{"_index":361,"title":{},"body":{"classes/QueryParamControl.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(valu",{"_index":269,"title":{},"body":{"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectOptionDirective.html":{}}}],["shall",{"_index":1114,"title":{},"body":{"license.html":{}}}],["share",{"_index":1066,"title":{},"body":{"index.html":{}}}],["shebang",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["simpli",{"_index":1035,"title":{},"body":{"index.html":{}}}],["singl",{"_index":441,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"index.html":{}}}],["skeleton",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["skipself",{"_index":623,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["softwar",{"_index":1097,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"index.html":{}}}],["specif",{"_index":1062,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":632,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["src/.../checkbox",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../default",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../model.t",{"_index":1143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../multi",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngqp",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../number",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../queri",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rang",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router",{"_index":1144,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../select",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.t",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/checkbox",{"_index":5,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/default",{"_index":113,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/multi",{"_index":193,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/ngqp",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/accessors/numb",{"_index":275,"title":{},"body":{"directives/NumberControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/rang",{"_index":663,"title":{},"body":{"directives/RangeControlValueAccessorDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/accessors/select",{"_index":676,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["src/lib/control",{"_index":87,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/model.t",{"_index":356,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/model.ts:101",{"_index":466,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:119",{"_index":467,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:132",{"_index":464,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:150",{"_index":376,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:153",{"_index":373,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:156",{"_index":370,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:159",{"_index":372,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:162",{"_index":368,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:165",{"_index":369,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:168",{"_index":366,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:171",{"_index":365,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:174",{"_index":363,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:23",{"_index":585,"title":{},"body":{"interfaces/QueryParamGroupValue.html":{}}}],["src/lib/model.ts:230",{"_index":379,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:241",{"_index":378,"title":{},"body":{"classes/QueryParamControl.html":{}}}],["src/lib/model.ts:57",{"_index":463,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:60",{"_index":461,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:63",{"_index":462,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:65",{"_index":460,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:86",{"_index":465,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:91",{"_index":469,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/queri",{"_index":284,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/rout",{"_index":157,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.t",{"_index":1011,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/util.t",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":1050,"title":{},"body":{"index.html":{}}}],["standard",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":695,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1061,"title":{},"body":{"index.html":{}}}],["static",{"_index":602,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["staticprovid",{"_index":216,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["still",{"_index":1047,"title":{},"body":{"index.html":{}}}],["string",{"_index":120,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["stringparam",{"_index":290,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(opt",{"_index":316,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["style",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":380,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"license.html":{}}}],["sublicens",{"_index":1105,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":567,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["subscribe(param",{"_index":559,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["substanti",{"_index":1115,"title":{},"body":{"license.html":{}}}],["success",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":1071,"title":{},"body":{"index.html":{}}}],["suppli",{"_index":499,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":397,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"modules.html":{}}}],["supportscomposit",{"_index":141,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["sure",{"_index":538,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["svg",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":547,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["synchron",{"_index":1025,"title":{},"body":{"index.html":{}}}],["system",{"_index":1057,"title":{},"body":{"index.html":{}}}],["t",{"_index":98,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["takeuntil",{"_index":479,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["takeuntil(this.destroy",{"_index":558,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["tap",{"_index":480,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["target",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["testrouteradapt",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navig",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["that'",{"_index":1037,"title":{},"body":{"index.html":{}}}],["this._valuechanges.asobserv",{"_index":375,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this._valuechanges.next(this.valu",{"_index":423,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":421,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.changefunctions.push(fn",{"_index":412,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.combinewith",{"_index":450,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.compos",{"_index":146,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.control",{"_index":406,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.createcontrol(controlnam",{"_index":341,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.debouncetim",{"_index":449,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.deseri",{"_index":446,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.deserialize(control",{"_index":510,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.complet",{"_index":525,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.next",{"_index":524,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.find(dir",{"_index":514,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.push(direct",{"_index":562,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.disabledchange.emit(isdis",{"_index":111,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.elementref.nativeel",{"_index":261,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.enqueuenavigation(param",{"_index":504,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.enqueuenavigation(this.getparamsformodel(control",{"_index":507,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.fnchang",{"_index":82,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.fnchange((event.target",{"_index":74,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.fnchange(this.valu",{"_index":685,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.fnchange(valu",{"_index":109,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.fntouch",{"_index":78,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.getoptionid(valu",{"_index":238,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.getparamsformodel(control",{"_index":503,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.globalrouteropt",{"_index":584,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.id",{"_index":252,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.idcounter++).tostr",{"_index":243,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.multi",{"_index":448,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.nam",{"_index":442,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.onchang",{"_index":247,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.optionmap.delete(id",{"_index":245,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.optionmap.get(id",{"_index":229,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.optionmap.get(this.selectedid",{"_index":684,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.optionmap.set(id",{"_index":246,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.options.foreach((opt",{"_index":240,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.options.set(newid",{"_index":244,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.par",{"_index":251,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.param",{"_index":355,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.parent._updatevalue(opt",{"_index":456,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.parent.addcontrol(thi",{"_index":662,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.parent.deregisteroption(this.id",{"_index":256,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.registeropt",{"_index":688,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.registeroption(thi",{"_index":253,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.parent.updateoptionvalue(this.id",{"_index":260,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.parent.writevalue(this.parent.valu",{"_index":689,"title":{},"body":{"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.queryparamgroup",{"_index":495,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._registeronchange((valu",{"_index":501,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._updatevalu",{"_index":523,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(controlnam",{"_index":502,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(directive.nam",{"_index":527,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.routeropt",{"_index":583,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.next(param",{"_index":569,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.pip",{"_index":564,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.renderer.setproperty(this.elementref.nativeel",{"_index":80,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.rout",{"_index":189,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.route.queryparammap",{"_index":186,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.navig",{"_index":187,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.router.url",{"_index":185,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{}}}],["this.routeradapter.navigate(param",{"_index":566,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.queryparammap.subscribe(queryparammap",{"_index":509,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeropt",{"_index":407,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.selectedid",{"_index":223,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.selectedids.includes(id",{"_index":241,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.selectedids.map(id",{"_index":228,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{}}}],["this.selectvalueaccessor(valueaccessor",{"_index":629,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.seri",{"_index":443,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["this.serialize(control",{"_index":571,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupcontrol",{"_index":633,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.setupnavigationqueu",{"_index":494,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.stringparam(opt",{"_index":350,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.supportscomposit",{"_index":145,"title":{},"body":{"directives/DefaultControlValueAccessorDirective.html":{}}}],["this.valu",{"_index":451,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["this.valueaccessor",{"_index":628,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.valuechange.emit(valu",{"_index":110,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["throw",{"_index":232,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["tick",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":89,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterAdapter.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1133,"title":{},"body":{"license.html":{}}}],["travi",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":66,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":1076,"title":{},"body":{"index.html":{}}}],["two",{"_index":345,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["type",{"_index":35,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"interfaces/RouterAdapter.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1141,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":394,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{}}}],["uievent",{"_index":42,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["undefin",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":1060,"title":{},"body":{"index.html":{}}}],["unnam",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unnecessari",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["unpack",{"_index":391,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/typealiases.html":{}}}],["up",{"_index":810,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updat",{"_index":551,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["updateoptionvalu",{"_index":199,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["updateoptionvalue(id",{"_index":210,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["url",{"_index":162,"title":{},"body":{"injectables/DefaultRouterAdapter.html":{},"interfaces/RouterAdapter.html":{},"changelog.html":{},"index.html":{}}}],["us",{"_index":500,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":1044,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":613,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["useexist",{"_index":64,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1068,"title":{},"body":{"index.html":{}}}],["usevalu",{"_index":614,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["util",{"_index":329,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{},"dependencies.html":{}}}],["valid",{"_index":344,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["valu",{"_index":7,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"injectables/DefaultRouterAdapter.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(valu",{"_index":259,"title":{},"body":{"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["valueaccessor",{"_index":618,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessor.constructor",{"_index":653,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessors.foreach(valueaccessor",{"_index":652,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valuechang",{"_index":94,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"changelog.html":{}}}],["values.map(control.deseri",{"_index":580,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["variabl",{"_index":1145,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":548,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["void",{"_index":48,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamGroupValue.html":{},"directives/QueryParamNameDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["wait",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":1039,"title":{},"body":{"index.html":{}}}],["warranti",{"_index":1117,"title":{},"body":{"license.html":{}}}],["way",{"_index":1074,"title":{},"body":{"index.html":{}}}],["websit",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1130,"title":{},"body":{"license.html":{}}}],["widget",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":631,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{},"license.html":{}}}],["word",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":730,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worri",{"_index":1079,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":385,"title":{},"body":{"classes/QueryParamControl.html":{},"interfaces/QueryParamControlOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamGroupValue.html":{},"miscellaneous/functions.html":{}}}],["wraptrycatch(fn",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["write",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["writevalu",{"_index":22,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{}}}],["writevalue(valu",{"_index":55,"title":{},"body":{"directives/CheckboxControlValueAccessorDirective.html":{},"directives/ControlValueAccessorDirective.html":{},"directives/DefaultControlValueAccessorDirective.html":{},"directives/MultiSelectControlValueAccessorDirective.html":{},"directives/MultiSelectOptionDirective.html":{},"directives/NumberControlValueAccessorDirective.html":{},"directives/RangeControlValueAccessorDirective.html":{},"directives/SelectControlValueAccessorDirective.html":{},"directives/SelectOptionDirective.html":{}}}],["x",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":924,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ye",{"_index":670,"title":{},"body":{"interfaces/RouterAdapter.html":{}}}],["zoom",{"_index":598,"title":{},"body":{"modules/QueryParamModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/CheckboxControlValueAccessorDirective.html":{"url":"directives/CheckboxControlValueAccessorDirective.html","title":"directive - CheckboxControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CheckboxControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/checkbox-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=checkbox][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/checkbox-control-value-accessor.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_CHECKBOX_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=checkbox][queryParamName]',\n    providers: [NGQP_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class CheckboxControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: boolean) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onInput(event: UIEvent) {\n        this.fnChange((event.target as HTMLInputElement).checked);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n\n\n            \n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabledChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        TODO Documentation \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyChange(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: (value: T) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * TODO Documentation\n *\n * \n * \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /** TODO Documentation */\n    @Output('valueChange')\n    public valueChange = new EventEmitter();\n\n    /** TODO Documentation */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /** TODO Documentation */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    public writeValue(value: T) {\n        this.valueChange.emit(value);\n    }\n\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DefaultControlValueAccessorDirective.html":{"url":"directives/DefaultControlValueAccessorDirective.html","title":"directive - DefaultControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DefaultControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/default-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                compositionend\n                            \n                            \n                                compositionstart\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string | null, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/default-control-value-accessor.directive.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionend\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ncompositionend(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compositionstart\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompositionstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/default-control-value-accessor.directive.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Inject, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const NGQP_DEFAULT_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n};\n\nfunction isAndroid(navigator: Navigator): boolean {\n    return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\n}\n\n@Directive({\n    selector: 'input:not([type=checkbox]):not([type=radio])[queryParamName],textarea[queryParamName]',\n    providers: [NGQP_DEFAULT_VALUE_ACCESSOR],\n})\nexport class DefaultControlValueAccessorDirective implements ControlValueAccessor {\n\n    private readonly supportsComposition: boolean;\n    private composing = false;\n\n    private fnChange = (_: string) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        if (this.supportsComposition && this.composing) {\n            return;\n        }\n\n        this.fnChange((event.target as HTMLInputElement).value);\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    @HostListener('compositionstart')\n    public onCompositionStart() {\n        this.composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    public onCompositionEnd(event: UIEvent) {\n        this.composing = false;\n        if (this.supportsComposition) {\n            this.fnChange((event.target as HTMLInputElement).value);\n        }\n    }\n\n    constructor(\n        @Optional() @Inject(PLATFORM_ID) private platformId: string | null,\n        private renderer: Renderer2,\n        private elementRef: ElementRef\n    ) {\n        this.supportsComposition = isPlatformBrowser(this.platformId || '') && !isAndroid(window.navigator);\n    }\n\n    public writeValue(value: string) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultRouterAdapter.html":{"url":"injectables/DefaultRouterAdapter.html","title":"injectable - DefaultRouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultRouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/default-router-adapter.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    url\n                                \n                                \n                                    queryParamMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/lib/router-adapter/default-router-adapter.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        navigate(queryParams: Params, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        queryParamMap\n                    \n                \n\n                \n                    \n                        getqueryParamMap()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/router-adapter/default-router-adapter.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RouterAdapter, RouterAdapterOptions } from './router-adapter.interface';\n\n/**\n * TODO Documentation\n */\nexport const DefaultRouterAdapterOptions: RouterAdapterOptions = {\n    replaceUrl: true,\n};\n\n/**\n * TODO Documentation\n */\n@Injectable()\nexport class DefaultRouterAdapter implements RouterAdapter {\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n\n    public get url() {\n        return this.router.url;\n    }\n\n    public get queryParamMap() {\n        return this.route.queryParamMap;\n    }\n\n    public navigate(queryParams: Params, extras: RouterAdapterOptions = {}): Promise {\n        return this.router.navigate([], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n            queryParams: queryParams,\n            ...extras,\n        });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectControlValueAccessorDirective.html":{"url":"directives/MultiSelectControlValueAccessorDirective.html","title":"directive - MultiSelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select[multiple][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption(option: MultiSelectOptionDirective)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    MultiSelectOptionDirective\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(values: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Host,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Renderer2,\n    StaticProvider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_MULTI_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select[multiple][queryParamName]',\n    providers: [NGQP_MULTI_SELECT_VALUE_ACCESSOR],\n})\nexport class MultiSelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    private selectedIds: string[] = [];\n    private options = new Map>();\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T[]) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change')\n    public onChange() {\n        this.selectedIds = Array.from(this.options.entries())\n            .filter(([id, option]) => option.selected)\n            .map(([id]) => id);\n        const values = this.selectedIds.map(id => this.optionMap.get(id));\n        this.fnChange(values);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(values: T[]) {\n        values = values === null ? [] : values;\n        if (!Array.isArray(values)) {\n            throw new Error(`Provided a non-array value to select[multiple]: ${values}`);\n        }\n\n        this.selectedIds = values\n            .map(value => this.getOptionId(value))\n            .filter(id => id !== null);\n        this.options.forEach((option, id) => option.selected = this.selectedIds.includes(id));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(option: MultiSelectOptionDirective): string {\n        const newId = (this.idCounter++).toString();\n        this.options.set(newId, option);\n        return newId;\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n        if (this.selectedIds.includes(id)) {\n            this.onChange();\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n\n@Directive({\n    selector: 'option',\n})\nexport class MultiSelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: MultiSelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption(this);\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n        }\n    }\n\n    public get selected(): boolean {\n        return (this.elementRef.nativeElement as HTMLOptionElement).selected;\n    }\n\n    public set selected(selected: boolean) {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selected', selected);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MultiSelectOptionDirective.html":{"url":"directives/MultiSelectOptionDirective.html","title":"directive - MultiSelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MultiSelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/multi-select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: MultiSelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MultiSelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:136\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:136\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:142\n                                \n                            \n\n                \n                    \n                        setselected(selected: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/multi-select-control-value-accessor.directive.ts:146\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selected\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Host,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Renderer2,\n    StaticProvider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_MULTI_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select[multiple][queryParamName]',\n    providers: [NGQP_MULTI_SELECT_VALUE_ACCESSOR],\n})\nexport class MultiSelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    private selectedIds: string[] = [];\n    private options = new Map>();\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T[]) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change')\n    public onChange() {\n        this.selectedIds = Array.from(this.options.entries())\n            .filter(([id, option]) => option.selected)\n            .map(([id]) => id);\n        const values = this.selectedIds.map(id => this.optionMap.get(id));\n        this.fnChange(values);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(values: T[]) {\n        values = values === null ? [] : values;\n        if (!Array.isArray(values)) {\n            throw new Error(`Provided a non-array value to select[multiple]: ${values}`);\n        }\n\n        this.selectedIds = values\n            .map(value => this.getOptionId(value))\n            .filter(id => id !== null);\n        this.options.forEach((option, id) => option.selected = this.selectedIds.includes(id));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(option: MultiSelectOptionDirective): string {\n        const newId = (this.idCounter++).toString();\n        this.options.set(newId, option);\n        return newId;\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n        if (this.selectedIds.includes(id)) {\n            this.onChange();\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n\n@Directive({\n    selector: 'option',\n})\nexport class MultiSelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: MultiSelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption(this);\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n        }\n    }\n\n    public get selected(): boolean {\n        return (this.elementRef.nativeElement as HTMLOptionElement).selected;\n    }\n\n    public set selected(selected: boolean) {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selected', selected);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberControlValueAccessorDirective.html":{"url":"directives/NumberControlValueAccessorDirective.html","title":"directive - NumberControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/number-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=number][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/number-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/number-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_NUMBER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=number][queryParamName]',\n    providers: [NGQP_NUMBER_VALUE_ACCESSOR],\n})\nexport class NumberControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        const normalizedValue = value === null ? '' : value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                customParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts: QueryParamControlOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:98\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts: QueryParamControlOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:97\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        customParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:96\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        group(controls: literal type, extras: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        controls\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Redirects to stringParam.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamControlOptsInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamControlOptsInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryParamControl, QueryParamControlOpts, QueryParamGroup } from './model';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\ntype OverwritePartial = Pick> & Partial>;\nexport type QueryParamControlOptsInput = OverwritePartial, 'serialize' | 'deserialize' | 'compareWith'>;\n\n/**\n * TODO Documentation\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * TODO Documentation\n     */\n    public group(\n        controls: { [ name: string ]: QueryParamControl | string },\n        extras: RouterAdapterOptions = {}\n    ): QueryParamGroup {\n        const mappedControls: { [ controlName: string ]: QueryParamControl } = {};\n        Object.keys(controls).forEach(controlName => {\n            mappedControls[ controlName ] = this.createControl(controlName, controls[ controlName ]);\n        });\n\n        // TODO Maybe we should first validate that no two controls defined the same \"name\".\n        return new QueryParamGroup(mappedControls, extras);\n    }\n\n    /**\n     * Redirects to {@link stringParam}.\n     * @see stringParam\n     */\n    public param(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public param(opts: QueryParamControlOptsInput): QueryParamControl;\n    public param(opts: QueryParamControlOptsInput): QueryParamControl {\n        return this.stringParam(opts);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public stringParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public stringParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public stringParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public numericParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public numericParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public numericParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public booleanParam(opts: QueryParamControlOptsInput & { multi: true }): QueryParamControl;\n    public booleanParam(opts: QueryParamControlOptsInput): QueryParamControl;\n    public booleanParam(opts: QueryParamControlOptsInput): QueryParamControl {\n        return new QueryParamControl({\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public customParam(opts: QueryParamControlOpts & { multi: true }): QueryParamControl;\n    public customParam(opts: QueryParamControlOpts): QueryParamControl;\n    public customParam(opts: QueryParamControlOpts): QueryParamControl {\n        return new QueryParamControl(opts);\n    }\n\n    private createControl(controlName: string, controlConfig: QueryParamControl | string): QueryParamControl {\n        if (controlConfig instanceof QueryParamControl) {\n            return controlConfig;\n        }\n\n        return this.param({\n            name: controlName,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamControl.html":{"url":"classes/QueryParamControl.html","title":"class - QueryParamControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: QueryParamControlOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:174\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    QueryParamControlOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combineWith:     ParamCombinator\n\n                    \n                \n                    \n                        \n                            Type :     ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:171\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debounceTime:     number | null\n\n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:168\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deserialize:     ParamDeserializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamDeserializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:162\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        multi:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:165\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:156\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serialize:     ParamSerializer>\n\n                    \n                \n                    \n                        \n                            Type :     ParamSerializer>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:159\n                            \n                        \n\n                \n                    \n                        TODO Documentation See QueryParamControlOpts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:153\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:150\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:241\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: T | null, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:230\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamControlOpts.html":{"url":"interfaces/QueryParamControlOpts.html","title":"interface - QueryParamControlOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamControlOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        multi\n                                \n                                \n                                        name\n                                \n                                \n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:     ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (note: no controls / serializers, but finished values and non-recursive) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:     Comparator>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:     ParamDeserializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamDeserializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     Unpack\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Unpack\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation (+ not supported in multi-mode) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     ParamSerializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamSerializer>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                controls\n                            \n                            \n                                    Public\n                                    Readonly\n                                routerOptions\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _updateValue\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(controls: literal type, extras: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controls\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            controls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        controls:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:60\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            routerOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routerOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:63\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:57\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _updateValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _updateValue(opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:132\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(controlName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:86\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patchValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        patchValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:101\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: QueryParamGroupValue, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:119\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    QueryParamGroupValue\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model.ts:91\n                                \n                            \n                    \n                        \n                                TODO Documentation \n\n\n                                \n                                    Returns :     QueryParamGroupValue\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerAdapter: RouterAdapter, globalRouterOptions: RouterAdapterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-group.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerAdapter\n                                                  \n                                                        \n                                                                    RouterAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalRouterOptions\n                                                  \n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    QueryParamGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:30\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { concatMap, debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { NGQP_ROUTER_ADAPTER, NGQP_ROUTER_OPTIONS, RouterAdapter, RouterAdapterOptions } from './router-adapter/router-adapter.interface';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamControl, QueryParamGroup, QueryParamGroupValue, Unpack } from './model';\nimport { isMissing } from './util';\n\n/** TODO Documentation */\nfunction isMultiControl(control: QueryParamControl): control is QueryParamControl {\n    return control.multi;\n}\n\n/** TODO Documentation */\nfunction hasArrayModel(control: QueryParamControl, model: T | T[]): model is T[] {\n    return isMultiControl(control);\n}\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamGroup]',\n})\nexport class QueryParamGroupDirective implements OnInit, OnDestroy {\n\n    /** TODO Documentation */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    /** TODO Documentation */\n    private directives: QueryParamNameDirective[] = [];\n\n    /** TODO Documentation @internal */\n    private queue$ = new Subject();\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(NGQP_ROUTER_ADAPTER) private routerAdapter: RouterAdapter,\n        @Optional() @Inject(NGQP_ROUTER_OPTIONS) private globalRouterOptions: RouterAdapterOptions\n    ) {\n        this.setupNavigationQueue();\n    }\n\n    public ngOnInit() {\n        if (!this.queryParamGroup) {\n            throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n        }\n\n        this.queryParamGroup._registerOnChange((value: QueryParamGroupValue) => {\n            let params: Params = {};\n            Object.keys(value).forEach(controlName => {\n                const control: QueryParamControl = this.queryParamGroup.get(controlName);\n                if (isMissing(control)) {\n                    return;\n                }\n\n                params = { ...params, ...this.getParamsForModel(control, value[ controlName ]) };\n            });\n\n            this.enqueueNavigation(params);\n        });\n\n        Object.keys(this.queryParamGroup.controls).forEach(controlName => {\n            const control: QueryParamControl = this.queryParamGroup.get(controlName);\n            control._registerOnChange((newModel: any) =>\n                this.enqueueNavigation(this.getParamsForModel(control, newModel))\n            );\n        });\n\n        this.routerAdapter.queryParamMap.subscribe(queryParamMap => {\n            Object.keys(this.queryParamGroup.controls).forEach(controlName => {\n                const control: QueryParamControl = this.queryParamGroup.get(controlName);\n                const newModel = this.deserialize(control,\n                    control.multi ? queryParamMap.getAll(control.name) : queryParamMap.get(control.name)\n                );\n\n                // Get the directive, if it has been initialized yet.\n                const directive = this.directives.find(dir => dir.name === controlName);\n                if (!isMissing(directive)) {\n                    directive.valueAccessor.writeValue(newModel);\n                }\n\n                control.value = newModel;\n                control._updateValue({ emitEvent: true, onlySelf: true });\n            });\n\n            // We used onlySelf on the controls so that we can emit only once on the entire group.\n            this.queryParamGroup._updateValue({ emitEvent: true });\n        });\n    }\n\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public addControl(directive: QueryParamNameDirective): void {\n        const control: QueryParamControl = this.queryParamGroup.get(directive.name);\n        if (!control) {\n            throw new Error(`Could not find control ${directive.name}. Did you forget to add it to your QueryParamGroup?`);\n        }\n        if (!directive.valueAccessor) {\n            throw new Error(`No value accessor found for the control. Please make sure to implement ControlValueAccessor on this component.`);\n        }\n\n        // Chances are that we read the initial route before a directive has been registered here.\n        // The value in the control will be correct, but we need to sync it to the view once initially.\n        directive.valueAccessor.writeValue(control.value);\n\n        // Proxy updates from the view to debounce them (if needed).\n        const debouncedQueue$ = new Subject();\n        debouncedQueue$.pipe(\n            !isMissing(control.debounceTime) ? debounceTime(control.debounceTime) : tap(),\n            map((newModel: any) => this.getParamsForModel(control, newModel)),\n            takeUntil(this.destroy$),\n        ).subscribe(params => this.enqueueNavigation(params));\n\n        directive.valueAccessor.registerOnChange((newModel: any) => debouncedQueue$.next(newModel));\n\n        this.directives.push(directive);\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    private setupNavigationQueue() {\n        this.queue$.pipe(\n            takeUntil(this.destroy$),\n            concatMap(params => this.routerAdapter.navigate(params, this.routerOptions)),\n        ).subscribe();\n    }\n\n    private enqueueNavigation(params: Params): void {\n        this.queue$.next(params);\n    }\n\n    private getParamsForModel(control: QueryParamControl, model: T): Params {\n        const newValue = this.serialize(control, model);\n\n        const combinedParams: Params = isMissing(control.combineWith)\n            ? {} : control.combineWith(control.value, model);\n\n        return {\n            ...combinedParams,\n            [ control.name ]: newValue,\n        };\n    }\n\n    private serialize(control: QueryParamControl, model: T): string[] {\n        return hasArrayModel(control, model)\n            ? (model || []).map(control.serialize)\n            : [control.serialize(model)];\n    }\n\n    private deserialize(control: QueryParamControl, values: string | string[]): Unpack | Unpack[] {\n        if (Array.isArray(values)) {\n            return values.map(control.deserialize);\n        } else {\n            return control.deserialize(values);\n        }\n    }\n\n    private get routerOptions(): RouterAdapterOptions {\n        const groupOptions = this.queryParamGroup ? this.queryParamGroup.routerOptions : {};\n\n        return {\n            ...this.globalRouterOptions,\n            ...groupOptions,\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamGroupValue.html":{"url":"interfaces/QueryParamGroupValue.html","title":"interface - QueryParamGroupValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamGroupValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation \n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [controlName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterAdapterOptions } from './router-adapter/router-adapter.interface';\n\n/** TODO Documentation */\nexport type ParamSerializer = (model: T | null) => string | null;\n\n/** TODO Documentation */\nexport type ParamDeserializer = (value: string | null) => T | null;\n\n/** TODO Documentation */\nexport type OnChangeFunction = (value: T) => void;\n\n/** TODO Documentation */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** TODO Documentation */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/** TODO Documentation */\nexport interface QueryParamGroupValue {\n    [ controlName: string ]: any;\n}\n\n/**\n * TODO Documentation\n */\nexport interface QueryParamControlOpts {\n    /** TODO Documentation */\n    name: string;\n    /** TODO Documentation */\n    serialize: ParamSerializer>;\n    /** TODO Documentation */\n    deserialize: ParamDeserializer>;\n    /** TODO Documentation */\n    compareWith: Comparator>;\n    /** TODO Documentation */\n    multi?: boolean;\n    /** TODO Documentation */\n    debounceTime?: number | null;\n    /** TODO Documentation (+ not supported in multi-mode) */\n    emptyOn?: Unpack;\n    /** TODO Documentation (note: no controls / serializers, but finished values and non-recursive) */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public readonly controls: { [ controlName: string ]: QueryParamControl };\n\n    /** TODO Documentation */\n    public readonly routerOptions: RouterAdapterOptions;\n\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(\n        controls: { [ controlName: string ]: QueryParamControl },\n        extras: RouterAdapterOptions = {}\n    ) {\n        this.controls = controls;\n        this.routerOptions = extras;\n\n        Object.values(this.controls).forEach(control => control._setParent(this));\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** TODO Documentation */\n    public get(controlName: string): QueryParamControl {\n        return this.controls[ controlName ];\n    }\n\n    /** TODO Documentation */\n    public get value(): QueryParamGroupValue {\n        const value: QueryParamGroupValue = {};\n        Object.keys(this.controls).forEach(controlName => value[ controlName ] = this.controls[ controlName ].value);\n\n        return value;\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public patchValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(controlName => {\n            const control = this.controls[ controlName ];\n            if (isMissing(control)) {\n                return;\n            }\n\n            control.setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: QueryParamGroupValue, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.controls).forEach(controlName => {\n            this.controls[ controlName ].setValue(value[ controlName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * TODO Documentation\n */\nexport class QueryParamControl {\n\n    private _valueChanges = new Subject();\n\n    /** TODO Documentation */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /** TODO Documentation */\n    public value: T = null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly name: string | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly serialize: ParamSerializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly multi: boolean;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly debounceTime: number | null;\n\n    /** TODO Documentation See QueryParamControlOpts */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamControlOpts) {\n        const { name, serialize, deserialize, debounceTime, compareWith, combineWith } = opts;\n        const { emptyOn = null } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(name)) {\n            throw new Error(`Please provide a name for each query parameter control.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${name} is a multi-value parameter.`);\n        }\n\n        this.name = name;\n        this.serialize = wrapTryCatch(\n            createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${name}`\n        );\n        this.deserialize = wrapTryCatch(\n            createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${name}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /**\n     * TODO Documentation\n     */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /**\n     * TODO Documentation\n     * @internal\n     */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxControlValueAccessorDirective\n                        \n                        \n                            ControlValueAccessorDirective\n                        \n                        \n                            DefaultControlValueAccessorDirective\n                        \n                        \n                            MultiSelectControlValueAccessorDirective\n                        \n                        \n                            MultiSelectOptionDirective\n                        \n                        \n                            NumberControlValueAccessorDirective\n                        \n                        \n                            QueryParamGroupDirective\n                        \n                        \n                            QueryParamNameDirective\n                        \n                        \n                            RangeControlValueAccessorDirective\n                        \n                        \n                            SelectControlValueAccessorDirective\n                        \n                        \n                            SelectOptionDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param.module.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { ControlValueAccessorDirective } from './control-value-accessor.directive';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterAdapterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterAdapterOptions\n} from './router-adapter/router-adapter';\n\nconst DIRECTIVES: Type[] = [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterAdapterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static forRoot(config: { routerOptions?: RouterAdapterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: config.routerOptions ? config.routerOptions : DefaultRouterAdapterOptions,\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                valueAccessor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: QueryParamGroupDirective, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    QueryParamGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                    \n                        TODO Documentation \n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            valueAccessor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueAccessor:     ControlValueAccessor | null\n\n                    \n                \n                    \n                        \n                            Type :     ControlValueAccessor | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:19\n                            \n                        \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Host, Inject, Input, OnInit, Optional, Self, SkipSelf } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { DefaultControlValueAccessorDirective, NGQP_BUILT_IN_ACCESSORS } from './accessors/accessors';\n\n/**\n * TODO Documentation\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements OnInit {\n\n    /** TODO Documentation */\n    @Input('queryParamName')\n    public name: string;\n\n    /** TODO Documentation */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() @Host() @SkipSelf() private parent: QueryParamGroupDirective,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.parent) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = this.selectValueAccessor(valueAccessors);\n    }\n\n    public ngOnInit() {\n        if (!this.name) {\n            throw new Error(`queryParamName has been added, but without specifying the name.`);\n        }\n\n        this.setupControl();\n    }\n\n    /**\n     * This resembles the selectControlValueAccessor function from\n     *   https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#L186\n     * We can't use it directly since it isn't exported in the public API, but let's hope choosing\n     * any accessor is good enough for our purposes.\n     */\n    private selectValueAccessor(valueAccessors: ControlValueAccessor[]): ControlValueAccessor | null {\n        if (!valueAccessors || !Array.isArray(valueAccessors)) {\n            return null;\n        }\n\n        let defaultAccessor: ControlValueAccessor | null = null;\n        let builtInAccessor: ControlValueAccessor | null = null;\n        let customAccessor: ControlValueAccessor | null = null;\n        valueAccessors.forEach(valueAccessor => {\n            if (valueAccessor.constructor === DefaultControlValueAccessorDirective) {\n                defaultAccessor = valueAccessor;\n            } else if (NGQP_BUILT_IN_ACCESSORS.some(current => valueAccessor.constructor === current)) {\n                if (builtInAccessor !== null) {\n                    throw new Error(`More than one built-in control value accessor matches`);\n                }\n\n                builtInAccessor = valueAccessor;\n            } else {\n                if (customAccessor !== null) {\n                    throw new Error(`More than one custom ControlValueAccessor has been found on the control`);\n                }\n\n                customAccessor = valueAccessor;\n            }\n        });\n\n        if (customAccessor !== null) {\n            return customAccessor;\n        }\n\n        if (builtInAccessor !== null) {\n            return builtInAccessor;\n        }\n\n        if (defaultAccessor !== null) {\n            return defaultAccessor;\n        }\n\n        throw new Error(`No matching control value accessor has been found for this form control`);\n    }\n\n    private setupControl(): void {\n        this.parent.addControl(this);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RangeControlValueAccessorDirective.html":{"url":"directives/RangeControlValueAccessorDirective.html","title":"directive - RangeControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RangeControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/range-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_RANGE_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        input[type=range][queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/range-control-value-accessor.directive.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ninput(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/range-control-value-accessor.directive.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Directive, ElementRef, forwardRef, HostListener, Renderer2 } from '@angular/core';\n\nexport const NGQP_RANGE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'input[type=range][queryParamName]',\n    providers: [NGQP_RANGE_VALUE_ACCESSOR],\n})\nexport class RangeControlValueAccessorDirective implements ControlValueAccessor {\n\n    private fnChange = (_: number) => {};\n    private fnTouched = () => {};\n\n    @HostListener('input', ['$event'])\n    public onInput(event: UIEvent) {\n        const value = (event.target as HTMLInputElement).value;\n        this.fnChange(value === '' ? null : parseFloat(value));\n    }\n\n    @HostListener('blur')\n    public onBlur() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: any) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterAdapter.html":{"url":"interfaces/RouterAdapter.html","title":"interface - RouterAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                TODO Documentation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        queryParamMap\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    navigate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigate(queryParams: Params, extras?: RouterAdapterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/router-adapter/router-adapter.interface.ts:23\n                            \n                        \n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    Params\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterAdapterOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryParamMap\n                                    \n                                \n                                \n                                    \n                                        queryParamMap:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TODO Documentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { NavigationExtras, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * TODO Documentation\n */\nexport interface RouterAdapter {\n\n    /**\n     * TODO Documentation\n     */\n    url: string;\n\n    /**\n     * TODO Documentation\n     */\n    queryParamMap: Observable;\n\n    /**\n     * TODO Documentation\n     */\n    navigate(queryParams: Params, extras?: RouterAdapterOptions): Promise;\n\n}\n\n/**\n * TODO Documentation\n */\nexport type RouterAdapterOptions = Pick;\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/**\n * TODO Documentation\n */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectControlValueAccessorDirective.html":{"url":"directives/SelectControlValueAccessorDirective.html","title":"directive - SelectControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                NGQP_SELECT_VALUE_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        select:not([multiple])[queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deregisterOption\n                            \n                            \n                                    Public\n                                registerOnChange\n                            \n                            \n                                    Public\n                                registerOnTouched\n                            \n                            \n                                    Public\n                                registerOption\n                            \n                            \n                                    Public\n                                setDisabledState\n                            \n                            \n                                    Public\n                                updateOptionValue\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                change\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-control-value-accessor.directive.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nchange(event: UIEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deregisterOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deregisterOption(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerOption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerOption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDisabledState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDisabledState(isDisabled: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isDisabled\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOptionValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateOptionValue(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeValue(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T | null\n\n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Host,\n    HostListener,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Renderer2,\n    StaticProvider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select:not([multiple])[queryParamName]',\n    providers: [NGQP_SELECT_VALUE_ACCESSOR],\n})\nexport class SelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    public value: T | null = null;\n    private selectedId: string | null = null;\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onChange(event: UIEvent) {\n        this.selectedId = (event.target as HTMLOptionElement).value;\n        this.value = this.optionMap.get(this.selectedId);\n        this.fnChange(this.value);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: T) {\n        this.value = value;\n\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(): string {\n        return (this.idCounter++).toString();\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n\n        if (this.selectedId === id) {\n            this.fnChange(value);\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n\n@Directive({\n    selector: 'option',\n})\nexport class SelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: SelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption();\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectOptionDirective.html":{"url":"directives/SelectOptionDirective.html","title":"directive - SelectOptionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectOptionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/accessors/select-control-value-accessor.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        option\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: SelectControlValueAccessorDirective, renderer: Renderer2, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/accessors/select-control-value-accessor.directive.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    SelectControlValueAccessorDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:132\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/accessors/select-control-value-accessor.directive.ts:132\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Host,\n    HostListener,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Renderer2,\n    StaticProvider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const NGQP_SELECT_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n};\n\n@Directive({\n    selector: 'select:not([multiple])[queryParamName]',\n    providers: [NGQP_SELECT_VALUE_ACCESSOR],\n})\nexport class SelectControlValueAccessorDirective implements ControlValueAccessor {\n\n    public value: T | null = null;\n    private selectedId: string | null = null;\n    private optionMap = new Map();\n\n    private idCounter = 0;\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    @HostListener('change', ['$event'])\n    public onChange(event: UIEvent) {\n        this.selectedId = (event.target as HTMLOptionElement).value;\n        this.value = this.optionMap.get(this.selectedId);\n        this.fnChange(this.value);\n    }\n\n    @HostListener('blur')\n    public onTouched() {\n        this.fnTouched();\n    }\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n    }\n\n    public writeValue(value: T) {\n        this.value = value;\n\n        this.selectedId = this.getOptionId(value);\n        if (this.selectedId === null) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\n        }\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\n    }\n\n    public registerOnChange(fn: any) {\n        this.fnChange = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this.fnTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n\n    public registerOption(): string {\n        return (this.idCounter++).toString();\n    }\n\n    public deregisterOption(id: string): void {\n        this.optionMap.delete(id);\n    }\n\n    public updateOptionValue(id: string, value: T): void {\n        this.optionMap.set(id, value);\n\n        if (this.selectedId === id) {\n            this.fnChange(value);\n        }\n    }\n\n    private getOptionId(value: T): string | null {\n        for (const id of Array.from(this.optionMap.keys())) {\n            if (this.optionMap.get(id) === value) {\n                return id;\n            }\n        }\n\n        return null;\n    }\n\n}\n\n@Directive({\n    selector: 'option',\n})\nexport class SelectOptionDirective implements OnInit, OnDestroy {\n\n    private readonly id: string | null = null;\n\n    constructor(\n        @Optional() @Host() private parent: SelectControlValueAccessorDirective,\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n    ) {\n        if (this.parent) {\n            this.id = this.parent.registerOption();\n        }\n    }\n\n    public ngOnInit() {\n        if (this.parent) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.id);\n        }\n    }\n\n    public ngOnDestroy() {\n        if (this.parent) {\n            this.parent.deregisterOption(this.id);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n    @Input('value')\n    public set value(value: T) {\n        if (this.parent) {\n            this.parent.updateOptionValue(this.id, value);\n            this.parent.writeValue(this.parent.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            addModuleToImports   (schematics/.../index.ts)\n                        \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            getAngularMajorVersion   (schematics/.../index.ts)\n                        \n                        \n                            getMatchingVersion   (schematics/.../index.ts)\n                        \n                        \n                            hasArrayModel   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            isAndroid   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            isFunction   (src/.../util.ts)\n                        \n                        \n                            isMissing   (src/.../util.ts)\n                        \n                        \n                            isMultiControl   (src/.../query-param-group.directive.ts)\n                        \n                        \n                            Unnamed function   (schematics/.../index.ts)\n                        \n                        \n                            wrapTryCatch   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMatchingVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addModuleToImports\n                            \n                            \n                        \n                    \n                \n                \n                    \naddModuleToImports(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAngularMajorVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAngularMajorVersion()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingVersion(angularVersion, context)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularVersion\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        context\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Unnamed function\n                            \n                            \n                        \n                    \n                \n                \n                    \nUnnamed function(options: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnDeserializer(deserializer, emptyOn)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deserializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnSerializer(serializer, emptyOn, compareWith)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        compareWith\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/query-param-group.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasArrayModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasArrayModel(control, model)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMultiControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMultiControl(control)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isAndroid\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAndroid(navigator)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigator\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFunction(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMissing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisMissing(obj: any)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrapTryCatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nwrapTryCatch(fn, msg)\n                    \n                \n\n\n\n\n                \n                    \n                            TODO Documentation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        msg\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nngqp – Declaratively synchronize form controls with the URL\n\n  \n\n\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nInstallation\nSimply run ng add @ngqp/core – that's it! We will automatically install ngqp and import it into your app.\nIf you want, you can also avoid running schematics. Just run yarn add @ngqp/core (or npm install --save @ngqp/core) and import the QueryParamModule into your app module:\nimport { NgModule } from '@angular/core';\nimport { QueryParamModule } from '@ngqp/core';\n\n@NgModule({\n    imports: [\n        QueryParamModule\n    ],\n})\nexport class AppModule {}Make sure that your app is set up to use routing (i.e., using RouterModule).\nUsage\nThis section is a work in progress since ngqp is still in an early development stage.\nContributing\nPlease see CONTRIBUTING.md.\nI want to know more\nWhy should I care?\nAngular's router system makes it easy to organize different views under different routes, but often the state of a specific\nroute is not reflected in the URL. This makes it impossible to bookmark or share them as on every new page load the user has\nto set these states manually.\nWith ngqp, you can easily synchronize the state of form controls such as input boxes, dropdowns or your own custom controls\nwith a query parameter on the current URL. This way the URL becomes the single source of truth for this information, which\nallows users to share or bookmark these links and reload your page without having to worry about losing their current state.\nWhat can this be used for?\nngqp will work with any kind of control, but the common scenario would be pagination (i.e., which page a user is on) or\nfilter settings (search query, selections, …)\n\nLicensed under the MIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryParamModule\n\n\n\ncluster_QueryParamModule_declarations\n\n\n\ncluster_QueryParamModule_exports\n\n\n\n\nCheckboxControlValueAccessorDirective\n\nCheckboxControlValueAccessorDirective\n\n\n\nQueryParamModule\n\nQueryParamModule\n\nQueryParamModule -->\n\nCheckboxControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nControlValueAccessorDirective\n\nControlValueAccessorDirective\n\nQueryParamModule -->\n\nControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nDefaultControlValueAccessorDirective\n\nDefaultControlValueAccessorDirective\n\nQueryParamModule -->\n\nDefaultControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectControlValueAccessorDirective\n\nMultiSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nMultiSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nMultiSelectOptionDirective\n\nMultiSelectOptionDirective\n\nQueryParamModule -->\n\nMultiSelectOptionDirective->QueryParamModule\n\n\n\n\n\nNumberControlValueAccessorDirective\n\nNumberControlValueAccessorDirective\n\nQueryParamModule -->\n\nNumberControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nQueryParamGroupDirective\n\nQueryParamGroupDirective\n\nQueryParamModule -->\n\nQueryParamGroupDirective->QueryParamModule\n\n\n\n\n\nQueryParamNameDirective\n\nQueryParamNameDirective\n\nQueryParamModule -->\n\nQueryParamNameDirective->QueryParamModule\n\n\n\n\n\nRangeControlValueAccessorDirective\n\nRangeControlValueAccessorDirective\n\nQueryParamModule -->\n\nRangeControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectControlValueAccessorDirective\n\nSelectControlValueAccessorDirective\n\nQueryParamModule -->\n\nSelectControlValueAccessorDirective->QueryParamModule\n\n\n\n\n\nSelectOptionDirective\n\nSelectOptionDirective\n\nQueryParamModule -->\n\nSelectOptionDirective->QueryParamModule\n\n\n\n\n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective \n\nCheckboxControlValueAccessorDirective  -->\n\nQueryParamModule->CheckboxControlValueAccessorDirective \n\n\n\n\n\nControlValueAccessorDirective \n\nControlValueAccessorDirective \n\nControlValueAccessorDirective  -->\n\nQueryParamModule->ControlValueAccessorDirective \n\n\n\n\n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective \n\nDefaultControlValueAccessorDirective  -->\n\nQueryParamModule->DefaultControlValueAccessorDirective \n\n\n\n\n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective \n\nMultiSelectControlValueAccessorDirective  -->\n\nQueryParamModule->MultiSelectControlValueAccessorDirective \n\n\n\n\n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective \n\nMultiSelectOptionDirective  -->\n\nQueryParamModule->MultiSelectOptionDirective \n\n\n\n\n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective \n\nNumberControlValueAccessorDirective  -->\n\nQueryParamModule->NumberControlValueAccessorDirective \n\n\n\n\n\nQueryParamGroupDirective \n\nQueryParamGroupDirective \n\nQueryParamGroupDirective  -->\n\nQueryParamModule->QueryParamGroupDirective \n\n\n\n\n\nQueryParamNameDirective \n\nQueryParamNameDirective \n\nQueryParamNameDirective  -->\n\nQueryParamModule->QueryParamNameDirective \n\n\n\n\n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective \n\nRangeControlValueAccessorDirective  -->\n\nQueryParamModule->RangeControlValueAccessorDirective \n\n\n\n\n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective \n\nSelectControlValueAccessorDirective  -->\n\nQueryParamModule->SelectControlValueAccessorDirective \n\n\n\n\n\nSelectOptionDirective \n\nSelectOptionDirective \n\nSelectOptionDirective  -->\n\nQueryParamModule->SelectOptionDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../util.ts)\n                        \n                        \n                            OnChangeFunction   (src/.../model.ts)\n                        \n                        \n                            OverwritePartial   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            ParamCombinator   (src/.../model.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../model.ts)\n                        \n                        \n                            ParamSerializer   (src/.../model.ts)\n                        \n                        \n                            QueryParamControlOptsInput   (src/.../query-param-builder.service.ts)\n                        \n                        \n                            RouterAdapterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            Unpack   (src/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/util.ts\n    \n        \n            \n                \n                    \n                        \n                        Comparator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Comparator:     function\n\n                    \n                \n            \n        \n\n    src/lib/model.ts\n    \n        \n            \n                \n                    \n                        \n                        OnChangeFunction\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        OnChangeFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamCombinator\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamCombinator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamDeserializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamDeserializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamSerializer\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        ParamSerializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Unpack\n                    \n                \n                    \n                        \n                            TODO Documentation \n\n                        \n                    \n                \n                    \n                        Unpack:     \n\n                    \n                \n            \n        \n\n    src/lib/query-param-builder.service.ts\n    \n        \n            \n                \n                    \n                        \n                        OverwritePartial\n                    \n                \n                \n                    \n                        OverwritePartial:     \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        QueryParamControlOptsInput\n                    \n                \n                \n                    \n                        QueryParamControlOptsInput:     OverwritePartial | \"serialize\" | \"deserialize\" | \"compareWith\">\n\n                    \n                \n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        RouterAdapterOptions\n                    \n                \n                    \n                        \n                            TODO Documentation\n\n                        \n                    \n                \n                    \n                        RouterAdapterOptions:     Pick\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BOOLEAN_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_BOOLEAN_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_NUMBER_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_DESERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DEFAULT_STRING_SERIALIZER   (src/.../serializers.ts)\n                        \n                        \n                            DefaultRouterAdapterOptions   (src/.../default-router-adapter.service.ts)\n                        \n                        \n                            DIRECTIVES   (src/.../query-param.module.ts)\n                        \n                        \n                            LOOSE_IDENTITY_COMPARATOR   (src/.../util.ts)\n                        \n                        \n                            NGQP_BUILT_IN_ACCESSORS   (src/.../ngqp-accessors.ts)\n                        \n                        \n                            NGQP_CHECKBOX_VALUE_ACCESSOR   (src/.../checkbox-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_DEFAULT_VALUE_ACCESSOR   (src/.../default-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_MODULE_NAME   (schematics/.../index.ts)\n                        \n                        \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR   (src/.../multi-select-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_NUMBER_VALUE_ACCESSOR   (src/.../number-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_RANGE_VALUE_ACCESSOR   (src/.../range-control-value-accessor.directive.ts)\n                        \n                        \n                            NGQP_ROUTER_ADAPTER   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_SELECT_VALUE_ACCESSOR   (src/.../select-control-value-accessor.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BOOLEAN_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BOOLEAN_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createBooleanSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_NUMBER_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_NUMBER_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createNumberSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_DESERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_DESERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringDeserializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STRING_SERIALIZER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_STRING_SERIALIZER:     \n\n                    \n                \n                    \n                        \n                            Default value : createStringSerializer()\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/router-adapter/default-router-adapter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterAdapterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DefaultRouterAdapterOptions:     RouterAdapterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterAdapterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n}\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/query-param.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DIRECTIVES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DIRECTIVES:     Type[]\n\n                    \n                \n                    \n                        \n                            Type :     Type[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOOSE_IDENTITY_COMPARATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOOSE_IDENTITY_COMPARATOR:     \n\n                    \n                \n                    \n                        \n                            Default value : (a: T, b: T) => a == b\n                        \n                    \n\n                \n                    \n                        TODO Documentation \n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/ngqp-accessors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_BUILT_IN_ACCESSORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_BUILT_IN_ACCESSORS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n]\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/checkbox-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_CHECKBOX_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_CHECKBOX_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/default-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_DEFAULT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_DEFAULT_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    schematics/ng-add/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MODULE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MODULE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QueryParamModule'\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/multi-select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_MULTI_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_MULTI_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiSelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/number-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_NUMBER_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_NUMBER_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/accessors/range-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_RANGE_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_RANGE_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_ADAPTER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_ADAPTER:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_ADAPTER')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_OPTIONS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        TODO Documentation\n\n                    \n                \n\n            \n        \n\n    src/lib/accessors/select-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_SELECT_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_SELECT_VALUE_ACCESSOR:     StaticProvider\n\n                    \n                \n                    \n                        \n                            Type :     StaticProvider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessorDirective),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
