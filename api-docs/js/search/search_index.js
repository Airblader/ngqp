var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/directives/ControlValueAccessorDirective.html",[0,0.449,1,1.812]],["body/directives/ControlValueAccessorDirective.html",[0,0.759,1,2.936,2,0.737,3,0.737,4,0.534,5,4.601,6,1.031,7,2.698,8,0.534,9,0.974,10,2.064,11,3.638,12,3.457,13,2.936,14,2.906,15,2.064,16,2.906,17,1.332,18,0.993,19,2.064,20,3.158,21,1.776,22,2.064,23,1.798,24,0.058,25,3.289,26,3.638,27,4.117,28,1.537,29,0.993,30,2.424,31,0.445,32,1.862,33,1.4,34,3.638,35,4.407,36,4.117,37,4.117,38,2.01,39,4.407,40,1.776,41,2.906,42,2.405,43,4.407,44,4.407,45,3.638,46,1.862,47,0.593,48,2.5,49,0.554,50,4.601,51,1.029,52,2.698,53,2.064,54,1.804,55,2.936,56,3.638,57,2.424,58,1.332,59,4.407,60,3.638,61,1.537,62,2.698,63,3.638,64,2.003,65,2.698,66,2.906,67,0.871,68,3.638,69,3.52,70,0.534,71,0.63,72,0.534,73,0.85,74,1.862,75,2.698,76,3.638,77,3.638,78,0.993,79,0.988,80,1.53,81,2.698,82,0.63,83,0.534,84,2.698,85,2.698,86,1.332,87,2.698,88,2.698,89,2.698,90,2.698,91,3.638,92,1.613,93,2.698,94,2.698,95,2.698,96,2.698,97,3.638,98,2.698,99,2.698,100,0.988,101,2.698,102,0.038,103,0.038]],["title/classes/QueryParam.html",[83,0.538,104,0.996]],["body/classes/QueryParam.html",[0,0.234,2,0.387,3,0.387,4,0.28,6,1.051,8,0.741,9,0.695,15,1.282,17,0.518,18,0.387,19,0.803,24,0.058,28,1.583,29,0.617,31,0.234,32,0.955,33,1.384,38,1.716,40,1.103,42,2.224,46,1.778,47,0.567,49,0.613,51,1.064,53,0.803,54,0.827,58,1.178,61,0.955,64,1.924,67,0.807,70,1.035,71,1.048,72,0.695,73,0.954,74,1.823,78,0.96,82,0.954,83,0.557,86,1.287,92,1.69,100,1.495,102,0.024,103,0.024,104,1.709,105,0.803,106,1.599,107,2.497,108,1.505,109,1.505,110,1.505,111,1.505,112,1.505,113,1.69,114,1.282,115,1.439,116,1.114,117,1.103,118,2.618,119,1.329,120,1.505,121,1.103,122,1.505,123,1.485,124,1.416,125,2.388,126,1.178,127,1.924,128,1.416,129,1.149,130,1.246,131,1.416,132,2.388,133,1.878,134,1.416,135,2.126,136,2.144,137,1.994,138,2.144,139,1.599,140,1.878,141,2.144,142,1.282,143,1.416,144,1.505,145,1.103,146,1.187,147,1.376,148,0.598,149,1.376,150,0.598,151,1.571,152,0.944,153,0.803,154,1.878,155,0.518,156,0.691,157,0.803,158,1.58,159,0.878,160,0.716,161,0.449,162,0.691,163,1.994,164,1.282,165,1.825,166,1.495,167,1.825,168,1.115,169,1.282,170,1.282,171,1.508,172,0.944,173,1.599,174,0.944,175,0.803,176,2.342,177,1.282,178,0.944,179,0.803,180,1.505,181,1.376,182,0.803,183,1.287,184,2.144,185,0.944,186,0.803,187,0.803,188,1.282,189,1.103,190,1.825,191,0.803,192,1.661,193,0.803,194,0.803,195,0.944,196,0.944,197,1.505,198,0.944,199,1.599,200,0.944,201,0.944,202,0.944,203,0.598,204,1.571,205,1.103,206,0.803,207,0.944,208,0.944,209,0.944,210,0.803,211,0.691,212,0.944,213,0.944,214,1.829,215,0.944,216,0.803,217,1.103,218,0.944,219,0.944,220,0.944,221,0.944,222,1.359,223,0.803,224,0.944,225,1.599,226,0.944,227,0.691,228,0.803,229,0.944,230,0.944,231,0.803,232,0.944,233,0.944,234,1.994,235,1.725,236,1.103,237,1.505,238,0.944,239,0.944,240,0.944,241,0.803,242,1.505,243,1.103,244,0.944,245,1.282,246,2.144,247,0.944,248,0.944,249,1.823,250,1.505,251,1.103,252,2.342,253,0.803,254,0.944,255,0.944,256,1.505,257,1.505,258,1.505,259,0.944,260,0.691,261,0.944,262,1.287,263,1.878,264,1.878,265,1.825,266,1.505,267,0.691,268,1.505,269,0.944,270,0.944,271,0.944,272,2.231,273,0.803,274,0.803,275,0.944,276,2.62,277,2.342,278,1.878,279,1.505,280,0.944,281,1.376,282,1.505,283,1.505,284,0.944,285,1.282,286,0.944,287,0.944,288,1.583,289,0.944,290,0.944,291,0.944,292,2.144,293,0.944,294,0.944,295,0.944,296,0.944,297,0.944,298,0.944,299,0.944,300,0.944,301,0.944,302,0.803,303,0.944,304,0.944,305,0.803,306,1.282,307,0.944,308,0.803,309,0.944,310,0.944,311,0.944,312,0.944,313,0.944,314,0.803,315,0.944,316,0.944,317,0.944,318,0.944,319,0.803]],["title/injectables/QueryParamBuilder.html",[320,0.996,321,2.173]],["body/injectables/QueryParamBuilder.html",[2,0.613,3,0.613,4,0.444,6,0.444,8,0.633,9,0.633,21,1.564,24,0.058,28,1.72,29,1.112,31,0.37,32,1.891,33,1.432,47,0.431,49,0.688,51,1.046,54,0.822,64,0.949,67,1.024,70,1.028,71,1.076,72,0.851,73,1.171,78,1.175,79,0.822,82,0.525,83,0.444,86,0.822,100,1.173,102,0.034,103,0.034,104,1.964,119,1.357,123,2.245,125,2.613,126,1.222,129,1.286,130,0.711,142,1.817,145,1.564,146,1.492,155,0.822,158,1.491,159,1.112,160,0.711,161,0.711,162,1.096,166,1.367,171,1.54,181,1.988,182,1.817,192,1.353,205,1.564,222,1.578,225,1.817,235,2.025,236,1.988,245,1.274,249,1.578,251,2.102,262,0.822,320,1.367,321,2.559,322,2.539,323,2.246,324,4.072,325,3.405,326,3.203,327,3.203,328,3.203,329,2.559,330,2.559,331,2.559,332,4.072,333,2.246,334,2.246,335,2.246,336,3.203,337,3.203,338,3.203,339,2.559,340,2.559,341,4.072,342,2.246,343,4.072,344,2.246,345,3.203,346,4.072,347,2.246,348,3.203,349,3.203,350,3.203,351,3.203,352,3.203,353,3.203,354,4.072,355,2.246,356,2.246,357,2.246,358,2.246,359,3.203,360,2.246,361,2.246,362,2.246,363,2.246,364,1.794,365,1.794,366,1.496,367,1.794,368,2.246,369,2.672,370,2.246,371,2.246,372,2.246,373,2.246]],["title/classes/QueryParamGroup.html",[83,0.538,146,0.862]],["body/classes/QueryParamGroup.html",[0,0.221,2,0.366,3,0.366,4,0.265,6,1.055,8,0.817,9,0.817,15,1.227,17,0.792,18,0.366,19,0.761,24,0.058,28,1.545,29,0.59,31,0.221,32,0.914,33,1.375,38,1.67,40,1.056,42,2.252,46,1.746,47,0.556,49,0.634,51,1.064,53,0.761,54,0.792,58,1.252,61,1.148,64,1.746,67,0.791,70,1.04,71,1.118,72,0.817,73,1.032,74,1.833,78,0.934,82,0.935,83,0.538,86,1.252,92,1.668,100,1.465,102,0.023,103,0.023,104,1.766,105,0.761,106,1.227,107,2.279,108,0.894,109,0.894,110,0.894,111,0.894,112,0.894,113,1.645,114,0.761,115,1.339,116,0.988,117,1.056,118,2.507,119,1.286,120,1.441,121,1.056,122,0.894,123,0.914,125,2.407,126,1.158,127,1.792,129,1.184,130,1.219,132,2.407,133,1.811,135,2.344,136,2.279,137,1.94,138,2.279,139,1.542,140,1.811,141,2.078,142,2.074,144,0.894,145,0.655,146,1.219,147,1.327,148,0.567,149,1.327,150,0.567,151,1.523,152,0.894,153,0.761,154,1.811,155,0.491,156,0.655,157,0.761,158,1.553,159,0.998,160,0.685,161,0.425,162,0.655,163,2.074,164,1.227,165,1.769,166,1.465,167,1.769,168,1.093,169,1.227,170,1.227,171,1.492,172,0.894,173,1.542,174,0.894,175,0.761,176,2.279,177,1.227,178,0.894,179,0.761,180,1.441,181,1.67,182,0.761,183,1.252,184,2.078,185,0.894,186,0.761,187,0.761,188,1.227,189,1.056,190,2.074,191,0.761,192,1.792,193,0.761,194,0.761,195,0.894,196,0.894,197,1.441,198,0.894,199,1.542,200,0.894,201,0.894,202,0.894,203,0.567,204,1.523,205,1.056,206,0.761,207,0.894,208,0.894,209,0.894,210,0.761,211,0.655,212,0.894,213,0.894,214,1.785,215,0.894,216,0.761,217,1.056,218,0.894,219,0.894,220,0.894,221,0.894,222,1.317,223,0.761,224,0.894,225,1.94,226,0.894,227,0.655,228,0.761,229,0.894,230,0.894,231,0.761,232,0.894,233,0.894,234,1.94,235,1.97,236,1.523,237,2.078,238,1.441,239,1.441,240,1.441,241,1.227,242,1.441,243,1.523,244,1.441,245,1.769,246,2.563,247,1.441,248,1.441,249,1.833,250,1.441,251,1.523,252,2.279,253,0.761,254,0.894,255,0.894,256,1.441,257,1.441,258,2.078,259,1.441,260,1.056,261,1.441,262,1.252,263,1.811,264,2.078,265,2.344,266,1.441,267,1.056,268,2.078,269,1.441,270,1.441,271,1.441,272,2.182,273,0.761,274,0.761,275,0.894,276,2.563,277,2.279,278,1.811,279,1.441,280,1.441,281,1.523,282,1.441,283,1.441,284,0.894,285,1.227,286,0.894,287,0.894,288,1.545,289,0.894,290,0.894,291,0.894,292,2.078,293,0.894,294,0.894,295,0.894,296,0.894,297,0.894,298,0.894,299,0.894,300,0.894,301,0.894,302,0.761,303,0.894,304,0.894,305,0.761,306,1.227,307,0.894,308,0.761,309,0.894,310,0.894,311,0.894,312,0.894,313,0.894,314,0.761,315,0.894,316,0.894,317,0.894,318,0.894,319,0.761,374,1.728,375,1.056,376,1.341,377,1.341,378,1.341,379,1.341,380,1.341,381,1.341,382,1.341,383,1.341]],["title/directives/QueryParamGroupDirective.html",[0,0.449,384,1.543]],["body/directives/QueryParamGroupDirective.html",[0,0.8,2,0.608,3,0.608,4,0.44,6,1.004,8,0.44,10,1.264,12,1.484,13,1.484,16,1.779,22,2.109,23,1.484,24,0.058,29,1.015,30,2.122,31,0.367,33,1.107,47,0.546,49,0.429,51,0.744,54,1.166,55,2.122,57,2.703,58,0.815,64,1.813,67,0.883,70,0.44,71,0.744,72,0.735,73,1.118,74,1.345,78,1.283,79,0.815,82,0.52,83,0.44,86,1.798,92,1.485,102,0.033,103,0.043,104,1.895,115,0.815,116,0.706,119,1.366,121,1.555,126,1.255,135,1.264,146,1.617,147,1.555,148,0.941,149,1.981,150,0.941,153,1.264,155,0.815,159,1.219,160,0.706,161,0.706,162,1.088,168,1.015,171,1.285,175,2.532,177,2.109,183,1.166,189,1.555,191,1.807,199,1.264,203,1.57,204,1.088,235,1.714,236,1.555,249,1.345,253,1.264,260,1.088,262,1.777,265,1.264,272,1.807,273,1.264,274,1.264,288,1.57,314,1.807,320,0.815,322,2.109,369,1.807,375,1.088,384,1.807,385,2.227,386,2.544,387,2.122,388,2.544,389,3.185,390,2.435,391,3.185,392,3.185,393,3.185,394,2.969,395,3.717,396,2.227,397,3.566,398,3.717,399,2.227,400,2.227,401,2.227,402,2.227,403,2.227,404,3.185,405,2.227,406,1.484,407,1.264,408,1.779,409,3.717,410,3.185,411,3.185,412,3.185,413,2.227,414,1.779,415,2.227,416,2.227,417,2.227,418,2.227,419,1.779,420,3.185,421,2.227,422,2.227,423,2.227,424,2.227,425,3.717,426,3.185,427,3.185,428,3.185,429,2.227,430,2.227,431,2.227,432,3.185,433,2.227,434,2.227,435,2.969,436,2.227,437,2.227,438,2.227,439,2.227,440,2.227,441,2.227,442,1.779,443,2.227,444,2.227,445,2.227,446,2.227,447,2.227,448,2.227,449,2.227,450,2.227,451,2.227,452,1.779,453,1.264,454,2.227,455,1.779,456,1.779,457,1.484,458,2.227,459,2.227,460,1.484,461,1.779,462,2.227,463,2.227,464,2.227,465,1.779,466,2.544,467,2.227,468,2.227,469,2.227,470,2.227,471,2.227,472,2.227,473,2.227,474,3.185,475,2.227,476,2.227,477,2.227,478,2.227,479,2.227,480,2.227,481,2.227,482,2.227,483,2.227,484,2.227,485,2.227,486,2.227,487,2.227,488,3.185,489,2.227,490,2.227,491,2.227,492,2.227,493,2.227,494,2.227,495,2.227,496,2.227,497,2.227,498,3.185,499,2.227,500,2.227]],["title/modules/QueryParamModule.html",[501,1.149,502,1.812]],["body/modules/QueryParamModule.html",[0,0.758,1,2.812,2,0.926,3,0.926,4,0.671,6,0.834,9,0.978,24,0.058,32,1.432,33,0.926,49,0.666,51,0.792,70,0.671,71,0.792,72,0.671,73,0.986,78,1.396,79,1.241,82,0.986,83,0.671,102,0.044,103,0.044,116,1.074,119,1.152,130,1.074,142,2.394,159,1.254,160,1.074,161,1.074,183,1.545,262,1.241,322,2.394,369,1.923,375,1.656,384,2.394,390,2.394,406,2.812,407,2.606,408,2.708,501,1.432,502,3.061,503,3.391,504,4.22,505,2.708,506,4.22,507,3.391,508,2.708,509,4.594,510,4.594,511,2.708,512,3.391,513,4.22,514,3.371,515,3.371,516,4.22,517,4.22,518,4.22,519,4.22,520,4.22,521,2.708,522,4.22,523,3.061,524,2.259,525,2.708,526,3.391,527,4.22,528,3.391]],["title/directives/QueryParamNameDirective.html",[0,0.449,390,1.543]],["body/directives/QueryParamNameDirective.html",[0,0.761,2,0.742,3,0.742,4,0.538,8,0.538,10,1.543,12,3.461,14,3.531,17,1.339,21,1.328,22,2.075,23,1.812,24,0.058,25,2.172,30,2.437,31,0.448,33,1.207,46,1.149,47,0.366,49,0.492,51,0.854,57,2.945,67,0.912,70,0.912,71,1.153,72,0.874,73,1.033,74,1.149,78,1.207,79,0.996,80,1.543,82,0.854,83,0.538,86,1.513,92,0.996,102,0.038,103,0.046,104,1.739,115,1.339,116,1.159,119,1.207,121,1.786,126,0.999,127,2.205,137,2.075,146,1.462,168,0.742,171,1.462,183,0.996,187,2.508,203,1.746,243,1.786,249,1.868,260,2.018,285,2.754,288,1.949,319,1.543,320,0.996,322,2.345,340,2.172,369,1.543,375,1.328,384,2.508,386,2.922,387,2.945,388,2.922,390,2.075,394,3.302,419,2.172,452,2.172,453,1.543,455,2.922,511,2.172,514,2.922,521,2.172,529,2.719,530,2.719,531,4.935,532,2.719,533,3.658,534,2.719,535,3.658,536,3.658,537,2.719,538,2.719,539,2.719,540,2.719,541,2.719,542,2.719,543,2.719,544,2.719,545,2.719,546,2.719,547,2.719,548,2.172,549,2.719,550,2.719,551,2.172,552,2.719,553,2.719,554,2.719,555,2.719,556,2.172,557,2.719,558,2.719,559,2.719,560,2.719,561,2.719,562,2.172,563,2.719,564,2.719,565,4.421,566,4.613,567,4.613,568,2.719,569,3.658,570,2.719,571,3.658,572,2.172,573,2.719,574,2.719,575,2.719]],["title/interfaces/QueryParamOpts.html",[18,0.743,123,1.149]],["body/interfaces/QueryParamOpts.html",[0,0.356,2,0.365,3,0.365,4,0.264,6,1.049,8,0.675,9,0.675,15,1.766,17,0.49,18,0.589,19,1.224,24,0.058,28,1.744,29,0.741,31,0.221,33,1.325,38,1.054,40,1.054,42,2.353,46,1.791,47,0.633,49,0.62,51,1.048,53,1.224,54,0.993,58,0.993,61,1.146,64,1.744,67,0.791,70,1.042,71,1.063,72,0.939,73,0.964,74,1.744,78,0.932,82,0.934,83,0.427,86,1.25,92,1.667,100,1.552,102,0.023,103,0.023,104,1.706,105,0.759,106,1.224,107,2.074,108,0.891,109,0.891,110,0.891,111,0.891,112,0.891,113,1.738,114,0.759,115,1.511,116,1.217,117,1.054,118,2.405,119,1.316,121,0.653,122,0.891,123,1.443,125,2.072,126,1.157,127,1.791,129,1.183,130,1.267,132,2.072,133,1.438,135,1.938,136,1.807,137,2.072,138,1.807,139,1.224,140,1.438,141,1.807,144,0.891,145,0.653,146,1.157,147,1.054,148,0.565,149,1.324,150,0.565,151,1.952,152,0.891,153,0.759,154,1.807,155,0.49,156,0.653,157,0.759,158,1.688,159,0.85,160,0.859,161,0.424,162,0.653,163,2.179,164,1.224,165,2.179,166,1.617,167,2.179,168,1.183,169,1.539,170,1.539,171,1.491,172,0.891,173,1.938,174,0.891,175,0.759,176,2.276,177,1.766,178,0.891,179,0.759,180,1.438,181,1.52,182,1.224,183,1.511,184,2.664,185,1.438,186,1.224,187,1.224,188,1.766,189,1.52,190,2.072,191,1.224,192,1.831,193,1.224,194,1.224,195,1.438,196,1.438,197,2.074,198,1.438,199,2.072,200,1.438,201,1.438,202,1.438,203,0.912,204,1.876,205,1.52,206,1.224,207,1.438,208,1.438,209,1.438,210,1.224,211,1.054,212,1.438,213,0.891,214,2.016,215,0.891,216,1.224,217,1.52,218,1.438,219,1.438,220,1.438,221,1.438,222,1.623,223,1.224,224,1.438,225,1.766,226,1.438,227,1.054,228,1.224,229,1.438,230,1.438,231,1.224,232,1.438,233,1.438,234,2.268,235,1.689,236,1.054,237,1.438,238,0.891,239,0.891,240,0.891,241,0.759,242,1.438,243,1.054,244,0.891,245,1.224,246,2.074,247,0.891,248,0.891,249,1.791,250,1.438,251,1.054,252,2.276,253,0.759,254,0.891,255,0.891,256,1.438,257,1.438,258,1.438,259,0.891,260,0.653,261,0.891,262,1.25,263,1.807,264,1.807,265,1.766,266,1.438,267,0.653,268,1.438,269,0.891,270,0.891,271,0.891,272,2.179,273,0.759,274,0.759,275,0.891,276,2.56,277,2.276,278,1.807,279,1.438,280,0.891,281,1.324,282,1.438,283,1.438,284,0.891,285,1.224,286,0.891,287,0.891,288,1.543,289,0.891,290,0.891,291,0.891,292,2.074,293,0.891,294,0.891,295,0.891,296,0.891,297,0.891,298,0.891,299,0.891,300,0.891,301,0.891,302,0.759,303,0.891,304,0.891,305,0.759,306,1.224,307,0.891,308,0.759,309,0.891,310,0.891,311,0.891,312,0.891,313,0.891,314,0.759,315,0.891,316,0.891,317,0.891,318,0.891,319,0.759]],["title/interfaces/RouterOptions.html",[18,0.743,159,0.743]],["body/interfaces/RouterOptions.html",[2,0.936,3,0.936,4,0.678,8,0.678,9,0.955,18,1.261,24,0.058,29,0.936,31,0.565,47,0.462,48,1.945,49,0.462,58,1.556,67,0.84,72,1,78,1.261,79,1.255,82,1.159,92,1.816,100,1.691,102,0.045,103,0.045,113,1.767,117,2.075,119,1.16,126,0.936,129,0.936,132,2.411,148,1.449,150,1.449,159,1.38,160,1.086,161,1.086,171,1.346,186,1.945,194,1.945,251,1.674,262,1.691,320,1.255,397,2.739,406,2.285,407,1.945,460,2.285,523,2.285,524,2.285,576,2.739,577,2.739,578,3.394,579,2.075,580,4.249,581,4.249,582,4.249,583,3.306,584,3.429,585,3.429,586,3.394,587,3.429,588,3.429,589,3.429,590,3.429,591,2.285,592,2.739,593,3.429,594,3.429,595,3.429,596,3.429,597,2.739,598,2.739]],["title/changelog.html",[579,1.122,599,1.304,600,2.298]],["body/changelog.html",[0,0.521,4,0.7,6,0.798,8,0.334,9,0.798,10,2.91,13,1.125,17,0.618,18,0.461,20,1.125,21,1.541,22,0.958,24,0.04,28,1.496,29,0.461,32,1.095,33,0.461,38,0.824,41,1.348,42,1.729,47,0.631,48,2.168,49,0.514,51,0.606,54,0.618,58,1.399,61,0.713,66,1.348,67,0.334,71,0.737,72,0.798,73,0.394,82,0.737,102,0.027,103,0.027,113,1.297,116,1.211,117,1.541,118,0.958,119,1.147,120,1.125,127,1.095,129,0.461,130,1,139,1.471,145,0.824,146,0.821,155,0.618,156,0.824,158,1.587,160,0.535,166,0.949,168,0.461,171,1.122,179,0.958,181,0.824,190,0.958,192,1.774,193,0.958,203,0.713,204,0.824,206,0.958,210,2.574,211,1.266,214,1.729,222,1.095,223,0.958,227,1.866,231,1.471,234,1.791,235,1.333,241,1.471,243,0.824,267,0.824,281,1.266,288,0.713,302,1.471,306,1.791,325,1.727,329,1.348,330,1.348,331,1.348,339,1.348,364,2.521,365,1.348,374,1.348,375,2.051,387,1.125,414,1.348,435,1.348,442,1.348,453,1.471,457,2.687,461,1.348,465,2.521,466,1.348,501,0.713,505,1.348,508,1.348,515,1.348,524,1.125,556,2.071,572,1.348,578,1.348,583,2.103,586,1.348,591,1.727,592,1.348,601,1.688,602,1.688,603,2.593,604,1.125,605,1.688,606,3.541,607,2.593,608,1.688,609,1.688,610,2.593,611,2.593,612,1.688,613,4.918,614,5.24,615,5.361,616,3.156,617,1.688,618,3.156,619,1.688,620,3.156,621,1.688,622,1.688,623,1.688,624,4.034,625,1.688,626,1.688,627,1.688,628,1.688,629,1.688,630,1.688,631,1.688,632,3.156,633,1.688,634,5.096,635,1.688,636,2.829,637,2.593,638,1.688,639,1.688,640,5.375,641,1.688,642,3.463,643,1.688,644,1.688,645,2.593,646,1.688,647,1.688,648,1.688,649,1.688,650,1.688,651,2.593,652,1.688,653,1.688,654,1.688,655,1.688,656,4.034,657,1.688,658,1.688,659,1.688,660,1.688,661,1.688,662,1.688,663,1.688,664,1.688,665,2.593,666,2.593,667,1.688,668,1.688,669,2.593,670,1.688,671,1.688,672,1.688,673,1.688,674,1.688,675,1.688,676,3.156,677,1.688,678,4.538,679,3.821,680,3.156,681,2.593,682,1.688,683,1.688,684,1.688,685,1.688,686,3.156,687,1.688,688,1.688,689,3.821,690,1.688,691,1.688,692,1.688,693,2.593,694,1.688,695,1.688,696,1.688,697,1.688,698,1.688,699,1.688,700,1.688,701,1.688,702,1.688,703,2.593,704,3.541,705,1.688,706,1.688,707,1.688,708,1.688,709,1.688,710,3.821,711,1.688,712,1.688,713,1.688,714,1.688,715,1.688,716,3.978,717,4.981,718,3.156,719,3.156,720,1.688,721,1.688,722,1.688,723,1.688,724,4.445,725,1.688,726,1.688,727,2.593,728,1.688,729,1.688,730,1.688,731,1.688,732,1.688,733,1.688,734,1.688,735,1.688,736,1.688,737,1.688,738,1.688,739,1.688,740,1.688,741,4.034,742,1.688,743,1.688,744,1.688,745,2.593,746,1.688,747,1.688,748,3.156,749,1.688,750,1.688,751,1.688,752,1.688,753,1.688,754,1.688,755,1.688,756,1.688,757,2.593,758,1.688,759,2.593,760,1.688,761,2.593,762,1.688,763,1.688,764,1.688,765,1.688,766,1.688,767,1.688,768,1.688,769,1.348,770,1.688,771,1.688,772,2.593,773,2.593,774,1.688,775,1.688,776,1.688,777,1.688,778,1.688,779,2.593,780,1.688,781,1.688,782,1.688,783,1.688,784,1.688,785,1.688,786,1.688,787,1.688,788,1.688,789,1.688,790,3.541,791,1.688,792,1.688,793,1.688,794,1.688,795,1.688,796,1.688,797,1.688,798,1.688,799,1.688,800,1.688,801,1.688,802,1.688,803,1.688,804,1.688,805,1.688,806,1.688,807,1.688,808,1.688,809,1.688,810,1.727,811,1.688,812,1.688,813,1.348,814,0.958,815,1.688,816,2.593,817,1.688,818,1.688,819,1.688,820,1.688,821,1.688,822,4.2,823,1.688,824,1.688,825,2.593,826,1.688,827,1.688,828,1.688,829,1.688,830,2.593,831,1.688,832,1.688,833,1.688,834,1.688,835,1.688,836,1.688,837,1.688,838,1.688,839,1.688,840,1.688,841,1.688,842,1.688,843,1.688,844,1.688,845,1.688,846,1.688,847,1.688,848,1.688,849,1.688,850,1.688,851,1.688,852,1.688,853,1.688,854,1.688,855,1.688,856,1.688,857,1.688,858,1.688,859,2.593,860,1.688,861,1.688,862,1.688,863,1.688,864,1.688,865,1.688,866,1.688,867,3.541,868,1.688,869,1.348,870,1.688,871,1.688,872,1.348,873,1.688,874,1.688,875,1.688,876,1.688,877,1.688,878,1.688,879,1.688,880,1.688,881,1.688,882,3.156,883,1.688,884,1.688,885,1.688,886,1.688,887,1.688,888,1.688,889,1.688,890,2.593,891,1.688,892,1.688,893,1.688,894,1.688,895,2.593,896,1.348,897,1.688,898,1.688,899,1.688,900,1.688,901,2.593,902,1.688,903,1.688,904,1.688,905,1.688,906,1.688,907,2.593,908,1.688,909,1.688,910,3.541,911,1.688,912,1.688,913,1.688,914,1.688,915,1.688,916,1.688,917,1.688,918,1.688,919,1.688,920,2.521,921,1.688,922,1.688,923,1.688,924,2.593,925,1.688,926,1.688,927,1.688,928,1.688,929,1.688,930,1.688,931,1.688,932,1.688,933,1.688,934,1.688,935,1.688,936,1.688,937,1.688,938,1.688,939,1.688,940,1.688,941,1.688,942,1.688,943,1.688,944,1.688,945,1.688,946,1.688,947,1.688,948,2.593,949,1.688]],["title/dependencies.html",[810,2.17,950,2.298]],["body/dependencies.html",[24,0.056,79,1.507,80,2.335,102,0.05,103,0.05,148,1.739,150,1.739,155,1.507,642,3.288,810,3.158,951,4.116,952,4.116,953,4.116,954,5.128,955,4.116]],["title/miscellaneous/functions.html",[168,0.889,956,0.971]],["body/miscellaneous/functions.html",[6,1.066,8,1.005,9,0.616,24,0.054,31,0.513,47,0.419,49,0.664,61,2.084,67,0.791,70,1.045,71,1.187,72,1.045,73,1.224,100,1.464,102,0.042,103,0.042,126,1.091,127,2.186,130,1.66,151,2.156,156,1.952,157,2.268,158,1.927,166,1.927,168,1.272,205,1.952,214,2.275,217,1.52,222,1.689,281,2.408,305,1.766,308,1.766,325,3.286,366,2.074,636,3.193,869,3.722,956,1.315,957,3.998,958,5.081,959,3.998,960,3.998,961,3.998,962,3.998,963,3.998,964,3.113,965,3.113,966,4.933,967,3.113,968,4.66,969,3.998,970,3.113,971,3.113,972,3.113,973,3.113]],["title/index.html",[31,0.379,579,1.122,599,1.304]],["body/index.html",[8,0.769,21,1.898,24,0.048,46,1.642,47,0.617,48,2.766,55,2.59,69,3.662,70,0.769,80,2.205,102,0.048,103,0.048,113,1.678,115,1.785,116,1.452,129,1.061,147,2.238,183,1.423,189,1.898,192,1.642,211,1.898,227,1.898,228,2.205,453,2.205,456,3.105,457,3.054,460,2.59,525,3.662,551,3.105,579,2.238,591,2.59,599,2.205,604,2.59,769,3.105,814,2.205,974,3.887,975,3.887,976,3.105,977,3.887,978,3.887,979,3.887,980,3.887,981,3.887,982,3.887,983,3.887,984,3.887,985,4.584,986,4.584,987,3.887,988,3.105]],["title/license.html",[579,1.122,599,1.304,814,1.304]],["body/license.html",[4,0.735,9,0.735,20,2.477,24,0.047,47,0.601,102,0.047,103,0.047,114,2.109,149,1.815,188,2.109,267,1.815,548,3.822,562,2.97,604,2.477,716,2.97,813,3.964,814,2.109,896,3.566,976,3.822,988,2.97,989,4.785,990,3.718,991,3.718,992,3.718,993,4.464,994,3.718,995,3.718,996,3.718,997,3.718,998,4.464,999,3.718,1000,5.29,1001,3.718,1002,4.464,1003,3.718,1004,3.718,1005,3.718,1006,3.718,1007,3.718,1008,3.718,1009,3.718,1010,3.718,1011,3.718,1012,3.718,1013,3.718,1014,3.718,1015,3.718,1016,4.464,1017,4.464,1018,3.718,1019,3.718,1020,4.464,1021,3.718,1022,3.718,1023,3.718,1024,3.718,1025,3.718,1026,3.718,1027,3.718,1028,3.718,1029,3.718,1030,3.718,1031,3.718,1032,3.718,1033,3.718,1034,3.718,1035,3.718,1036,3.718,1037,3.718,1038,3.718,1039,3.718]],["title/modules.html",[501,1.546]],["body/modules.html",[24,0.051,102,0.051,103,0.051,501,1.79,502,2.823,1040,4.237]],["title/overview.html",[1041,2.923]],["body/overview.html",[0,0.69,18,1.142,24,0.05,83,0.828,102,0.05,103,0.05,320,1.532,501,1.768,872,3.343,920,3.822,1041,3.343,1042,4.785]],["title/miscellaneous/typealiases.html",[956,0.971,1043,3.257]],["body/miscellaneous/typealiases.html",[6,0.964,24,0.048,31,0.64,40,2.236,47,0.522,49,0.617,51,1.138,70,0.906,102,0.048,103,0.048,105,2.202,106,2.202,113,1.784,115,1.677,123,1.64,126,1.06,129,1.06,151,2.458,158,1.421,163,2.598,164,2.598,165,2.764,166,1.421,167,2.764,168,1.421,169,2.202,170,2.202,173,2.764,216,2.202,217,1.895,366,2.586,367,3.101,956,1.64,1044,3.882,1045,3.882,1046,4.873,1047,3.882]],["title/miscellaneous/variables.html",[956,0.971,1048,2.602]],["body/miscellaneous/variables.html",[6,0.968,9,0.775,17,1.791,24,0.056,29,1.258,31,0.647,49,0.62,67,0.775,102,0.048,103,0.048,129,1.07,130,1.55,159,1.379,161,1.242,320,1.435,407,2.776,523,3.26,576,3.132,577,3.909,583,2.612,597,3.132,598,3.132,956,1.656,1048,3.132,1049,4.893,1050,4.607,1051,4.607,1052,3.921,1053,3.921,1054,3.921]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["07c103e",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["0d509d0",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["0f0b48d",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["0f566ad",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1042,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["15ce1e",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["17f368e",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":920,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2018",{"_index":716,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["2e39369",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["2ea841b",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["2f2675e",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":872,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["35a48b",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["3bfc1b0",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["3ed6e3",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["40",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["48f2da4",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["4de02a4",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["51ca66",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["5d90b63",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["60377e5",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["6148a68",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["63f83a5",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["781f009",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["8c9d268",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":88,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["_registeronchange(fn",{"_index":256,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["_setparent(par",{"_index":318,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["_updatevalue(opt",{"_index":282,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["_valuechang",{"_index":242,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["a0bde9b",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["a0de621",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["aadad1b",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["aba7bd1",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":1015,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":586,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["accept",{"_index":388,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["access",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":375,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["accessor.direct",{"_index":512,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["accessor.directive.t",{"_index":7,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":62,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:49",{"_index":52,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:60",{"_index":65,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:69",{"_index":75,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessors/accessor",{"_index":521,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1034,"title":{},"body":{"license.html":{}}}],["ad",{"_index":10,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["adapt",{"_index":524,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["adapter.interfac",{"_index":162,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["adapter.interface.t",{"_index":577,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["adapter/rout",{"_index":161,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":453,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["addit",{"_index":225,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["addqueryparam(direct",{"_index":447,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["aea857a",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["afeae98",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":391,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["alia",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":1044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["alway",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["analyt",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1009,"title":{},"body":{"license.html":{}}}],["angular",{"_index":194,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["angular/common",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":79,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["angular/form",{"_index":80,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":148,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["anoth",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":21,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["appli",{"_index":15,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["approach",{"_index":975,"title":{},"body":{"index.html":{}}}],["aris",{"_index":1038,"title":{},"body":{"license.html":{}}}],["around",{"_index":587,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["array",{"_index":193,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["array.isarray(valueaccessor",{"_index":564,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["assert",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":1001,"title":{},"body":{"license.html":{}}}],["attribut",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":1028,"title":{},"body":{"license.html":{}}}],["autocomplet",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["b19a81",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["bab1e45",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["badg",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["bb15442",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["bbaf6e4",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["befor",{"_index":462,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["benefit",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":111,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["bf6c355",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":57,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["bit",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":100,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{}}}],["booleanparam",{"_index":329,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(opt",{"_index":332,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":1040,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["buffer",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["builder.service.t",{"_index":323,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:111",{"_index":344,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:35",{"_index":335,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:57",{"_index":347,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:75",{"_index":342,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:93",{"_index":333,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["built",{"_index":572,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["builtinaccessor",{"_index":566,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["bundl",{"_index":238,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["button",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":992,"title":{},"body":{"license.html":{}}}],["c",{"_index":990,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["c6b3a1e",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["c6cd845",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["ca45e43",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":68,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["can't",{"_index":554,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["carri",{"_index":247,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["case",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["cfa25df",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["chanc",{"_index":459,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chang",{"_index":42,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["changefn(this.valu",{"_index":279,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefn(valu",{"_index":313,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["changefunct",{"_index":250,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["changelog",{"_index":600,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":997,"title":{},"body":{"license.html":{}}}],["check",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirect",{"_index":513,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["child",{"_index":389,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chmod",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["choos",{"_index":559,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["claim",{"_index":1031,"title":{},"body":{"license.html":{}}}],["class",{"_index":83,"title":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"overview.html":{}}}],["clean",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["close",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":985,"title":{},"body":{"index.html":{}}}],["collect",{"_index":241,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["combin",{"_index":212,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["combinedparam",{"_index":488,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["combinewith",{"_index":234,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["come",{"_index":200,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["command",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["compar",{"_index":151,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":222,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["comparison",{"_index":219,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["complet",{"_index":138,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["complex",{"_index":345,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["compon",{"_index":13,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["component'",{"_index":59,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["concatmap",{"_index":401,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["concatmap(param",{"_index":481,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["condit",{"_index":1014,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":986,"title":{},"body":{"index.html":{}}}],["config",{"_index":508,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeropt",{"_index":528,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configur",{"_index":340,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamNameDirective.html":{}}}],["connect",{"_index":114,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"license.html":{}}}],["consid",{"_index":206,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["consist",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["consol",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":262,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["constructor(opt",{"_index":122,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["constructor(par",{"_index":530,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["constructor(queryparam",{"_index":376,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(routeradapt",{"_index":396,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["content",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1035,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":983,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":984,"title":{},"body":{"index.html":{}}}],["control",{"_index":116,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["control'",{"_index":40,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["controlvalueaccessor",{"_index":12,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["controlvalueaccessor]{@link",{"_index":538,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["controlvalueaccessordirect",{"_index":1,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{}}}],["convent",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":164,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["copi",{"_index":813,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copyright",{"_index":989,"title":{},"body":{"license.html":{}}}],["core",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":465,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["creat",{"_index":325,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["createbooleandeseri",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleandeserializer(defaultvalu",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanseri",{"_index":959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanserializer(defaultvalu",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createemptyondeseri",{"_index":156,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["createemptyondeserializer(deseri",{"_index":308,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonseri",{"_index":157,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createemptyonserializer(seri",{"_index":305,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["createnumberdeseri",{"_index":960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberdeserializer(defaultvalu",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberseri",{"_index":961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberserializer(defaultvalu",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createqueryparam(queryparam",{"_index":371,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["createstringdeseri",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringdeserializer(defaultvalu",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringseri",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringserializer(defaultvalu",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":46,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["custom",{"_index":573,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customaccessor",{"_index":567,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["customparam",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["d1d0a1b",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":1032,"title":{},"body":{"license.html":{}}}],["data",{"_index":978,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":231,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["deal",{"_index":1002,"title":{},"body":{"license.html":{}}}],["debounc",{"_index":199,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["debouncedqueu",{"_index":469,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.next(newvalu",{"_index":477,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncedqueue$.pip",{"_index":470,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["debouncetim",{"_index":204,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["debouncetime(queryparam.debouncetim",{"_index":472,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dec2d0f",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["declar",{"_index":525,"title":{},"body":{"modules/QueryParamModule.html":{},"index.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deseri",{"_index":348,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_boolean_seri",{"_index":349,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_deseri",{"_index":350,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_seri",{"_index":351,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_deseri",{"_index":352,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_seri",{"_index":353,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["defaultaccessor",{"_index":565,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["defaultcontrolvalueaccessordirect",{"_index":514,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["defaultrouteradapt",{"_index":522,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["defaultrouteropt",{"_index":523,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["defaultvalu",{"_index":966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defin",{"_index":51,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["definit",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["demo",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["demonstr",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":810,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["deploy",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["describ",{"_index":106,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["descript",{"_index":8,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deseri",{"_index":166,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserialize(queryparam",{"_index":495,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["design",{"_index":979,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":415,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["determin",{"_index":216,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["didn't",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":186,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["dir.nam",{"_index":437,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["direct",{"_index":0,"title":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"overview.html":{}}}],["directive.nam",{"_index":451,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor",{"_index":454,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.registeronchange((newvalu",{"_index":476,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(newvalu",{"_index":439,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directive.valueaccessor.writevalue(queryparam.valu",{"_index":468,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["directli",{"_index":555,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["disabl",{"_index":41,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["disabledchang",{"_index":37,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribut",{"_index":1007,"title":{},"body":{"license.html":{}}}],["doc",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":604,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":386,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["domain",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["e.g",{"_index":184,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["e0e875b",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["e100621",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["e57e700",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":246,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["easi",{"_index":974,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":170,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["element",{"_index":387,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["elementref",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":135,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["emitev",{"_index":272,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["empti",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["emptyon",{"_index":214,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enough",{"_index":561,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["enqueuenavigation(param",{"_index":484,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ensur",{"_index":139,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["entir",{"_index":442,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["equal",{"_index":217,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["equival",{"_index":44,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["error",{"_index":306,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["error(`combinewith",{"_index":299,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`comparewith",{"_index":296,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`could",{"_index":449,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`deseri",{"_index":294,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`emptyon",{"_index":301,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`mor",{"_index":571,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`no",{"_index":455,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`pleas",{"_index":289,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`queryparamnam",{"_index":547,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["error(`seri",{"_index":291,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["error(`y",{"_index":421,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["essenti",{"_index":108,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["event",{"_index":20,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["eventemitt",{"_index":50,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exampl",{"_index":591,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["except",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exclud",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["execut",{"_index":223,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["exist",{"_index":590,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["explan",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["explicitli",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":82,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["exporta",{"_index":81,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["expost",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1022,"title":{},"body":{"license.html":{}}}],["extend",{"_index":178,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["extra",{"_index":251,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["f02d26d",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["f27f369",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["f394fa6",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["f4c3365",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["f526b61",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":276,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["fce4ec2",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["featur",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"license.html":{}}}],["filter",{"_index":977,"title":{},"body":{"index.html":{}}}],["find",{"_index":450,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["fire",{"_index":39,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["first",{"_index":364,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fit",{"_index":1025,"title":{},"body":{"license.html":{}}}],["fix",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":97,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fnchang",{"_index":87,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fntouch",{"_index":89,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["follow",{"_index":1013,"title":{},"body":{"license.html":{}}}],["forget",{"_index":452,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":115,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format",{"_index":264,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["forroot",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":581,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["forwardref",{"_index":27,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["found",{"_index":260,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["fragment",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":996,"title":{},"body":{"license.html":{}}}],["function",{"_index":168,"title":{"miscellaneous/functions.html":{}},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":1012,"title":{},"body":{"license.html":{}}}],["gener",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["get",{"_index":599,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["get(queryparamnam",{"_index":261,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["getparamsforvalue(queryparam",{"_index":486,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["getvalu",{"_index":382,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":61,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["global",{"_index":339,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["globalrouteropt",{"_index":398,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["glue",{"_index":110,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["good",{"_index":560,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["googl",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":995,"title":{},"body":{"license.html":{}}}],["green",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":235,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["group(queryparam",{"_index":334,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.direct",{"_index":511,"title":{},"body":{"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.directive.t",{"_index":385,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:41",{"_index":400,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:45",{"_index":399,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupopt",{"_index":498,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["guid",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["guidelin",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["hasarrayserialization(queryparam",{"_index":412,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["hasarrayvalue(queryparam",{"_index":411,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["hash",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["haven't",{"_index":422,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["head",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["headlin",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":464,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["herebi",{"_index":994,"title":{},"body":{"license.html":{}}}],["histori",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["hoc",{"_index":11,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["holder",{"_index":1029,"title":{},"body":{"license.html":{}}}],["hope",{"_index":558,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["host",{"_index":14,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["https://angular.io/api/forms/controlvalueaccessor",{"_index":539,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#l186",{"_index":553,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["https://www.app.io?param=a&param=b&param=c",{"_index":196,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["i.",{"_index":221,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["icon",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["ignor",{"_index":369,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["implement",{"_index":22,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["impli",{"_index":1023,"title":{},"body":{"license.html":{}}}],["import",{"_index":78,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["improv",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":976,"title":{},"body":{"index.html":{},"license.html":{}}}],["independ",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":31,"title":{"index.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":179,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["inform",{"_index":69,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"index.html":{}}}],["ingo",{"_index":991,"title":{},"body":{"license.html":{}}}],["initi",{"_index":435,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["inject",{"_index":320,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(ng_value_accessor",{"_index":543,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inject(ngqp_router_adapt",{"_index":416,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["inject(ngqp_router_opt",{"_index":417,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["injectiontoken",{"_index":584,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_adapt",{"_index":596,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_opt",{"_index":598,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":203,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["input('queryparamgroup",{"_index":413,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamnam",{"_index":542,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["insid",{"_index":187,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["instal",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["instanc",{"_index":236,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["instanceof",{"_index":372,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["instead",{"_index":636,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["instruct",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["interfac",{"_index":18,"title":{"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"overview.html":{}}}],["intern",{"_index":92,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["intuit",{"_index":980,"title":{},"body":{"index.html":{}}}],["invok",{"_index":224,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunct",{"_index":152,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(combinewith",{"_index":298,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(comparewith",{"_index":295,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(deseri",{"_index":293,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["isfunction(seri",{"_index":290,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismiss",{"_index":153,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(combinewith",{"_index":297,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(direct",{"_index":438,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(emptyon",{"_index":300,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(param",{"_index":287,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam",{"_index":274,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismissing(queryparam.combinewith",{"_index":489,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(queryparam.debouncetim",{"_index":471,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ismissing(this.par",{"_index":315,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ismultiqueryparam(queryparam",{"_index":409,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["isn't",{"_index":556,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["item",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":245,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["kind",{"_index":1021,"title":{},"body":{"license.html":{}}}],["land",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["let'",{"_index":557,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["level",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["liabil",{"_index":1033,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":1030,"title":{},"body":{"license.html":{}}}],["licens",{"_index":814,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limit",{"_index":896,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":171,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["lint",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":181,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["listen",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["liter",{"_index":142,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["locat",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["loos",{"_index":218,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["loose_identity_compar",{"_index":354,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["made",{"_index":220,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["make",{"_index":457,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["mandatori",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["manipul",{"_index":589,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["map",{"_index":402,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map((newvalu",{"_index":473,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["map(queryparam.seri",{"_index":493,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["mappedqueryparam",{"_index":359,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["margin",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["match",{"_index":103,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mayb",{"_index":363,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["mean",{"_index":207,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["mention",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["merchant",{"_index":1024,"title":{},"body":{"license.html":{}}}],["merg",{"_index":267,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"license.html":{}}}],["metadata",{"_index":23,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["method",{"_index":32,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["millisecond",{"_index":197,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["mirror",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["misalign",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["miscellan",{"_index":956,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":988,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":54,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["modifi",{"_index":1005,"title":{},"body":{"license.html":{}}}],["modul",{"_index":501,"title":{"modules/QueryParamModule.html":{},"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":509,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["moment",{"_index":987,"title":{},"body":{"index.html":{}}}],["move",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":198,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["multi",{"_index":28,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["multipl",{"_index":190,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["multiselectcontrolvalueaccessordirect",{"_index":515,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["multiselectoptiondirect",{"_index":516,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["name",{"_index":71,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.direct",{"_index":408,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["name.directive.t",{"_index":529,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:23",{"_index":534,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:26",{"_index":532,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name]{@link",{"_index":540,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["navig",{"_index":578,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["navigate(queryparam",{"_index":594,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["necessari",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":466,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["new",{"_index":67,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newvalu",{"_index":175,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["ng",{"_index":769,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":25,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngmodul",{"_index":510,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["ngondestroy",{"_index":444,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["ngoninit",{"_index":419,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngqp",{"_index":48,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["ngqp/coreread",{"_index":982,"title":{},"body":{"index.html":{}}}],["ngqp_built_in_accessor",{"_index":537,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_built_in_accessors.some(curr",{"_index":570,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["ngqp_router_adapt",{"_index":406,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{}}}],["ngqp_router_opt",{"_index":407,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["noninfring",{"_index":1027,"title":{},"body":{"license.html":{}}}],["normal",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["notabl",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":137,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["notic",{"_index":1016,"title":{},"body":{"license.html":{}}}],["notifychang",{"_index":34,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(valu",{"_index":63,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifytouch",{"_index":35,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":127,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":205,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{}}}],["numbercontrolvalueaccessor",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirect",{"_index":517,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["numericparam",{"_index":330,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numericparam(opt",{"_index":341,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object",{"_index":244,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.keys(queryparams).foreach(queryparamnam",{"_index":360,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["object.keys(this.queryparamgroup.queryparams).foreach(queryparamnam",{"_index":428,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["object.keys(this.queryparams).foreach(queryparamnam",{"_index":266,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.keys(value).foreach(queryparamnam",{"_index":273,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["object.values(this.queryparams).foreach(queryparam",{"_index":254,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["observ",{"_index":132,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["obtain",{"_index":999,"title":{},"body":{"license.html":{}}}],["on",{"_index":243,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["onc",{"_index":191,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["onchangefunct",{"_index":176,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["ondestroy",{"_index":395,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["oninit",{"_index":394,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["onlyself",{"_index":314,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["opt",{"_index":125,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["option",{"_index":72,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["opts.emitev",{"_index":277,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.multi",{"_index":286,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["opts.onlyself",{"_index":316,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["order",{"_index":588,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["otherwis",{"_index":1037,"title":{},"body":{"license.html":{}}}],["out",{"_index":1039,"title":{},"body":{"license.html":{}}}],["output",{"_index":36,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchang",{"_index":85,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('valuechang",{"_index":84,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outsid",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":338,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["overview",{"_index":1041,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":280,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["packag",{"_index":950,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":227,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["pagin",{"_index":228,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["param",{"_index":119,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["param(opt",{"_index":343,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.module.t",{"_index":503,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["param.module.ts:57",{"_index":507,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["paramcombin",{"_index":173,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeseri",{"_index":167,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["paramet",{"_index":70,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["parameter'",{"_index":248,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["parammap",{"_index":585,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["paramseri",{"_index":165,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":285,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["parma",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1026,"title":{},"body":{"license.html":{}}}],["pass",{"_index":182,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["patchvalu",{"_index":374,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(valu",{"_index":271,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["path",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":993,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1011,"title":{},"body":{"license.html":{}}}],["person",{"_index":998,"title":{},"body":{"license.html":{}}}],["perspect",{"_index":43,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["phrase",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":393,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["pleas",{"_index":456,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["png",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["portion",{"_index":1019,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["previousvalu",{"_index":174,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["primari",{"_index":336,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["privat",{"_index":86,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["process",{"_index":392,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["programmat",{"_index":201,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["project",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":595,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["proper",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":117,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["provid",{"_index":9,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":355,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["proxi",{"_index":16,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["public",{"_index":33,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["publish",{"_index":1006,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":562,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["push",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["q",{"_index":185,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queri",{"_index":183,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["queryparam",{"_index":104,"title":{"classes/QueryParam.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam#param",{"_index":541,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["queryparam(opt",{"_index":370,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparam._registeronchange((newvalu",{"_index":429,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam._setparent(thi",{"_index":255,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam._updatevalu",{"_index":441,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.combinewith(queryparam.valu",{"_index":490,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.deserialize(valu",{"_index":497,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.multi",{"_index":410,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.param",{"_index":491,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.serialize(valu",{"_index":494,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparam.setvalue(valu",{"_index":275,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparam.valu",{"_index":440,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparambuild",{"_index":321,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroup",{"_index":146,"title":{"classes/QueryParamGroup.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["queryparamgroup#valuechang",{"_index":263,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamgroup(mappedqueryparam",{"_index":368,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirect",{"_index":384,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparammap",{"_index":593,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["queryparammap.get(queryparam.param",{"_index":434,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammap.getall(queryparam.param",{"_index":433,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["queryparammodul",{"_index":502,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"modules.html":{}}}],["queryparamnam",{"_index":249,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamnamedirect",{"_index":390,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparamopt",{"_index":123,"title":{"interfaces/QueryParamOpts.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamopts#combinewith",{"_index":172,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamopts#emptyon",{"_index":215,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamopts#multi",{"_index":213,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamopts#param",{"_index":284,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["queryparamoptsinput",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["queryparam}",{"_index":357,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queue",{"_index":414,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["quick",{"_index":981,"title":{},"body":{"index.html":{}}}],["rangecontrolvalueaccessor",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirect",{"_index":518,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["raw",{"_index":230,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["read",{"_index":460,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"interfaces/RouterOptions.html":{},"index.html":{}}}],["readm",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["readonli",{"_index":118,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["receiv",{"_index":292,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["recommend",{"_index":327,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["record",{"_index":265,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["recurs",{"_index":233,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["refer",{"_index":533,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["regist",{"_index":463,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["registeronchange(fn",{"_index":95,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":98,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registri",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["releas",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":269,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["remov",{"_index":210,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["renam",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":583,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repres",{"_index":163,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["represent",{"_index":112,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["requir",{"_index":17,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resembl",{"_index":551,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"index.html":{}}}],["reset",{"_index":226,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["respect",{"_index":268,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["respons",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1003,"title":{},"body":{"license.html":{}}}],["result",{"_index":102,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":258,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["return",{"_index":73,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["rework",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1004,"title":{},"body":{"license.html":{}}}],["root",{"_index":356,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["rout",{"_index":461,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["router",{"_index":160,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["router#navig",{"_index":582,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["routeradapt",{"_index":397,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"interfaces/RouterOptions.html":{}}}],["routeropt",{"_index":159,"title":{"interfaces/RouterOptions.html":{}},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":232,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["rxj",{"_index":150,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":405,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["same",{"_index":367,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize=tru",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["schemat",{"_index":642,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["screen",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":129,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["selectcontrolvalueaccessor",{"_index":552,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["selectcontrolvalueaccessordirect",{"_index":519,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selectoptiondirect",{"_index":520,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selector",{"_index":30,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["selectvalueaccessor(valueaccessor",{"_index":563,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":535,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1010,"title":{},"body":{"license.html":{}}}],["serial",{"_index":158,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serialize(queryparam",{"_index":492,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["serv",{"_index":109,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["servic",{"_index":324,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["set",{"_index":192,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["setdisabledst",{"_index":45,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdis",{"_index":99,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["setupnavigationqueu",{"_index":479,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["setupqueryparam",{"_index":574,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["setvalu",{"_index":120,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(valu",{"_index":141,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["shall",{"_index":1017,"title":{},"body":{"license.html":{}}}],["shebang",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":169,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["simpl",{"_index":326,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["simpli",{"_index":580,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["singl",{"_index":107,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["skeleton",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["skipself",{"_index":536,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["small",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":1000,"title":{},"body":{"license.html":{}}}],["sort",{"_index":229,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{}}}],["spec\\.t",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":259,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["specifi",{"_index":549,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["split",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["src/.../model.t",{"_index":1046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../router",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.t",{"_index":958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.t",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/control",{"_index":5,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/model.t",{"_index":105,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/model.ts:135",{"_index":378,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:143",{"_index":377,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:168",{"_index":379,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:183",{"_index":383,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:199",{"_index":380,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:223",{"_index":381,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["src/lib/model.ts:260",{"_index":134,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:265",{"_index":131,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:268",{"_index":128,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:286",{"_index":124,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/model.ts:341",{"_index":143,"title":{},"body":{"classes/QueryParam.html":{}}}],["src/lib/queri",{"_index":322,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["src/lib/rout",{"_index":576,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.t",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/util.t",{"_index":1047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/test.t",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standard",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":579,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/RouterOptions.html":{},"index.html":{}}}],["state",{"_index":60,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["static",{"_index":504,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["string",{"_index":126,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringparam",{"_index":331,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(opt",{"_index":346,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["style",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":149,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"license.html":{}}}],["sublicens",{"_index":1008,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":483,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["subscribe(param",{"_index":475,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["substanti",{"_index":1018,"title":{},"body":{"license.html":{}}}],["success",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":240,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["suppli",{"_index":423,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":302,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["sure",{"_index":458,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["svg",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":467,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["synchron",{"_index":147,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["syntax",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":64,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["tabl",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":189,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"index.html":{}}}],["takeuntil",{"_index":403,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["takeuntil(this.destroy",{"_index":474,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["tap",{"_index":404,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["target",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["testrouteradapt",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navig",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":202,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this._valuechanges.asobserv",{"_index":133,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this._valuechanges.next(this.valu",{"_index":283,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":278,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.changefunctions.push(fn",{"_index":257,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.combinewith",{"_index":311,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.createqueryparam(queryparam",{"_index":361,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.debouncetim",{"_index":310,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deseri",{"_index":307,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.deserialize(queryparam",{"_index":432,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.complet",{"_index":446,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.destroy$.next",{"_index":445,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.find(dir",{"_index":436,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.directives.push(direct",{"_index":478,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.disabledchange.emit(isdis",{"_index":101,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.enqueuenavigation(param",{"_index":427,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.enqueuenavigation(this.getparamsforvalue(queryparam",{"_index":430,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.fnchang",{"_index":96,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fnchange(valu",{"_index":90,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fntouch",{"_index":91,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.getparamsforvalue(queryparam",{"_index":426,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.globalrouteropt",{"_index":500,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.multi",{"_index":309,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.nam",{"_index":546,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.par",{"_index":319,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.param",{"_index":303,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent._updatevalue(opt",{"_index":317,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.parent.addqueryparam(thi",{"_index":575,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.queryparam",{"_index":252,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.queryparamgroup",{"_index":420,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._registeronchange((valu",{"_index":424,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup._updatevalu",{"_index":443,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(directive.nam",{"_index":448,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.get(queryparamnam",{"_index":425,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queryparamgroup.routeropt",{"_index":499,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.next(param",{"_index":485,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.queue$.pip",{"_index":480,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.navigate(param",{"_index":482,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeradapter.queryparammap.subscribe(queryparammap",{"_index":431,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.routeropt",{"_index":253,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.selectvalueaccessor(valueaccessor",{"_index":545,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.seri",{"_index":304,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.serialize(queryparam",{"_index":487,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupnavigationqueu",{"_index":418,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.setupqueryparam",{"_index":550,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.stringparam",{"_index":373,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["this.valu",{"_index":312,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["this.valueaccessor",{"_index":544,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.valuechange.emit(valu",{"_index":94,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["through",{"_index":19,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["throw",{"_index":288,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["tick",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":195,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["toc",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":362,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["togeth",{"_index":239,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["token",{"_index":597,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1036,"title":{},"body":{"license.html":{}}}],["touch",{"_index":76,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["travi",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":29,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":366,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":49,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealia",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["typealias",{"_index":1043,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typo",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["u",{"_index":180,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["unchang",{"_index":270,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["undefin",{"_index":281,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["uniqu",{"_index":358,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["unit",{"_index":237,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["unnecessari",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["unpack",{"_index":177,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["unsubscrib",{"_index":140,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["up",{"_index":145,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["updat",{"_index":58,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["url",{"_index":113,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["us",{"_index":47,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["useclass",{"_index":526,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["useexist",{"_index":26,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["user",{"_index":77,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["usevalu",{"_index":527,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["util",{"_index":155,"title":{},"body":{"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"dependencies.html":{}}}],["valid",{"_index":365,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["valu",{"_index":6,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["valueaccessor",{"_index":531,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessor.constructor",{"_index":569,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valueaccessors.foreach(valueaccessor",{"_index":568,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["valuechang",{"_index":38,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{}}}],["values.map(queryparam.deseri",{"_index":496,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["variabl",{"_index":1048,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versa",{"_index":209,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["version",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["vice",{"_index":208,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["view",{"_index":55,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{},"index.html":{}}}],["void",{"_index":74,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{}}}],["wait",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["warranti",{"_index":1020,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":328,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["websit",{"_index":592,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["whenev",{"_index":136,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["whether",{"_index":188,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"license.html":{}}}],["widget",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["wire",{"_index":144,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["withconfig",{"_index":505,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["withconfig(config",{"_index":506,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["without",{"_index":548,"title":{},"body":{"directives/QueryParamNameDirective.html":{},"license.html":{}}}],["word",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":211,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"changelog.html":{},"index.html":{}}}],["wrap",{"_index":869,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["wraptrycatch",{"_index":154,"title":{},"body":{"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["write",{"_index":66,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["writevalu",{"_index":56,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["writevalue(valu",{"_index":93,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["written",{"_index":53,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{}}}],["x",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["xxxparam",{"_index":337,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["yarn",{"_index":902,"title":{},"body":{"changelog.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                Provides an ad-hoc ControlValueAccessor to a component.\nThis directive provides a ControlValueAccessor for the host on which it is applied\nby proxying the required interface through events and an API.\n \n \n            \n\n            \n                Implements\n            \n            \n                        ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                notifyTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabledChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                    \n                        Fired when the control's disabled change should change.\nFrom the ControlValueAccessor perspective, this is the equivalent of\nsetDisabledState.\nThis is currently not used by ngqp.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                    \n                        Fired when a value should be written (model -> view).\nFrom the ControlValueAccessor perspective, this is the equivalent of\nwriteValue. You should bind to this event and update your component's\nstate with the given value.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:38\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyChange(value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:60\n                            \n                        \n\n\n                \n                    \n                            Write a new value to the model (view -> model)\nWhen your component's value changes, call this method to inform\nthe model about the change.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/control-value-accessor.directive.ts:69\n                            \n                        \n\n\n                \n                    \n                            Inform that the component has been touched by the user.\nThis is currently not used by ngqp.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Provides an ad-hoc ControlValueAccessor to a component.\n *\n * This directive provides a ControlValueAccessor for the host on which it is applied\n * by proxying the required interface through events and an API.\n *\n *\n *     \n *     \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /**\n     * Fired when a value should be written (model -> view).\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * writeValue. You should bind to this event and update your component's\n     * state with the given value.\n     */\n    @Output('valueChange')\n    public valueChange = new EventEmitter();\n\n    /**\n     * Fired when the control's disabled change should change.\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * setDisabledState.\n     *\n     * This is currently not used by ngqp.\n     */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /**\n     * Write a new value to the model (view -> model)\n     *\n     * When your component's value changes, call this method to inform\n     * the model about the change.\n     */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    /**\n     * Inform that the component has been touched by the user.\n     *\n     * This is currently not used by ngqp.\n     */\n    public notifyTouched(): void {\n        this.fnTouched();\n    }\n\n    /** @internal */\n    public writeValue(value: T) {\n        this.valueChange.emit(value);\n    }\n\n    /** @internal */\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    /** @internal */\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    /** @internal */\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParam.html":{"url":"classes/QueryParam.html","title":"class - QueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                Describes a single parameter.\nThis is the description of a single parameter and essentially serves\nas the glue between its representation in the URL and its connection\nto a form control.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                param\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: QueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:286\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        param:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:268\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:265\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:260\n                            \n                        \n\n                \n                    \n                        Emits the current value of this parameter whenever it changes.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: T | null, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:341\n                            \n                        \n\n\n                \n                    \n                            Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    T | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\n\n/**\n * A serializer defines how the represented form control's\n * value is converted into a string to be used in the URL.\n */\nexport type ParamSerializer = (model: T) => string;\n\n/**\n * A deserializer defines how a URL parameter is converted\n * into the represented form control's value.\n */\nexport type ParamDeserializer = (value: string) => T;\n\n/**\n * Defines a function which describes side effects on other\n * URL parameters.\n *\n * See {@link QueryParamOpts#combineWith}.\n */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** @internal */\nexport type OnChangeFunction = (value: T) => void;\n\n/** @internal */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOpts {\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    param: string;\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer>;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer>;\n\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi?: boolean;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     *\n     * NOTE: This does currently not work in combination with {@link QueryParamOpts#multi}.\n     */\n    emptyOn?: Unpack;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator>;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * Groups multiple {@link QueryParam} instances to a single unit.\n *\n * This \"bundles\" multiple parameters together such that changes can be emitted as a\n * complete unit. Collecting parameters into a group is required for the synchronization\n * to and from the URL.\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject>();\n\n    /**\n     * Emits the values of all parameters in this group whenever at least one changes.\n     *\n     * This observable emits an object keyed by the {@QueryParam} names where each key\n     * carries the current value of the represented parameter. It emits whenever at least\n     * one parameter's value is changed.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable> = this._valueChanges.asObservable();\n\n    /** @internal */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** @internal */\n    public readonly routerOptions: RouterOptions;\n\n    private changeFunctions: OnChangeFunction>[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction>): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Retrieves a specific {@link QueryParam} from this group by name.\n     *\n     * This returns the {@link QueryParam} with the given name, or `null`\n     * if no parameter with that name is found in this group.\n     *\n     * @param queryParamName The name of the parameter instance to retrieve.\n     */\n    public get(queryParamName: string): QueryParam | null {\n        const param = this.queryParams[ queryParamName ];\n        if (!param) {\n            return null;\n        }\n\n        return param;\n    }\n\n    /**\n     * The current value of this group.\n     *\n     * See {@link QueryParamGroup#valueChanges} for a description of the format of\n     * the value.\n     */\n    public get value(): Record {\n        const value: Record = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * Updates the value of this group by merging it in.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value remains unchanged.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public patchValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * Updates the value of this group by overwriting it.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value is set to `undefine`.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public setValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /** See {@link QueryParamOpts#param}. */\n    public readonly param: string | null;\n\n    /** @internal */\n    public readonly serialize: ParamSerializer>;\n\n    /** @internal */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** @internal */\n    public readonly multi: boolean;\n\n    /** @internal */\n    public readonly debounceTime: number | null;\n\n    /** @internal */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to create parameters and groups.\nThis service provides a simple API to create QueryParamGroup and QueryParam\ninstances and is the recommended way to set them up.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numericParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            booleanParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        booleanParam(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Create a new parameter of type boolean.\nSee QueryParamOpts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        group(queryParams: literal type, extras: RouterOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Creates a new QueryParamGroup.\nThis is the primary method to create a new group of parameters. Pass a list of\nQueryParam instances by using the xxxParam methods.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                List of {\n\n                                                        \n                                                \n                                                \n                                                        extras\n                                                        \n                                                                    RouterOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                Additional parameters for this group, overriding global configuration.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParamGroup\n\n                            \n                                \n                                    The new {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericParam(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Create a new parameter of type number.\nSee QueryParamOpts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            param\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        param(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:111\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a new parameter for a complex type.\nSee QueryParamOpts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stringParam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stringParam(opts: QueryParamOpts)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param-builder.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Create a new parameter of type string.\nSee QueryParamOpts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                        \n                                                                    QueryParamOpts\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryParam, QueryParamOpts, QueryParamGroup } from './model';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\n\n/**\n * Service to create parameters and groups.\n *\n * This service provides a simple API to create {@link QueryParamGroup} and {@link QueryParam}\n * instances and is the recommended way to set them up.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * Creates a new {@link QueryParamGroup}.\n     *\n     * This is the primary method to create a new group of parameters. Pass a list of\n     * {@link QueryParam} instances by using the `xxxParam` methods.\n     *\n     * @param queryParams List of {@link QueryParam}s keyed by a unique name.\n     * @param extras Additional parameters for this group, overriding global configuration.\n     * @returns The new {@link QueryParamGroup}.\n     */\n    public group(\n        queryParams: { [ name: string ]: QueryParam | string },\n        extras: RouterOptions = {}\n    ): QueryParamGroup {\n        const mappedQueryParams: { [ queryParamName: string ]: QueryParam } = {};\n        Object.keys(queryParams).forEach(queryParamName => {\n            mappedQueryParams[ queryParamName ] = this.createQueryParam(queryParams[ queryParamName ]);\n        });\n\n        // TODO Maybe we should first validate that no two queryParams defined the same \"param\".\n        return new QueryParamGroup(mappedQueryParams, extras);\n    }\n\n    /** @ignore */\n    public stringParam(opts: QueryParamOpts & { multi: true }): QueryParam;\n    /** @ignore */\n    public stringParam(opts: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `string`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public stringParam(opts: QueryParamOpts): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /** @ignore */\n    public numericParam(opts: QueryParamOpts & { multi: true }): QueryParam;\n    /** @ignore */\n    public numericParam(opts: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `number`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public numericParam(opts: QueryParamOpts): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /** @ignore */\n    public booleanParam(opts: QueryParamOpts & { multi: true }): QueryParam;\n    /** @ignore */\n    public booleanParam(opts: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `boolean`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public booleanParam(opts: QueryParamOpts): QueryParam {\n        return new QueryParam({\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        });\n    }\n\n    /** @ignore */\n    public param(opts: QueryParamOpts & { multi: true }): QueryParam;\n    /** @ignore */\n    public param(opts: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter for a complex type.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public param(opts: QueryParamOpts): QueryParam {\n        return new QueryParam(opts);\n    }\n\n    private createQueryParam(queryParam: QueryParam | string): QueryParam {\n        if (queryParam instanceof QueryParam) {\n            return queryParam;\n        }\n\n        return this.stringParam({\n            param: queryParam,\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                Groups multiple QueryParam instances to a single unit.\nThis \"bundles\" multiple parameters together such that changes can be emitted as a\ncomplete unit. Collecting parameters into a group is required for the synchronization\nto and from the URL.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams: literal type, extras: RouterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model.ts:143\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                    RouterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        valueChanges:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model.ts:135\n                            \n                        \n\n                \n                    \n                        Emits the values of all parameters in this group whenever at least one changes.\nThis observable emits an object keyed by the {@QueryParam} names where each key\ncarries the current value of the represented parameter. It emits whenever at least\none parameter's value is changed.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(queryParamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:168\n                            \n                        \n\n\n                \n                    \n                            Retrieves a specific QueryParam from this group by name.\nThis returns the QueryParam with the given name, or null\nif no parameter with that name is found in this group.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        queryParamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the parameter instance to retrieve.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     QueryParam | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patchValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        patchValue(value: Record, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:199\n                            \n                        \n\n\n                \n                    \n                            Updates the value of this group by merging it in.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value remains unchanged.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Record\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                See {\n\n                                                        \n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                Additional options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setValue(value: Record, opts: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/model.ts:223\n                            \n                        \n\n\n                \n                    \n                            Updates the value of this group by overwriting it.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value is set to undefine.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Record\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                See {\n\n                                                        \n                                                \n                                                \n                                                        opts\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                Additional options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model.ts:183\n                                \n                            \n                    \n                        \n                                The current value of this group.\nSee QueryParamGroup for a description of the format of\nthe value.\n\n\n                                \n                                    Returns :     Record\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\n\n/**\n * A serializer defines how the represented form control's\n * value is converted into a string to be used in the URL.\n */\nexport type ParamSerializer = (model: T) => string;\n\n/**\n * A deserializer defines how a URL parameter is converted\n * into the represented form control's value.\n */\nexport type ParamDeserializer = (value: string) => T;\n\n/**\n * Defines a function which describes side effects on other\n * URL parameters.\n *\n * See {@link QueryParamOpts#combineWith}.\n */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** @internal */\nexport type OnChangeFunction = (value: T) => void;\n\n/** @internal */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOpts {\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    param: string;\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer>;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer>;\n\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi?: boolean;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     *\n     * NOTE: This does currently not work in combination with {@link QueryParamOpts#multi}.\n     */\n    emptyOn?: Unpack;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator>;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * Groups multiple {@link QueryParam} instances to a single unit.\n *\n * This \"bundles\" multiple parameters together such that changes can be emitted as a\n * complete unit. Collecting parameters into a group is required for the synchronization\n * to and from the URL.\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject>();\n\n    /**\n     * Emits the values of all parameters in this group whenever at least one changes.\n     *\n     * This observable emits an object keyed by the {@QueryParam} names where each key\n     * carries the current value of the represented parameter. It emits whenever at least\n     * one parameter's value is changed.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable> = this._valueChanges.asObservable();\n\n    /** @internal */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** @internal */\n    public readonly routerOptions: RouterOptions;\n\n    private changeFunctions: OnChangeFunction>[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction>): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Retrieves a specific {@link QueryParam} from this group by name.\n     *\n     * This returns the {@link QueryParam} with the given name, or `null`\n     * if no parameter with that name is found in this group.\n     *\n     * @param queryParamName The name of the parameter instance to retrieve.\n     */\n    public get(queryParamName: string): QueryParam | null {\n        const param = this.queryParams[ queryParamName ];\n        if (!param) {\n            return null;\n        }\n\n        return param;\n    }\n\n    /**\n     * The current value of this group.\n     *\n     * See {@link QueryParamGroup#valueChanges} for a description of the format of\n     * the value.\n     */\n    public get value(): Record {\n        const value: Record = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * Updates the value of this group by merging it in.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value remains unchanged.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public patchValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * Updates the value of this group by overwriting it.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value is set to `undefine`.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public setValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /** See {@link QueryParamOpts#param}. */\n    public readonly param: string | null;\n\n    /** @internal */\n    public readonly serialize: ParamSerializer>;\n\n    /** @internal */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** @internal */\n    public readonly multi: boolean;\n\n    /** @internal */\n    public readonly debounceTime: number | null;\n\n    /** @internal */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParamGroup to a DOM element.\nThis directive accepts an instance of QueryParamGroup. Any child using\nQueryParamNameDirective will then be matched against this group, and the\nsynchronization process can take place.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerAdapter: RouterAdapter, globalRouterOptions: RouterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-group.directive.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerAdapter\n                                                  \n                                                        \n                                                                    RouterAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalRouterOptions\n                                                  \n                                                        \n                                                                    RouterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                    \n                        The QueryParamGroup to bind.\n\n                            \n                            Type :    QueryParamGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-group.directive.ts:41\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { concatMap, debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { NGQP_ROUTER_ADAPTER, NGQP_ROUTER_OPTIONS, RouterAdapter, RouterOptions } from './router-adapter/router-adapter.interface';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParam, QueryParamGroup, Unpack } from './model';\nimport { isMissing } from './util';\n\n/** @internal */\nfunction isMultiQueryParam(queryParam: QueryParam): queryParam is QueryParam {\n    return queryParam.multi;\n}\n\n/** @internal */\nfunction hasArrayValue(queryParam: QueryParam, value: T | T[]): value is T[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/** @internal */\nfunction hasArraySerialization(queryParam: QueryParam, values: string | string[]): values is string[] {\n    return isMultiQueryParam(queryParam);\n}\n\n/**\n * Binds a {@link QueryParamGroup} to a DOM element.\n *\n * This directive accepts an instance of {@link QueryParamGroup}. Any child using\n * {@link QueryParamNameDirective} will then be matched against this group, and the\n * synchronization process can take place.\n */\n@Directive({\n    selector: '[queryParamGroup]',\n})\nexport class QueryParamGroupDirective implements OnInit, OnDestroy {\n\n    /**\n     * The {@link QueryParamGroup} to bind.\n     */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    private directives: QueryParamNameDirective[] = [];\n    private queue$ = new Subject();\n    private destroy$ = new Subject();\n\n    constructor(\n        @Inject(NGQP_ROUTER_ADAPTER) private routerAdapter: RouterAdapter,\n        @Optional() @Inject(NGQP_ROUTER_OPTIONS) private globalRouterOptions: RouterOptions\n    ) {\n        this.setupNavigationQueue();\n    }\n\n    /** @ignore */\n    public ngOnInit() {\n        if (!this.queryParamGroup) {\n            throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n        }\n\n        this.queryParamGroup._registerOnChange((value: Record) => {\n            let params: Params = {};\n            Object.keys(value).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                if (isMissing(queryParam)) {\n                    return;\n                }\n\n                params = { ...params, ...this.getParamsForValue(queryParam, value[ queryParamName ]) };\n            });\n\n            this.enqueueNavigation(params);\n        });\n\n        Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n            const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n            queryParam._registerOnChange((newValue: any) =>\n                this.enqueueNavigation(this.getParamsForValue(queryParam, newValue))\n            );\n        });\n\n        this.routerAdapter.queryParamMap.subscribe(queryParamMap => {\n            Object.keys(this.queryParamGroup.queryParams).forEach(queryParamName => {\n                const queryParam: QueryParam = this.queryParamGroup.get(queryParamName);\n                const newValue = queryParam.multi\n                    ? this.deserialize(queryParam, queryParamMap.getAll(queryParam.param))\n                    : this.deserialize(queryParam, queryParamMap.get(queryParam.param));\n\n                // Get the directive, if it has been initialized yet.\n                const directive = this.directives.find(dir => dir.name === queryParamName);\n                if (!isMissing(directive)) {\n                    directive.valueAccessor.writeValue(newValue);\n                }\n\n                queryParam.value = newValue;\n                queryParam._updateValue({ emitEvent: true, onlySelf: true });\n            });\n\n            // We used onlySelf on the queryParams so that we can emit only once on the entire group.\n            this.queryParamGroup._updateValue({ emitEvent: true });\n        });\n    }\n\n    /** @ignore */\n    public ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /** @internal */\n    public addQueryParam(directive: QueryParamNameDirective): void {\n        const queryParam: QueryParam = this.queryParamGroup.get(directive.name);\n        if (!queryParam) {\n            throw new Error(`Could not find query param with name ${directive.name}. Did you forget to add it to your QueryParamGroup?`);\n        }\n        if (!directive.valueAccessor) {\n            throw new Error(`No value accessor found for the form control. Please make sure to implement ControlValueAccessor on this component.`);\n        }\n\n        // Chances are that we read the initial route before a directive has been registered here.\n        // The value in the model will be correct, but we need to sync it to the view once initially.\n        directive.valueAccessor.writeValue(queryParam.value);\n\n        // Proxy updates from the view to debounce them (if needed).\n        const debouncedQueue$ = new Subject();\n        debouncedQueue$.pipe(\n            !isMissing(queryParam.debounceTime) ? debounceTime(queryParam.debounceTime) : tap(),\n            map((newValue: any) => this.getParamsForValue(queryParam, newValue)),\n            takeUntil(this.destroy$),\n        ).subscribe(params => this.enqueueNavigation(params));\n\n        directive.valueAccessor.registerOnChange((newValue: any) => debouncedQueue$.next(newValue));\n\n        this.directives.push(directive);\n    }\n\n    private setupNavigationQueue() {\n        this.queue$.pipe(\n            takeUntil(this.destroy$),\n            concatMap(params => this.routerAdapter.navigate(params, this.routerOptions)),\n        ).subscribe();\n    }\n\n    private enqueueNavigation(params: Params): void {\n        this.queue$.next(params);\n    }\n\n    private getParamsForValue(queryParam: QueryParam, value: T): Params {\n        const newValue = this.serialize(queryParam, value);\n\n        const combinedParams: Params = isMissing(queryParam.combineWith)\n            ? {} : queryParam.combineWith(queryParam.value, value);\n\n        return {\n            ...(combinedParams || {}),\n            [ queryParam.param ]: newValue,\n        };\n    }\n\n    private serialize(queryParam: QueryParam, value: T): string | string[] {\n        return hasArrayValue(queryParam, value)\n            ? (value || []).map(queryParam.serialize)\n            : queryParam.serialize(value);\n    }\n\n    private deserialize(queryParam: QueryParam, values: string | string[]): Unpack | Unpack[] {\n        if (hasArraySerialization(queryParam, values)) {\n            return values.map(queryParam.deserialize);\n        } else {\n            return queryParam.deserialize(values);\n        }\n    }\n\n    private get routerOptions(): RouterOptions {\n        const groupOptions = this.queryParamGroup ? this.queryParamGroup.routerOptions : {};\n\n        return {\n            ...(this.globalRouterOptions || {}),\n            ...groupOptions,\n        };\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            withConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        withConfig(config: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/query-param.module.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { ControlValueAccessorDirective } from './control-value-accessor.directive';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterOptions\n} from './router-adapter/router-adapter';\n\n/** @ignore */\nconst DIRECTIVES: Type[] = [\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static withConfig(config: { routerOptions?: RouterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: {\n                        ...DefaultRouterOptions,\n                        ...config.routerOptions\n                    },\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParam to a DOM element.\nThis directive accepts the name of a QueryParam inside its parent\nQueryParamGroup. It binds this parameter to the host element,\nwhich is required to have a ControlValueAccessor.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: QueryParamGroupDirective, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/query-param-name.directive.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    QueryParamGroupDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                    \n                        The name of the QueryParam inside its parent QueryParamGroup.\nNote that this does not refer to the parameter name.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/query-param-name.directive.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Host, Inject, Input, OnInit, Optional, Self, SkipSelf } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupDirective } from './query-param-group.directive';\nimport { DefaultControlValueAccessorDirective, NGQP_BUILT_IN_ACCESSORS } from './accessors/accessors';\n\n/**\n * Binds a {@link QueryParam} to a DOM element.\n *\n * This directive accepts the name of a {@link QueryParam} inside its parent\n * {@link QueryParamGroup}. It binds this parameter to the host element,\n * which is required to have a [ControlValueAccessor]{@link https://angular.io/api/forms/ControlValueAccessor}.\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements OnInit {\n\n    /**\n     * The name of the {@link QueryParam} inside its parent {@link QueryParamGroup}.\n     * Note that this does not refer to the [parameter name]{@link QueryParam#param}.\n     */\n    @Input('queryParamName')\n    public name: string;\n\n    /** @internal */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() @Host() @SkipSelf() private parent: QueryParamGroupDirective,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.parent) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = this.selectValueAccessor(valueAccessors);\n    }\n\n    /** @ignore */\n    public ngOnInit() {\n        if (!this.name) {\n            throw new Error(`queryParamName has been added, but without specifying the name.`);\n        }\n\n        this.setupQueryParam();\n    }\n\n    /**\n     * This resembles the selectControlValueAccessor function from\n     *   https://github.com/angular/angular/blob/7.1.2/packages/forms/src/directives/shared.ts#L186\n     * We can't use it directly since it isn't exported in the public API, but let's hope choosing\n     * any accessor is good enough for our purposes.\n     */\n    private selectValueAccessor(valueAccessors: ControlValueAccessor[]): ControlValueAccessor | null {\n        if (!valueAccessors || !Array.isArray(valueAccessors)) {\n            return null;\n        }\n\n        let defaultAccessor: ControlValueAccessor | null = null;\n        let builtInAccessor: ControlValueAccessor | null = null;\n        let customAccessor: ControlValueAccessor | null = null;\n        valueAccessors.forEach(valueAccessor => {\n            if (valueAccessor.constructor === DefaultControlValueAccessorDirective) {\n                defaultAccessor = valueAccessor;\n            } else if (NGQP_BUILT_IN_ACCESSORS.some(current => valueAccessor.constructor === current)) {\n                if (builtInAccessor !== null) {\n                    throw new Error(`More than one built-in ControlValueAccessor matches`);\n                }\n\n                builtInAccessor = valueAccessor;\n            } else {\n                if (customAccessor !== null) {\n                    throw new Error(`More than one custom ControlValueAccessor has been found on the form control`);\n                }\n\n                customAccessor = valueAccessor;\n            }\n        });\n\n        if (customAccessor !== null) {\n            return customAccessor;\n        }\n\n        if (builtInAccessor !== null) {\n            return builtInAccessor;\n        }\n\n        if (defaultAccessor !== null) {\n            return defaultAccessor;\n        }\n\n        throw new Error(`No matching ControlValueAccessor has been found for this form control`);\n    }\n\n    private setupQueryParam(): void {\n        this.parent.addQueryParam(this);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOpts.html":{"url":"interfaces/QueryParamOpts.html","title":"interface - QueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model.ts\n        \n\n            \n                Description\n            \n            \n                List of options which can be passed to QueryParam.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                            Optional\n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                            Optional\n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        multi\n                                \n                                \n                                        param\n                                \n                                \n                                            Optional\n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:     ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Execute a side effect on other query parameters.\nIf the value of this parameter changes, this function is invoked. It can return an\nadditional set of query parameters to change, e.g., to reset the current page in a\npagination when the direction in which to sort has been changed.\nNOTE: This function must return the raw query parameter names and values. No\n       (de-)serializers are run and no recursion is applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:     Comparator>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Comparator>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The comparator to be used with QueryParamOpts.\nThis function will be used to determine whether the current value equals the defined\ndefault value. By default, a loose equals comparison is made (i.e., \"==\").\nSee Comparator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines, in milliseconds, how much changes to the value should be debounced.\nWhen set, a change of the parameter value coming from either the form control\nor a programmatic change will be debounced by the given value (in milliseconds).\nThis is useful for, e.g., text inputs.\nIf the value changes through a change of the URL, this debounce will not apply.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:     ParamDeserializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamDeserializer>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The deserializer used for this parameter.\nSee ParamDeserializer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     Unpack\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Unpack\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default value of the parameter.\nIf set, the parameter will be considered to default to this value. This means\nthat if the parameter is not defined on the URL, this value will be written\nto the form control. Vice versa, if the form control takes on this value,\nthe URL parameter will be removed.\nNOTE: This does currently not work in combination with QueryParamOpts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether this parameter can take on multiple values at once.\nIf set to true, this parameter is array-typed. How this is represented\non the URL is defined by the Angular Router, which defines the parameter\nmultiple times, e.g. https://www.app.io?param=A&param=B&param=C.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:     ParamSerializer>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamSerializer>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The serializer used for this parameter.\nSee ParamSerializer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Comparator, isFunction, isMissing, wrapTryCatch } from './util';\nimport { createEmptyOnDeserializer, createEmptyOnSerializer } from './serializers';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\n\n/**\n * A serializer defines how the represented form control's\n * value is converted into a string to be used in the URL.\n */\nexport type ParamSerializer = (model: T) => string;\n\n/**\n * A deserializer defines how a URL parameter is converted\n * into the represented form control's value.\n */\nexport type ParamDeserializer = (value: string) => T;\n\n/**\n * Defines a function which describes side effects on other\n * URL parameters.\n *\n * See {@link QueryParamOpts#combineWith}.\n */\nexport type ParamCombinator = (previousValue: T, newValue: T) => Params;\n\n/** @internal */\nexport type OnChangeFunction = (value: T) => void;\n\n/** @internal */\nexport type Unpack = T extends (infer U)[] ? U : T;\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOpts {\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    param: string;\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer>;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer>;\n\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi?: boolean;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     *\n     * NOTE: This does currently not work in combination with {@link QueryParamOpts#multi}.\n     */\n    emptyOn?: Unpack;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator>;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/**\n * Groups multiple {@link QueryParam} instances to a single unit.\n *\n * This \"bundles\" multiple parameters together such that changes can be emitted as a\n * complete unit. Collecting parameters into a group is required for the synchronization\n * to and from the URL.\n */\nexport class QueryParamGroup {\n\n    private _valueChanges = new Subject>();\n\n    /**\n     * Emits the values of all parameters in this group whenever at least one changes.\n     *\n     * This observable emits an object keyed by the {@QueryParam} names where each key\n     * carries the current value of the represented parameter. It emits whenever at least\n     * one parameter's value is changed.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable> = this._valueChanges.asObservable();\n\n    /** @internal */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam };\n\n    /** @internal */\n    public readonly routerOptions: RouterOptions;\n\n    private changeFunctions: OnChangeFunction>[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam },\n        extras: RouterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction>): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Retrieves a specific {@link QueryParam} from this group by name.\n     *\n     * This returns the {@link QueryParam} with the given name, or `null`\n     * if no parameter with that name is found in this group.\n     *\n     * @param queryParamName The name of the parameter instance to retrieve.\n     */\n    public get(queryParamName: string): QueryParam | null {\n        const param = this.queryParams[ queryParamName ];\n        if (!param) {\n            return null;\n        }\n\n        return param;\n    }\n\n    /**\n     * The current value of this group.\n     *\n     * See {@link QueryParamGroup#valueChanges} for a description of the format of\n     * the value.\n     */\n    public get value(): Record {\n        const value: Record = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * Updates the value of this group by merging it in.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value remains unchanged.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public patchValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /**\n     * Updates the value of this group by overwriting it.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value is set to `undefine`.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public setValue(value: Record, opts: { emitEvent?: boolean } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(value[ queryParamName ], { emitEvent: false });\n        });\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /** See {@link QueryParamOpts#param}. */\n    public readonly param: string | null;\n\n    /** @internal */\n    public readonly serialize: ParamSerializer>;\n\n    /** @internal */\n    public readonly deserialize: ParamDeserializer>;\n\n    /** @internal */\n    public readonly multi: boolean;\n\n    /** @internal */\n    public readonly debounceTime: number | null;\n\n    /** @internal */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(opts: QueryParamOpts) {\n        const { param, serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n        const multi = opts.multi === true;\n\n        if (isMissing(param)) {\n            throw new Error(`Please provide a parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (!isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (!isMissing(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        if (multi && !isMissing(emptyOn)) {\n            throw new Error(`emptyOn is only supported for single-value parameters, but ${param} is a multi-value parameter.`);\n        }\n\n        this.param = param;\n        this.serialize = wrapTryCatch(\n            emptyOn === undefined ? serialize : createEmptyOnSerializer(serialize, emptyOn, compareWith),\n            `Error while serializing value for ${param}`\n        );\n        this.deserialize = wrapTryCatch(\n            emptyOn === undefined ? deserialize : createEmptyOnDeserializer(deserialize, emptyOn),\n            `Error while deserializing value for ${param}`\n        );\n        this.multi = multi;\n        this.debounceTime = debounceTime;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: { emitEvent?: boolean } = {}): void {\n        this.value = value;\n\n        if (opts.emitEvent !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n    } = {}): void {\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (!isMissing(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue(opts);\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        this.parent = parent;\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Options to be provided when a navigation is started to update the URL.\nThese options are simply forwarded to Router#navigate.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        replaceUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        replaceUrl\n                                    \n                                \n                                \n                                    \n                                        replaceUrl:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Abstraction around the Angular Router used by ngqp in order to read from\n * or manipulate the URL.\n *\n * This abstraction only exists so we can provide a different adapter for the\n * examples on the website.\n *\n * @internal\n */\nexport interface RouterAdapter {\n\n    /** @internal */\n    url: string;\n\n    /** @internal */\n    queryParamMap: Observable;\n\n    /** @internal */\n    navigate(queryParams: Params, extras?: RouterOptions): Promise;\n\n}\n\n/**\n * Options to be provided when a navigation is started to update the URL.\n * These options are simply forwarded to Router#navigate.\n */\nexport interface RouterOptions {\n    replaceUrl?: boolean;\n}\n\n/**\n * See {@link RouterOptions}.\n */\nexport const DefaultRouterOptions: RouterOptions = {\n    replaceUrl: true,\n};\n\n/** @internal */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/** Injection token to provide {@link RouterOptions}. */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.5.1 (2019-01-06)\nBug Fixes\n\ncore: Allow combineWith returning null | undefined (3bfc1b0)\ncore: Do not serialize non-multi params into an array (bf6c355)\ncore: Don't expost \"adapter\" naming in API (e0e875b)\ncore: Export createEmptyOnDeserializer (ca45e43)\ncore: Improve typing definitions (0d509d0)\ncore: Remove typealias (bab1e45)\ncore: Removed QueryParamOptsInput (63f83a5)\ncore: Rename forRoot to withConfig and ensure defaults are set at least (0f0b48d), closes #41\ncore: Use interface instead of type alias (4de02a4), closes #40\ndocs: Exclude schematics from docs (e57e700), closes #45\ndocs: Fix heading level (f27f369)\ndocs: Fix linting error (2ea841b)\ndocs: Prevent line break in API docs link (17f368e)\ndocs: Remove URL entirely if no parmas are set (aba7bd1)\nREADME: Rework README (8c9d268)\n\n\n0.5.0 (2019-01-03)\nBug Fixes\n\ncore: Do not create an empty-on serializer if emptyOn wasn't given (f394fa6)\ncore: Fix list of built-in accessors (2e39369)\ncore: Remove customParam and replace it with param (60377e5)\ncore: Split accessors into one directive per file (a0bde9b)\ncore: Use correct param name in shorthand syntax (f526b61)\ncore: use multi property rather than checking value type (781f009)\ncore: Use proper type in accessor (5d90b63)\ndocs: Fix demo-browser in responsive case (bbaf6e4)\ndocs: Fix first TOC item (0f566ad)\ndocs: Fix fragment misalignment (f02d26d)\ndocs: Fix link to GitHub (2f2675e)\ndocs: Fix margin on fragment headings (07c103e)\ndocs: Fix overflows on small screens (e100621)\ndocs: Fix typo (c6b3a1e)\ndocs: Improve responsiveness of example (c6cd845)\ndocs: Make demo-browser content overflow if necessary (48f2da4)\ndocs: Remove GitHub button for now (aadad1b), closes #36\ndocs: Use PNG instead of SVG (cfa25df)\n\nFeatures\n\ndocs: Added Google Analytics (aea857a), closes #35\n\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createEmptyOnSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a deserializer for parameters of type boolean.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to deserialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createBooleanSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateBooleanSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a serializer for parameters of type boolean.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to serialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnDeserializer(deserializer, emptyOn)\n                    \n                \n\n\n\n\n                \n                    \n                            Wraps a deserializer which defaults to the given value.\nThis function returns a new deserializer which mirrors the given deserializer,\nexcept that on a null value to deserialize, the given default value is\nreturned instead.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        deserializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The deserializer to wrap and mirror.\n\n                                                        \n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The default value to return if the value to deserialize is null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createEmptyOnSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateEmptyOnSerializer(serializer, emptyOn, compareWith)\n                    \n                \n\n\n\n\n                \n                    \n                            Wraps a serializer which defaults to the given value.\nThis function returns a new serializer which mirrors the given serializer,\nexcept that if the given default value equals the value to be serialized\n(using the provided comparator), null is returned instead.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The serializer to wrap and mirror.\n\n                                                        \n                                                \n                                                \n                                                        emptyOn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The default value for which the serialization should return null.\n\n                                                        \n                                                \n                                                \n                                                        compareWith\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The comparator function to compare two values.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a deserializer for parameters of type number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to deserialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNumberSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNumberSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a serializer for parameters of type number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to serialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringDeserializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringDeserializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a deserializer for parameters of type string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to deserialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStringSerializer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateStringSerializer(defaultValue)\n                    \n                \n\n\n\n\n                \n                    \n                            Creates a serializer for parameters of type string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Optional default value to return if the value to serialize is undefined or null.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n    \n        \n    \n\n\nngqp\n\n\n    Declaratively synchronize form controls with the URL\n    \n    Documentation\n\n\nDescription\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nQuick Start\nng add @ngqp/coreRead the Getting Started page for information on how to use it.\nContributing\nSee CONTRIBUTING.md.\nCode of Conduct\nPlease take a moment to read the Code of Conduct.\n\nMIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../util.ts)\n                        \n                        \n                            ParamCombinator   (src/.../model.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../model.ts)\n                        \n                        \n                            ParamSerializer   (src/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/util.ts\n    \n        \n            \n                \n                    \n                        \n                        Comparator\n                    \n                \n                    \n                        \n                            A function which compares two values of the same type to determine\nif they are equal.\n\n                        \n                    \n                \n                    \n                        Comparator:     function\n\n                    \n                \n            \n        \n\n    src/lib/model.ts\n    \n        \n            \n                \n                    \n                        \n                        ParamCombinator\n                    \n                \n                    \n                        \n                            Defines a function which describes side effects on other\nURL parameters.\nSee QueryParamOpts.\n\n                        \n                    \n                \n                    \n                        ParamCombinator:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamDeserializer\n                    \n                \n                    \n                        \n                            A deserializer defines how a URL parameter is converted\ninto the represented form control's value.\n\n                        \n                    \n                \n                    \n                        ParamDeserializer:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ParamSerializer\n                    \n                \n                    \n                        \n                            A serializer defines how the represented form control's\nvalue is converted into a string to be used in the URL.\n\n                        \n                    \n                \n                    \n                        ParamSerializer:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DefaultRouterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DefaultRouterOptions:     RouterOptions\n\n                    \n                \n                    \n                        \n                            Type :     RouterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n}\n                        \n                    \n\n                \n                    \n                        See RouterOptions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        NGQP_ROUTER_OPTIONS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        Injection token to provide RouterOptions. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
