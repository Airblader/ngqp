var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractQueryParam.html",[0,0.479,1,1.636]],["body/classes/AbstractQueryParam.html",[0,0.742,1,2.123,2,0.887,3,0.291,4,0.291,5,0.253,6,1.813,7,1.122,8,0.337,9,2.957,10,2.397,11,0.985,12,1.838,13,1.739,14,1.54,15,0.809,16,1.739,17,1.739,18,0.998,19,1.331,20,0.809,21,1.824,22,2.397,23,0.285,24,0.899,25,1.53,26,2.508,27,1.575,28,1.418,29,1.489,30,1.206,31,1.575,32,2.05,33,0.892,34,1.108,35,1.374,36,1.232,37,2.397,38,1.544,39,2.353,40,1.376,41,0.931,42,2.828,43,0.742,44,0.042,45,1.268,46,0.622,47,0.513,48,1.222,49,0.969,50,1.557,51,1.1,52,1.825,53,0.726,54,1.18,55,1.825,56,1.1,57,1.825,58,1.745,59,1.825,60,1.1,61,1.825,62,1.825,63,1.105,64,1.146,65,1.011,66,1.54,67,0.844,68,1.108,69,1.739,70,1.739,71,1.374,72,1.54,73,1.375,74,0.579,75,1.825,76,1.1,77,2.123,78,1.232,79,1.825,80,1.54,81,1.739,82,1.374,83,1.232,84,0.644,85,2.028,86,0.672,87,1.682,88,1.374,89,0.715,90,1.122,91,1.122,92,0.994,93,1.122,94,1.122,95,0.795,96,1.885,97,0.998,98,0.998,99,0.644,100,0.513,101,0.644,102,0.809,103,0.899,104,1.443,105,2.129,106,1.54,107,0.994,108,1.159,109,0.994,110,0.994,111,0.994,112,0.522,113,0.58,114,0.994,115,0.887,116,0.994,117,0.887,118,0.994,119,0.994,120,0.994,121,0.994,122,0.994,123,2.297,124,1.743,125,2.123,126,2.297,127,1.122,128,1.739,129,1.935,130,1.122,131,0.994,132,1.122,133,0.969,134,0.541,135,1.739,136,0.899,137,1.122,138,1.122,139,0.644,140,0.994,141,1.122,142,1.122,143,1.418,144,2.744,145,1.122,146,1.122,147,1.838,148,1.122,149,1.122,150,1.122,151,1.122,152,1.122,153,2.129,154,1.122,155,1.122,156,1.54,157,1.122,158,1.122,159,1.122,160,1.122,161,1.122,162,3.036,163,2.129,164,1.122,165,2.129,166,2.129,167,1.122,168,1.54,169,1.643,170,1.54,171,1.122,172,2.123,173,1.54,174,1.122,175,1.122,176,1.122,177,1.54,178,1.509,179,1.122,180,1.122,181,1.122,182,1.739,183,1.122,184,0.994,185,0.809,186,0.899,187,1.108,188,1.108,189,0.899,190,1.739,191,1.739,192,1.011,193,1.122,194,1.122,195,0.58,196,0.715,197,0.579,198,1.122,199,1.122,200,1.54,201,1.122,202,0.899,203,1.122,204,0.58,205,0.994,206,0.994,207,0.994,208,0.522,209,1.122,210,0.715,211,1.122,212,1.122,213,0.795,214,1.682,215,1.739,216,2.129,217,2.397,218,1.739,219,0.644,220,0.644,221,1.122,222,1.122,223,1.122,224,0.887,225,1.122,226,1.122,227,1.739,228,1.122,229,1.122,230,1.739,231,0.994,232,1.122,233,1.122,234,1.122,235,1.122,236,1.122,237,1.122,238,1.122,239,0.994,240,0.012,241,0.019,242,0.012]],["title/directives/ControlValueAccessorDirective.html",[243,1.06,244,2.111]],["body/directives/ControlValueAccessorDirective.html",[0,0.483,3,0.483,4,0.483,5,0.42,8,0.361,23,0.305,25,1.479,33,0.934,34,1.601,41,0.897,43,0.483,44,0.042,45,0.778,46,0.552,47,0.549,58,1.692,64,1.271,71,2.689,84,1.442,85,2.157,86,0.651,104,1.415,108,1.137,112,1.168,124,1.069,134,0.42,139,1.442,187,1.601,188,1.601,189,1.299,197,0.836,240,0.021,241,0.028,242,0.021,243,1.747,244,3.479,245,1.472,246,5.168,247,3.028,248,4.063,249,4.085,250,4.085,251,4.098,252,3.479,253,2.872,254,2.225,255,4.085,256,1.049,257,2.225,258,3.354,259,2.512,260,1.862,261,2.225,262,3.25,263,4.085,264,4.623,265,2.512,266,4.085,267,4.949,268,4.085,269,4.623,270,4.623,271,5.168,272,3.028,273,4.949,274,2.225,275,4.063,276,4.949,277,4.949,278,4.085,279,2.512,280,2.872,281,2.872,282,4.949,283,3.354,284,1.78,285,3.028,286,3.354,287,4.085,288,2.587,289,4.085,290,4.063,291,3.043,292,4.085,293,3.028,294,3.354,295,4.085,296,2.872,297,4.949,298,3.028,299,4.085,300,4.085,301,3.028,302,1.187,303,1.649,304,3.028,305,3.028,306,3.028,307,2.512,308,3.028,309,3.028,310,3.028,311,3.028,312,4.085,313,3.028,314,3.028,315,3.028,316,3.028,317,4.085,318,3.028,319,3.028,320,3.028]],["title/classes/MultiQueryParam.html",[0,0.479,12,1.309]],["body/classes/MultiQueryParam.html",[0,0.709,1,2.871,2,0.879,3,0.288,4,0.288,5,0.251,6,1.214,7,1.112,8,0.335,9,2.852,10,1.726,11,0.981,12,1.83,13,1.112,14,0.984,15,0.517,16,1.112,17,1.112,18,0.638,19,1.271,20,0.517,21,1.818,22,2.116,23,0.283,24,0.892,25,1.532,26,2.52,27,1.569,28,1.413,29,1.482,30,1.201,31,1.569,32,2.041,33,0.895,34,1.1,35,1.364,36,1.223,37,2.385,38,1.541,39,2.348,40,0.991,41,0.944,43,0.764,44,0.042,45,1.264,46,0.621,47,0.509,48,1.214,49,0.977,50,1.567,51,1.094,53,0.721,54,1.177,56,1.094,58,1.742,60,1.094,63,1.103,64,1.141,65,1.008,66,1.529,67,0.841,68,1.1,69,1.726,70,1.726,71,1.364,72,1.529,73,1.371,74,0.704,76,1.094,77,2.112,78,1.223,80,1.529,81,1.726,82,1.364,83,1.223,84,0.638,85,2.021,86,0.67,87,1.672,88,1.364,89,0.709,90,1.112,91,1.112,92,0.984,93,1.112,94,1.112,95,0.788,96,1.874,97,0.991,98,0.991,99,0.638,100,0.509,101,0.638,102,1.109,103,0.892,104,1.439,105,2.116,106,1.529,107,0.984,108,1.156,109,0.984,110,0.984,111,0.984,112,0.517,113,0.575,114,0.984,115,0.879,116,0.984,117,0.879,118,0.984,119,0.984,120,0.984,121,0.984,122,0.984,123,2.287,124,1.738,125,2.112,126,2.287,127,1.112,128,1.726,129,1.93,130,1.112,131,0.984,132,1.112,133,0.967,134,0.538,135,1.726,136,0.892,137,1.112,138,1.112,139,0.638,140,0.984,141,1.112,142,1.112,143,1.413,144,2.733,145,1.112,146,1.112,147,1.83,148,1.112,149,1.112,150,1.112,151,1.112,152,1.112,153,2.116,154,1.112,155,1.112,156,1.529,157,1.112,158,1.112,159,1.112,160,1.112,161,1.112,162,3.028,163,2.116,164,1.112,165,2.116,166,2.116,167,1.112,168,1.529,169,1.637,170,1.529,171,1.112,172,2.112,173,1.529,174,1.112,175,1.112,176,1.112,177,1.529,178,1.5,179,1.112,180,1.112,181,1.112,182,1.726,183,1.112,184,0.984,185,0.803,186,0.892,187,1.349,188,1.349,189,1.233,190,1.726,191,1.726,192,1.008,193,1.112,194,1.112,195,0.892,196,1.1,197,0.704,198,1.112,199,1.112,200,1.529,201,1.112,202,0.892,203,1.112,204,0.575,205,0.984,206,0.984,207,0.984,208,0.517,209,1.112,210,0.709,211,1.112,212,1.112,213,0.788,214,1.672,215,1.726,216,2.116,217,2.385,218,1.726,219,0.638,220,0.638,221,1.112,222,1.112,223,1.112,224,0.879,225,1.112,226,1.112,227,1.726,228,1.112,229,1.112,230,1.726,231,0.984,232,1.112,233,1.112,234,1.112,235,1.112,236,1.112,237,1.112,238,1.112,239,0.984,240,0.012,241,0.019,242,0.012,321,2.807,322,4.042,323,1.484,324,1.484,325,1.484,326,1.484,327,1.484,328,1.484,329,1.484,330,1.484,331,1.484]],["title/interfaces/MultiQueryParamOpts.html",[102,0.859,256,0.771]],["body/interfaces/MultiQueryParamOpts.html",[3,0.488,4,0.488,5,0.424,6,1.08,8,0.365,11,0.842,15,1.176,18,1.08,19,0.875,20,1.329,21,1.821,23,0.308,24,1.307,27,1.08,28,0.972,29,1.08,30,0.875,31,1.08,33,0.931,40,1.754,41,0.901,43,0.656,44,0.042,48,1.452,49,0.989,50,1.421,51,1.579,53,0.785,54,0.703,56,1.477,58,0.972,60,1.477,63,1.21,64,1.331,65,1.061,67,0.901,68,1.948,74,1.017,76,1.307,86,0.488,97,1.64,98,1.64,99,1.08,100,0.555,102,1.329,103,0.972,112,1.329,113,0.972,133,1.019,134,0.69,143,1.648,169,1.08,185,1.329,186,1.477,189,1.648,192,0.842,195,1.307,196,1.612,197,0.951,202,1.307,204,0.972,208,1.421,219,1.08,220,1.08,240,0.021,241,0.028,242,0.021,254,1.666,256,1.276,257,1.666,274,1.666,284,1.333,288,2.415,332,1.486,333,1.881,334,2.53,335,1.999,336,2.529,337,2.26,338,1.999,339,1.999,340,1.452,341,2.53,342,2.24,343,2.529,344,2.529,345,1.333,346,1.486,347,2.529,348,1.881,349,2.529,350,1.881,351,1.881,352,1.666,353,1.881,354,1.333,355,1.666,356,1.881,357,1.881,358,1.666,359,1.881,360,1.881,361,1.881,362,1.666,363,1.881,364,1.666,365,2.529,366,1.881,367,1.881,368,1.881,369,1.881,370,1.881,371,1.666,372,1.881,373,1.881,374,1.486,375,1.881,376,1.486,377,1.666,378,1.666,379,1.666,380,1.666,381,1.881,382,1.666,383,1.486,384,1.666,385,1.881,386,1.881,387,1.486,388,2.53,389,1.881,390,1.486,391,1.666,392,1.666]],["title/classes/PartitionedQueryParam.html",[0,0.479,213,1.309]],["body/classes/PartitionedQueryParam.html",[0,0.735,1,1.984,2,0.963,3,0.316,4,0.316,5,0.275,6,1.437,7,1.219,8,0.359,9,2.947,10,1.852,11,0.944,12,1.774,13,1.219,14,1.079,15,0.567,16,1.219,17,1.219,18,0.7,19,1.164,20,0.567,21,1.878,22,2.503,23,0.304,25,1.503,26,2.344,27,1.437,28,1.294,29,1.286,30,1.042,31,1.437,32,1.464,33,0.881,34,1.181,35,1.464,36,1.313,37,2.241,38,1.52,39,2.39,40,1.063,41,0.794,43,0.822,44,0.042,45,1.184,46,0.486,47,0.546,48,1.063,49,0.895,50,1.475,51,0.958,53,0.509,54,1.101,56,0.958,58,1.743,60,0.958,63,1.088,64,0.936,65,0.981,66,1.079,67,0.895,68,0.777,69,1.219,70,1.219,71,0.963,72,1.079,73,1.319,74,0.406,76,0.958,77,2.217,78,1.313,80,1.079,81,1.219,82,0.963,83,0.864,84,0.7,85,2.089,86,0.698,87,1.771,88,1.464,89,0.777,90,1.219,91,1.219,92,1.079,93,1.219,94,1.219,95,0.864,96,1.984,97,1.063,98,1.063,99,0.7,100,0.546,101,0.7,102,0.862,103,1.294,104,1.475,105,2.241,106,1.641,107,1.079,108,1.185,109,1.079,110,1.079,111,1.079,112,0.567,113,0.63,114,1.079,115,0.963,116,1.079,117,0.963,118,1.079,119,1.079,120,1.079,121,1.079,122,1.079,123,2.384,124,1.785,125,2.217,126,2.384,127,1.219,128,1.852,129,1.983,130,1.219,131,1.079,132,1.219,133,0.985,134,0.565,135,1.852,136,0.958,137,1.219,138,1.219,139,0.7,140,1.079,141,1.219,142,1.219,143,1.466,144,2.835,145,1.219,146,1.219,147,1.908,148,1.219,149,1.219,150,1.219,151,1.219,152,1.219,153,2.241,154,1.219,155,1.219,156,1.641,157,1.219,158,1.219,159,1.219,160,1.219,161,1.219,162,3.11,163,2.241,164,1.219,165,2.241,166,2.241,167,1.219,168,1.641,169,1.692,170,1.641,171,1.219,172,2.217,173,1.641,174,1.219,175,1.219,176,1.219,177,1.984,178,1.774,179,1.219,180,1.219,181,1.219,182,2.241,183,1.219,184,1.079,185,1.042,186,1.158,187,1.181,188,1.181,189,0.958,190,1.852,191,1.852,192,1.035,193,1.219,194,1.219,195,0.63,196,0.777,197,0.617,198,1.219,199,1.219,200,1.641,201,1.219,202,1.158,203,1.852,204,0.958,205,1.641,206,1.641,207,1.641,208,0.862,209,1.852,210,1.181,211,1.852,212,1.852,213,1.313,214,1.978,215,1.852,216,2.241,217,2.503,218,1.852,219,0.7,220,0.7,221,1.219,222,1.219,223,1.219,224,0.963,225,1.219,226,1.219,227,1.852,228,1.219,229,1.219,230,1.852,231,1.079,232,1.219,233,1.219,234,1.219,235,1.219,236,1.219,237,1.219,238,1.219,239,1.079,240,0.013,241,0.021,242,0.013,393,1.852,394,1.627,395,1.982,396,1.982,397,1.627,398,1.982]],["title/interfaces/PartitionedQueryParamOpts.html",[103,0.955,256,0.771]],["body/interfaces/PartitionedQueryParamOpts.html",[3,0.483,4,0.483,5,0.42,6,1.069,8,0.361,11,0.946,15,1.322,18,1.069,19,0.866,20,1.168,21,1.601,23,0.305,24,1.299,27,1.069,28,0.963,29,1.069,30,0.866,31,1.069,33,0.941,40,1.632,41,0.838,43,0.651,44,0.042,46,0.487,48,1.442,49,0.965,50,1.322,51,1.573,53,0.778,54,0.696,56,1.47,58,0.963,60,1.47,63,1.204,64,1.367,65,1.013,67,0.937,68,1.812,74,1.013,76,1.299,86,0.483,97,1.879,98,1.879,99,1.069,100,0.549,102,1.168,103,1.299,112,1.322,113,0.963,133,1.017,134,0.687,143,1.73,169,1.069,185,1.322,186,1.47,189,1.299,192,0.836,195,0.963,196,1.187,197,0.836,202,1.573,204,0.963,208,1.168,219,1.747,220,1.747,240,0.021,241,0.028,242,0.021,254,1.649,256,1.271,257,1.649,274,1.649,284,1.32,288,2.405,332,1.472,333,1.862,334,2.225,335,1.472,336,1.862,337,2.157,338,1.472,339,1.472,340,1.069,341,2.225,342,1.649,343,1.862,344,2.843,345,1.32,346,1.472,347,2.512,348,1.862,349,2.512,350,1.862,351,1.862,352,1.649,353,1.862,354,1.32,355,1.649,356,1.862,357,1.862,358,1.649,359,1.862,360,1.862,361,1.862,362,1.649,363,1.862,364,1.649,365,2.512,366,1.862,367,1.862,368,1.862,369,1.862,370,1.862,371,1.649,372,1.862,373,1.862,374,1.472,375,1.862,376,1.472,377,1.649,378,1.649,379,1.649,380,1.649,381,1.862,382,1.649,383,1.472,384,1.649,385,1.862,386,2.512,387,1.985,388,2.899,389,2.512,390,1.985,391,2.225,392,2.225]],["title/classes/QueryParam.html",[0,0.479,11,0.615]],["body/classes/QueryParam.html",[0,0.707,1,2.867,2,0.873,3,0.286,4,0.286,5,0.249,6,1.21,7,1.104,8,0.409,9,2.845,10,1.717,11,0.979,12,1.685,13,1.104,14,0.978,15,0.514,16,1.104,17,1.104,18,0.634,19,1.268,20,0.514,21,1.814,22,2.107,23,0.282,24,0.888,25,1.532,26,2.518,27,1.565,28,1.409,29,1.478,30,1.197,31,1.565,32,2.035,33,0.894,34,1.095,35,1.357,36,1.217,37,2.377,38,1.539,39,2.345,40,0.986,41,0.942,43,0.738,44,0.042,45,1.262,46,0.62,47,0.506,48,1.21,49,0.976,50,1.586,51,1.089,53,0.717,54,1.175,56,1.089,58,1.74,60,1.089,63,1.12,64,1.138,65,1.028,66,1.521,67,0.839,68,1.095,69,1.717,70,1.717,71,1.357,72,1.521,73,1.368,74,0.702,76,1.089,77,2.105,78,1.217,80,1.521,81,1.717,82,1.357,83,1.217,84,0.634,85,2.017,86,0.667,87,1.665,88,1.357,89,0.704,90,1.104,91,1.104,92,0.978,93,1.104,94,1.104,95,0.783,96,1.866,97,0.986,98,0.986,99,0.634,100,0.506,101,0.634,102,0.799,103,0.888,104,1.436,105,2.107,106,1.521,107,0.978,108,1.154,109,0.978,110,0.978,111,0.978,112,0.514,113,0.571,114,0.978,115,0.873,116,0.978,117,0.873,118,0.978,119,0.978,120,0.978,121,0.978,122,0.978,123,2.28,124,1.734,125,2.105,126,2.28,127,1.104,128,1.717,129,1.926,130,1.104,131,0.978,132,1.104,133,0.966,134,0.536,135,1.717,136,0.888,137,1.104,138,1.104,139,0.634,140,0.978,141,1.104,142,1.104,143,1.409,144,2.726,145,1.104,146,1.104,147,1.825,148,1.104,149,1.104,150,1.104,151,1.104,152,1.104,153,2.107,154,1.104,155,1.104,156,1.521,157,1.104,158,1.104,159,1.104,160,1.104,161,1.104,162,3.022,163,2.107,164,1.104,165,2.107,166,2.107,167,1.104,168,1.521,169,1.689,170,1.521,171,1.104,172,2.105,173,1.521,174,1.104,175,1.104,176,1.104,177,1.866,178,1.825,179,1.717,180,1.717,181,1.717,182,2.107,183,1.717,184,1.521,185,0.98,186,1.089,187,1.343,188,1.343,189,1.229,190,1.717,191,1.717,192,1.006,193,1.104,194,1.104,195,0.571,196,0.704,197,0.572,198,1.104,199,1.104,200,1.521,201,1.104,202,0.888,203,1.104,204,0.571,205,0.978,206,0.978,207,0.978,208,0.514,209,1.104,210,0.704,211,1.104,212,1.104,213,0.783,214,1.665,215,1.717,216,2.107,217,2.377,218,1.717,219,0.634,220,0.634,221,1.104,222,1.104,223,1.104,224,0.873,225,1.104,226,1.104,227,1.717,228,1.104,229,1.104,230,1.717,231,0.978,232,1.104,233,1.104,234,1.104,235,1.104,236,1.104,237,1.104,238,1.104,239,0.978,240,0.012,241,0.019,242,0.012,322,4.034,323,1.475,324,1.475,325,1.475,326,1.475,327,1.475,328,1.475,329,1.475,330,1.475,331,1.475,399,2.793]],["title/injectables/QueryParamBuilder.html",[400,2.111,401,2.466]],["body/injectables/QueryParamBuilder.html",[0,0.315,3,0.315,4,0.315,5,0.274,8,0.434,11,1.189,12,2.499,19,1.04,23,0.199,25,1.499,28,1.292,30,1.04,32,2.398,33,0.697,34,1.593,38,1.64,39,2.611,41,0.868,43,0.898,44,0.042,45,1.267,46,0.664,47,0.835,49,0.935,50,1.656,53,0.772,58,0.628,63,1.087,65,0.615,66,1.637,67,0.895,73,1.411,74,0.895,78,1.31,82,1.975,84,1.69,86,0.763,95,0.861,100,1.015,101,1.741,102,1.61,103,1.568,108,1.322,124,1.061,133,0.95,134,0.274,143,0.628,178,1.771,185,0.859,186,0.955,192,1.072,197,0.404,202,0.955,204,1.292,208,1.162,213,2.086,214,2.505,219,1.819,240,0.013,241,0.02,242,0.013,248,2.467,259,1.848,279,1.848,296,2.113,302,0.774,337,1.31,340,0.697,352,1.637,374,1.461,378,1.637,379,2.213,383,0.96,390,1.975,400,2.113,401,2.467,402,1.976,403,3.365,404,1.622,405,4.064,406,4.459,407,2.467,408,3.005,409,3.005,410,3.005,411,2.986,412,2.986,413,2.986,414,3.637,415,1.976,416,1.976,417,3.074,418,1.975,419,1.976,420,2.467,421,3.005,422,3.005,423,1.848,424,3.005,425,3.005,426,2.467,427,1.848,428,3.637,429,1.976,430,3.637,431,1.976,432,3.005,433,1.976,434,1.976,435,4.064,436,3.005,437,3.005,438,2.467,439,2.467,440,2.467,441,3.005,442,3.005,443,3.005,444,3.005,445,3.59,446,2.467,447,3.005,448,3.005,449,2.467,450,3.637,451,1.976,452,3.005,453,3.005,454,3.005,455,3.005,456,3.005,457,3.005,458,4.373,459,1.076,460,1.622,461,2.557,462,3.59,463,1.976,464,1.976,465,1.976,466,1.976,467,1.622,468,1.976,469,1.976,470,1.976,471,1.622,472,1.622,473,1.389,474,1.976,475,2.546,476,1.976,477,4.064,478,4.064]],["title/directives/QueryParamDirective.html",[243,1.06,479,1.847]],["body/directives/QueryParamDirective.html",[0,0.554,3,0.554,4,0.554,5,0.482,8,0.415,11,1.215,23,0.35,25,1.388,26,1.514,36,1.514,41,0.63,44,0.042,45,0.892,46,0.415,47,0.897,54,1.028,63,0.916,67,0.811,73,1.494,85,1.949,86,0.897,100,0.98,101,1.579,104,1.494,108,0.798,133,0.98,134,0.482,136,1.105,187,1.753,188,1.753,240,0.024,241,0.03,242,0.024,243,1.844,245,1.689,251,3.799,252,3.889,253,3.672,260,2.137,261,2.436,262,2.443,265,2.75,279,2.75,302,1.362,303,1.892,307,2.75,354,1.949,461,3.145,475,2.174,479,2.75,480,3.145,481,3.475,482,3.672,483,4.473,484,3.145,485,3.672,486,4.473,487,4.473,488,3.672,489,4.061,490,3.042,491,4.061,492,3.672,493,3.475,494,2.853,495,2.137,496,3.672,497,3.145,498,2.443,499,2.853,500,2.853,501,2.853,502,3.475,503,2.853,504,2.443,505,2.853,506,2.853,507,2.853,508,2.853,509,3.475,510,2.443,511,4.473,512,3.475,513,3.475,514,3.672,515,3.475,516,4.473,517,3.475,518,2.853,519,2.853,520,2.853]],["title/classes/QueryParamGroup.html",[0,0.479,73,0.859]],["body/classes/QueryParamGroup.html",[0,0.3,2,0.913,3,0.3,4,0.3,5,0.261,6,1.758,8,0.607,11,1.179,12,2.216,14,1.575,15,1.132,20,0.827,23,0.189,24,0.919,25,1.473,26,2.116,33,0.948,34,1.133,35,1.405,36,1.26,38,1.48,39,2.116,41,0.922,43,0.837,44,0.042,45,1.456,46,0.634,47,0.819,49,0.819,54,0.982,63,1.197,65,0.81,67,0.341,73,1.008,74,0.722,76,1.435,77,1.575,78,1.968,80,2.156,83,1.26,84,1.714,85,2.255,86,0.681,87,2.36,88,1.713,89,0.736,92,1.023,95,0.819,96,1.92,99,0.663,100,1.024,101,2.032,104,1.388,107,1.023,108,1.116,109,1.023,110,2.458,111,2.156,112,1.132,113,0.919,114,2.156,115,1.405,116,1.575,117,1.713,118,1.575,119,1.023,120,1.023,121,1.023,122,1.023,123,2.328,124,1.593,125,1.575,126,2.328,129,1.133,131,1.023,133,0.903,134,0.261,136,1.258,140,2.458,147,1.26,168,1.023,169,1.397,170,1.023,172,1.92,173,1.023,178,1.26,188,1.133,192,0.81,197,0.592,205,1.575,208,1.132,213,2.216,214,1.924,224,1.924,231,2.561,239,1.023,240,0.013,241,0.02,242,0.013,284,1.26,307,2.168,337,1.26,338,1.405,340,0.663,374,1.924,380,1.575,382,1.575,390,1.405,393,1.778,394,1.542,397,1.542,407,2.374,417,2.783,418,2.194,427,1.778,459,1.023,460,1.542,467,2.374,521,1.879,522,3.959,523,2.892,524,2.892,525,2.892,526,2.892,527,3.25,528,2.435,529,2.374,530,3.25,531,1.879,532,1.879,533,2.892,534,2.892,535,2.892,536,2.892,537,1.879,538,3.959,539,2.892,540,2.892,541,2.374,542,2.892,543,2.892,544,3.928,545,2.892,546,2.892,547,1.879,548,2.892,549,2.892,550,3.25,551,2.892,552,2.894,553,2.892,554,2.892,555,4.981,556,1.879,557,2.892,558,3.959,559,3.127,560,3.959,561,3.959,562,2.892,563,2.892,564,2.892,565,1.879,566,3.959,567,2.892,568,2.892,569,2.892,570,2.892,571,1.879,572,2.892,573,1.879,574,3.959,575,1.879,576,1.879,577,1.879,578,1.879,579,1.879,580,1.879,581,1.879,582,2.892,583,1.879,584,1.542,585,1.879,586,1.542,587,1.879,588,1.879,589,3.526,590,2.892,591,1.879,592,1.879,593,1.879,594,2.892,595,1.879,596,1.879]],["title/directives/QueryParamGroupDirective.html",[243,1.06,597,2.111]],["body/directives/QueryParamGroupDirective.html",[0,0.594,3,0.594,4,0.594,5,0.517,8,0.445,23,0.376,25,1.201,41,0.676,44,0.042,46,0.445,67,0.848,73,1.729,86,0.855,100,1.001,101,1.892,104,1.066,108,1.075,129,1.833,133,0.972,134,0.517,136,1.487,187,1.833,207,2.547,240,0.025,241,0.032,242,0.025,243,1.949,245,1.812,260,2.293,261,2.547,265,2.876,279,2.876,290,3.061,302,1.461,335,2.273,354,2.039,423,2.876,461,2.621,475,1.812,480,3.289,482,3.289,484,3.289,490,3.143,492,3.768,495,2.293,497,3.289,498,2.621,504,2.621,510,2.621,527,3.84,550,3.84,597,3.289,598,3.729,599,3.84,600,3.84,601,4.678,602,3.143,603,4.678,604,4.678,605,4.678,606,3.729,607,3.729,608,3.729,609,3.729,610,4.678,611,3.729,612,3.729,613,3.729,614,3.061,615,3.729,616,3.729,617,3.729,618,3.729,619,3.729,620,3.061,621,3.729,622,3.729,623,2.293,624,3.729]],["title/modules/QueryParamModule.html",[625,2.111,626,2.111]],["body/modules/QueryParamModule.html",[0,0.616,3,0.616,4,0.616,5,0.536,25,0.992,33,0.616,34,1.515,41,0.701,43,0.616,44,0.042,45,0.992,46,0.666,47,0.701,74,0.791,78,2.085,84,1.364,86,0.865,134,0.536,136,1.229,139,1.834,192,0.791,240,0.026,241,0.033,242,0.026,244,3.363,245,2.525,261,2.605,302,1.515,340,1.364,393,2.377,403,3.363,418,2.525,459,2.105,475,1.878,479,2.942,597,3.363,602,2.942,626,3.652,627,2.717,628,3.865,629,4.784,630,3.173,631,4.784,632,3.865,633,3.173,634,5.196,635,5.196,636,3.865,637,4.784,638,4.784,639,3.927,640,4.784,641,4.784,642,4.784,643,4.784,644,4.784,645,3.865,646,4.784,647,3.652,648,3.927,649,3.652,650,2.717,651,3.865,652,3.865,653,3.865,654,3.865,655,4.784,656,3.865]],["title/directives/QueryParamNameDirective.html",[243,1.06,602,1.847]],["body/directives/QueryParamNameDirective.html",[0,0.562,3,0.562,4,0.562,5,0.489,8,0.42,11,1.137,23,0.355,25,1.348,36,1.535,38,1.29,41,0.639,44,0.042,45,1.426,46,0.42,47,0.903,54,1.037,63,1.075,67,0.818,72,2.859,73,1.552,86,0.865,100,0.952,104,1.29,106,2.955,108,0.809,113,1.434,129,1.381,133,1.007,134,0.489,136,1.12,187,1.769,188,1.769,240,0.024,241,0.031,242,0.024,243,1.853,245,1.712,251,3.815,253,3.172,260,2.166,262,2.477,265,2.775,302,1.381,303,1.918,307,2.166,354,1.967,427,2.166,475,2.193,480,3.172,482,3.691,484,3.172,488,3.705,489,4.087,490,3.061,491,4.087,492,3.172,494,2.892,495,2.166,496,3.705,497,3.172,498,2.477,499,2.892,500,2.892,501,2.892,503,2.892,504,2.477,505,2.892,506,2.892,507,2.892,508,2.892,510,2.477,514,2.892,518,2.892,519,2.892,520,3.705,528,2.166,544,3.691,552,2.892,586,2.892,599,3.705,600,4.31,602,2.775,657,3.523,658,3.523,659,4.513,660,3.523,661,3.523,662,3.523,663,3.523,664,4.513,665,3.523,666,3.523,667,3.523,668,3.523]],["title/interfaces/QueryParamOpts.html",[50,0.859,256,0.771]],["body/interfaces/QueryParamOpts.html",[3,0.497,4,0.497,5,0.432,6,1.099,8,0.372,11,0.852,15,1.191,18,1.099,19,0.891,20,1.191,21,1.838,23,0.314,24,1.323,27,1.099,28,0.99,29,1.099,30,0.891,31,1.099,33,0.933,40,1.767,41,0.85,43,0.664,44,0.042,47,0.755,48,1.469,49,1.01,50,1.492,51,1.591,53,0.8,54,0.716,56,1.491,58,0.99,60,1.491,63,1.198,64,1.339,65,1.025,67,0.908,68,1.838,74,1.025,76,1.323,86,0.497,97,1.655,98,1.655,99,1.099,100,0.565,102,1.341,103,0.99,112,1.341,113,0.99,133,1.023,134,0.695,143,1.658,169,1.099,185,1.341,186,1.491,189,1.658,192,0.852,195,0.99,196,1.221,197,0.852,202,1.323,204,0.99,208,1.191,219,1.099,220,1.099,240,0.021,241,0.028,242,0.021,254,1.696,256,1.285,257,1.696,274,1.696,284,1.357,288,2.433,332,1.514,333,1.915,334,2.267,335,1.514,336,1.915,337,2.182,338,1.514,339,1.514,340,1.099,341,2.267,342,1.696,343,1.915,344,2.56,345,1.357,346,1.514,347,2.56,348,1.915,349,2.56,350,1.915,351,1.915,352,1.696,353,1.915,354,1.357,355,1.696,356,1.915,357,1.915,358,1.696,359,1.915,360,1.915,361,1.915,362,1.696,363,1.915,364,1.696,365,2.56,366,1.915,367,1.915,368,1.915,369,1.915,370,1.915,371,1.696,372,1.915,373,1.915,374,1.514,375,1.915,376,1.514,377,1.696,378,1.696,379,1.696,380,1.696,381,1.915,382,1.696,383,1.514,384,1.696,385,1.915,386,1.915,387,1.514,388,2.554,389,1.915,390,1.514,391,1.696,392,1.696]],["title/interfaces/QueryParamOptsBase.html",[40,1.06,256,0.771]],["body/interfaces/QueryParamOptsBase.html",[3,0.422,4,0.422,5,0.367,6,0.933,8,0.315,11,0.881,15,1.231,18,1.313,19,1.336,20,1.231,21,1.458,23,0.267,24,1.183,27,1.649,28,1.485,29,1.649,30,1.336,31,1.649,33,0.948,40,1.649,41,0.893,43,0.745,44,0.042,46,0.609,47,1.021,48,1.649,49,0.987,50,1.336,51,1.703,53,1.105,54,0.989,56,1.623,58,1.368,60,1.623,63,1.212,64,1.398,65,1.074,67,0.951,68,1.93,74,1.096,76,1.485,86,0.422,97,1.519,98,1.519,99,0.933,100,0.479,102,1.064,103,0.84,112,1.46,113,1.183,133,0.987,134,0.648,143,1.703,169,0.933,185,1.46,186,1.623,189,1.183,192,0.956,195,0.84,196,1.036,197,0.762,202,1.183,204,1.183,208,1.064,219,0.933,220,0.933,240,0.018,241,0.025,242,0.018,254,2.026,256,1.199,257,2.026,274,2.026,284,1.622,288,2.603,332,1.285,333,1.626,334,2.344,335,1.285,336,1.626,337,2.286,338,1.285,339,1.285,340,0.933,341,2.344,342,1.44,343,1.626,344,2.647,345,1.622,346,1.808,347,2.873,348,2.288,349,2.873,350,2.288,351,2.288,352,2.026,353,2.288,354,1.622,355,2.026,356,2.288,357,2.288,358,2.026,359,2.288,360,2.288,361,2.288,362,2.026,363,1.626,364,2.026,365,2.873,366,2.288,367,2.288,368,2.288,369,2.288,370,2.288,371,2.026,372,2.288,373,2.288,374,1.808,375,2.288,376,1.808,377,2.026,378,2.026,379,2.026,380,2.026,381,2.288,382,2.026,383,1.808,384,2.026,385,2.288,386,1.626,387,1.285,388,2.344,389,1.626,390,1.285,391,1.44,392,1.44]],["title/interfaces/RouterOptions.html",[256,0.771,418,1.46]],["body/interfaces/RouterOptions.html",[3,0.597,4,0.597,5,0.519,8,0.446,15,1.535,23,0.377,24,1.49,38,1.07,44,0.042,46,0.559,47,0.973,49,0.679,64,0.961,65,1.099,86,0.816,87,2.279,89,1.467,104,1.613,108,1.077,124,1.99,133,0.85,134,0.767,136,1.628,139,1.655,197,0.96,240,0.025,241,0.032,242,0.025,256,1.204,281,3.296,283,3.072,291,2.301,302,1.467,332,1.819,339,1.819,340,1.321,417,2.631,418,2.741,459,2.038,559,2.883,584,3.072,614,3.072,647,2.631,648,3.072,649,2.631,650,2.631,669,3.072,670,3.072,671,4.204,672,2.279,673,4.689,674,4.689,675,4.689,676,3.886,677,3.886,678,3.742,679,3.742,680,3.849,681,3.072,682,3.849,683,3.742,684,3.742,685,3.072,686,3.742,687,3.072,688,3.072,689,3.742,690,3.742,691,3.742,692,3.742,693,3.742,694,3.742,695,3.742,696,3.072,697,3.072,698,3.072]],["title/changelog.html",[672,1.228,699,1.376,700,2.526]],["body/changelog.html",[5,0.529,8,0.177,11,0.304,15,0.865,18,0.848,19,0.687,20,0.425,24,0.472,25,0.381,26,0.647,27,1.067,28,0.961,29,0.524,30,0.425,31,1.441,32,0.722,33,0.608,35,0.722,38,0.425,43,0.608,44,0.029,45,0.979,46,0.361,47,0.269,49,0.269,51,0.764,53,0.381,54,0.552,63,0.304,64,0.381,65,0.711,67,0.269,71,0.722,73,0.865,74,0.619,82,0.722,83,0.647,89,0.941,95,0.647,100,0.63,101,1.067,104,0.425,108,0.552,112,0.865,115,1.167,117,1.167,129,0.582,133,0.63,134,0.482,139,1.441,147,1.047,156,1.892,186,0.961,189,1.104,192,0.304,195,0.472,197,0.304,202,0.472,204,0.472,206,0.809,208,0.687,210,0.582,220,0.524,224,0.722,240,0.01,241,0.016,242,0.01,243,1.346,252,1.044,256,0.381,258,1.972,259,2.75,261,0.809,280,2.126,281,2.682,284,0.647,288,1.47,291,2.346,294,1.219,296,1.689,337,1.872,339,1.167,340,0.524,342,0.809,345,1.047,355,0.809,362,0.809,376,1.167,383,1.47,384,0.809,387,0.722,392,0.809,393,1.86,406,1.972,411,1.219,412,1.219,413,1.219,423,0.913,426,1.219,427,1.477,438,2.483,439,1.219,471,2.483,472,1.219,473,1.044,475,0.722,479,0.913,490,0.913,495,0.913,528,2.346,529,1.219,530,4.288,541,1.219,544,2.126,559,0.913,620,4.666,623,3.092,625,1.044,630,1.219,633,1.219,639,1.219,650,1.044,671,1.972,672,0.722,676,1.044,677,2.126,680,2.852,682,1.219,688,1.219,699,0.809,701,1.485,702,1.485,703,3.024,704,1.485,705,1.485,706,3.474,707,2.402,708,2.402,709,1.485,710,4.62,711,3.474,712,3.815,713,5.532,714,5.532,715,6.054,716,1.485,717,1.485,718,1.485,719,1.485,720,1.485,721,3.024,722,1.485,723,1.689,724,1.485,725,2.402,726,1.485,727,2.402,728,2.402,729,1.485,730,6.014,731,1.485,732,1.485,733,1.485,734,5.856,735,1.485,736,4.082,737,1.485,738,4.62,739,2.402,740,1.485,741,4.745,742,1.485,743,3.024,744,1.485,745,3.351,746,1.485,747,1.485,748,3.474,749,1.485,750,1.485,751,1.485,752,1.485,753,1.485,754,1.485,755,1.485,756,1.485,757,1.485,758,1.485,759,1.485,760,1.485,761,4.62,762,2.402,763,1.485,764,1.485,765,1.485,766,1.485,767,2.126,768,1.485,769,2.402,770,1.485,771,1.485,772,1.485,773,1.485,774,1.485,775,1.485,776,1.485,777,1.485,778,2.402,779,1.485,780,2.402,781,1.485,782,1.485,783,3.024,784,1.485,785,1.485,786,1.485,787,3.815,788,5.404,789,3.024,790,1.485,791,1.485,792,1.485,793,2.402,794,3.474,795,1.485,796,4.296,797,1.485,798,1.485,799,4.082,800,1.485,801,1.485,802,1.485,803,1.485,804,1.485,805,3.474,806,1.485,807,1.485,808,1.485,809,1.485,810,1.485,811,1.485,812,3.815,813,1.485,814,1.485,815,1.219,816,1.485,817,2.402,818,1.485,819,1.485,820,1.485,821,1.485,822,4.082,823,1.485,824,1.485,825,3.024,826,1.485,827,3.815,828,1.485,829,1.485,830,3.024,831,1.485,832,1.485,833,1.485,834,1.485,835,4.946,836,2.402,837,1.485,838,1.485,839,3.474,840,1.485,841,1.485,842,1.485,843,1.485,844,1.485,845,1.485,846,1.485,847,1.485,848,1.485,849,1.485,850,1.485,851,2.402,852,2.402,853,1.485,854,1.485,855,1.485,856,1.485,857,1.485,858,2.402,859,1.485,860,2.402,861,1.485,862,2.402,863,1.485,864,1.972,865,1.485,866,1.485,867,1.485,868,1.485,869,2.402,870,1.485,871,1.485,872,3.024,873,2.402,874,1.485,875,1.485,876,1.485,877,1.485,878,1.485,879,1.485,880,1.485,881,1.485,882,1.485,883,4.296,884,1.485,885,1.485,886,3.024,887,1.485,888,1.485,889,2.402,890,1.485,891,1.485,892,1.485,893,1.485,894,2.483,895,1.485,896,1.485,897,1.485,898,1.485,899,2.402,900,2.402,901,1.485,902,1.485,903,1.485,904,1.485,905,1.485,906,1.485,907,1.485,908,1.485,909,1.485,910,1.485,911,1.485,912,1.485,913,1.485,914,1.485,915,1.485,916,1.485,917,1.485,918,1.485,919,1.485,920,1.485,921,1.485,922,1.485,923,1.485,924,1.485,925,1.485,926,1.485,927,1.485,928,1.485,929,1.485,930,1.485,931,3.024,932,1.485,933,1.485,934,1.485,935,2.402,936,1.485,937,1.485,938,3.672,939,1.485,940,1.485,941,1.485,942,1.485,943,1.485,944,1.485,945,1.485,946,1.485,947,2.402,948,1.485,949,1.485,950,1.485,951,1.485,952,1.485,953,4.082,954,1.485,955,1.485,956,1.485,957,1.485,958,1.485,959,1.485,960,1.485,961,2.402,962,2.402,963,1.485,964,2.402,965,1.485,966,3.024,967,1.485,968,2.402,969,1.485,970,1.485,971,3.024,972,3.474,973,1.485,974,3.815,975,1.485,976,1.485,977,1.485,978,1.485,979,1.485,980,1.485,981,1.485,982,1.485,983,3.815,984,1.485,985,1.485,986,1.485,987,1.485,988,1.485,989,1.485,990,1.485,991,1.485,992,1.485,993,2.402,994,1.485,995,4.082,996,1.485,997,1.485,998,1.485,999,1.485,1000,2.402,1001,3.474,1002,1.485,1003,1.485,1004,1.485,1005,1.485,1006,1.485,1007,1.485,1008,1.485,1009,1.485,1010,1.485,1011,1.485,1012,4.404,1013,5.365,1014,2.402,1015,1.485,1016,1.485,1017,1.485,1018,1.485,1019,3.474,1020,1.485,1021,1.485,1022,1.485,1023,1.485,1024,1.485,1025,1.485,1026,1.485,1027,1.485,1028,1.485,1029,1.485,1030,1.485,1031,1.485,1032,1.485,1033,1.485,1034,1.485,1035,1.485,1036,1.485,1037,1.485,1038,1.485,1039,2.402,1040,3.024,1041,1.485,1042,1.485,1043,1.485,1044,1.485,1045,1.485,1046,1.485,1047,1.485,1048,1.485,1049,1.485,1050,1.485,1051,2.402,1052,1.485,1053,2.402,1054,1.485,1055,2.402,1056,1.485,1057,1.485,1058,1.485,1059,1.485,1060,1.485,1061,1.485,1062,1.485,1063,1.485,1064,1.219,1065,1.485,1066,1.485,1067,2.402,1068,1.485,1069,1.485,1070,1.485,1071,1.485,1072,1.485,1073,1.485,1074,1.485,1075,2.402,1076,1.485,1077,1.485,1078,1.485,1079,1.485,1080,1.485,1081,1.485,1082,1.485,1083,1.485,1084,1.485,1085,1.485,1086,1.485,1087,3.474,1088,1.485,1089,1.485,1090,1.485,1091,1.485,1092,1.485,1093,1.485,1094,1.485,1095,1.485,1096,1.485,1097,1.485,1098,1.485,1099,1.485,1100,1.485,1101,1.485,1102,1.485,1103,1.485,1104,1.972,1105,1.485,1106,1.485,1107,1.485,1108,1.219,1109,1.485,1110,1.219,1111,1.485,1112,1.219,1113,0.913,1114,1.485,1115,2.402,1116,1.485,1117,1.485,1118,1.485,1119,1.485,1120,1.485,1121,1.485,1122,4.296,1123,1.485,1124,1.485,1125,1.485,1126,1.485,1127,1.485,1128,1.485,1129,1.485,1130,2.402,1131,1.219,1132,1.485,1133,1.485,1134,1.485,1135,1.485,1136,1.485,1137,1.485,1138,1.485,1139,1.485,1140,1.485,1141,1.485,1142,1.485,1143,1.485,1144,1.485,1145,1.485,1146,1.485,1147,1.485,1148,2.402,1149,1.485,1150,1.485,1151,1.485,1152,1.485,1153,1.485,1154,1.485,1155,1.485,1156,1.485,1157,1.485,1158,1.485,1159,1.485,1160,1.485,1161,1.485,1162,1.485,1163,2.402,1164,1.485,1165,1.485,1166,1.485,1167,1.485,1168,1.485,1169,1.485,1170,1.485,1171,1.485,1172,3.474,1173,1.485,1174,1.485,1175,1.485,1176,1.485,1177,1.485,1178,1.485,1179,1.485,1180,1.485,1181,1.485,1182,1.485,1183,1.485,1184,1.485,1185,1.485,1186,1.485,1187,1.485,1188,3.024,1189,1.485,1190,1.485,1191,1.485,1192,1.485,1193,1.485,1194,1.485,1195,1.485,1196,1.485,1197,2.402,1198,1.485,1199,1.485,1200,1.485,1201,1.485,1202,2.402,1203,1.485,1204,1.485,1205,1.485,1206,1.485,1207,1.485,1208,1.485,1209,1.485,1210,1.485,1211,1.485,1212,1.485,1213,1.485,1214,2.402,1215,1.485,1216,1.485,1217,3.474,1218,2.402,1219,1.485,1220,1.485,1221,1.485,1222,1.219,1223,1.485,1224,1.485,1225,1.485,1226,1.485,1227,1.485,1228,3.024,1229,1.485,1230,1.485,1231,1.485,1232,1.972,1233,1.485,1234,1.485,1235,2.402,1236,1.485,1237,1.485,1238,1.485,1239,1.485,1240,1.485,1241,1.485,1242,1.485,1243,1.485,1244,1.485,1245,1.485,1246,1.485,1247,1.485,1248,1.485,1249,1.485,1250,1.485,1251,1.485,1252,1.485,1253,1.485,1254,1.485,1255,1.485,1256,1.485,1257,1.485]],["title/dependencies.html",[723,2.532,1258,2.526]],["body/dependencies.html",[44,0.041,89,1.812,240,0.031,241,0.036,242,0.031,302,1.812,303,2.518,681,3.796,723,3.743,938,3.796,1131,3.796,1259,4.624,1260,4.624,1261,4.624,1262,5.761,1263,4.624]],["title/miscellaneous/functions.html",[210,1.412,1264,1.228]],["body/miscellaneous/functions.html",[8,0.673,19,1.465,23,0.378,30,1.465,33,0.947,38,1.342,39,1.633,43,0.951,44,0.041,45,1.47,46,0.673,47,1.082,53,1.205,54,1.296,56,1.628,60,1.628,74,1.155,84,2.02,100,0.851,102,1.072,124,1.656,147,2.459,192,1.155,210,1.469,240,0.026,241,0.032,242,0.026,345,2.233,346,2.49,403,2.634,404,3.852,420,4.631,462,3.076,1264,1.821,1265,4.692,1266,5.641,1267,4.692,1268,4.692,1269,4.692,1270,4.692,1271,4.692,1272,4.692,1273,3.747,1274,3.747,1275,3.747,1276,5.641,1277,3.747,1278,3.747,1279,3.747,1280,3.747,1281,3.747]],["title/index.html",[23,0.255,672,1.228,699,1.376]],["body/index.html",[8,0.52,43,0.695,44,0.035,49,0.791,65,1.053,67,0.791,76,1.386,83,2.242,185,1.471,240,0.03,241,0.035,242,0.03,259,2.681,275,3.58,291,3.366,303,2.374,335,2.119,376,2.119,377,2.374,423,2.681,440,4.224,446,4.224,449,3.58,528,2.681,623,2.681,672,2.119,685,4.224,687,3.58,699,2.374,767,3.065,815,3.58,894,3.58,1064,3.58,1104,4.224,1110,3.58,1113,2.681,1282,4.36,1283,4.36,1284,4.36,1285,4.36,1286,4.36,1287,4.36,1288,4.36,1289,4.36,1290,4.36,1291,4.36,1292,4.36,1293,4.36,1294,4.36,1295,4.36,1296,4.36,1297,4.36,1298,5.146,1299,4.36,1300,4.36,1301,3.58]],["title/license.html",[672,1.228,699,1.376,1113,1.553]],["body/license.html",[44,0.034,88,2.029,184,2.274,240,0.028,241,0.034,242,0.028,280,2.936,334,2.274,485,4.412,559,2.568,623,3.084,767,2.936,1012,3.428,1108,3.428,1112,4.117,1113,2.568,1301,3.428,1302,5.375,1303,4.176,1304,4.176,1305,4.176,1306,5.015,1307,4.176,1308,4.176,1309,4.176,1310,4.176,1311,4.176,1312,4.176,1313,5.944,1314,4.176,1315,4.176,1316,4.176,1317,4.176,1318,5.015,1319,4.176,1320,4.176,1321,4.176,1322,4.176,1323,4.176,1324,4.176,1325,4.176,1326,4.176,1327,5.015,1328,4.176,1329,4.176,1330,4.176,1331,4.176,1332,4.176,1333,4.176,1334,5.015,1335,5.015,1336,4.176,1337,4.176,1338,4.176,1339,4.176,1340,4.176,1341,4.176,1342,4.176,1343,4.176,1344,4.176,1345,4.176,1346,4.176,1347,4.176,1348,4.176,1349,4.176,1350,4.176,1351,4.176,1352,4.176,1353,4.176,1354,4.176,1355,4.176,1356,4.176,1357,4.176,1358,4.176,1359,4.176,1360,4.176,1361,4.176,1362,4.176]],["title/modules.html",[627,2.856]],["body/modules.html",[44,0.037,240,0.032,241,0.037,242,0.032,626,3.346,627,3.346,1363,4.76]],["title/overview.html",[1364,3.335]],["body/overview.html",[2,2.285,44,0.037,240,0.032,241,0.037,242,0.032,245,2.285,332,2.285,400,3.305,625,3.305,1222,3.86,1232,4.413,1364,3.86,1365,5.376]],["title/miscellaneous/typealiases.html",[1264,1.228,1366,3.602]],["body/miscellaneous/typealiases.html",[20,1.444,23,0.426,33,0.892,38,1.207,43,0.673,44,0.034,46,0.602,48,1.782,49,0.766,50,1.207,51,1.716,53,1.084,56,1.605,60,1.605,63,0.864,64,1.084,65,1.105,97,1.906,98,1.906,143,1.88,177,2.299,178,1.84,185,1.444,192,0.864,195,1.605,200,2.299,210,1.655,240,0.029,241,0.034,242,0.029,286,4.144,338,2.453,341,2.941,345,1.84,346,2.052,358,2.299,364,2.299,371,2.299,387,2.052,388,2.299,391,2.299,445,3.466,473,2.968,745,3.466,1264,2.052,1367,4.222,1368,5.805,1369,4.222,1370,4.222,1371,4.222,1372,4.222,1373,4.222,1374,4.222,1375,5.048]],["title/miscellaneous/variables.html",[1264,1.228,1376,2.957]],["body/miscellaneous/variables.html",[23,0.446,33,0.878,44,0.041,46,0.619,49,0.802,74,1.127,108,1.016,139,1.561,197,1.127,240,0.03,241,0.035,242,0.03,418,2.676,459,2.409,647,3.648,649,3.648,669,3.631,670,4.521,676,3.109,677,3.109,696,3.631,697,3.631,698,3.631,864,4.26,1264,2.15,1376,3.631,1377,5.189,1378,5.189,1379,5.189,1380,4.423,1381,4.423,1382,4.423]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":200,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"miscellaneous/typealiases.html":{}}}],["0.0.2",{"_index":1257,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1256,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["0.7.2",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["00a5667",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["0529276",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["05b48ca",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["0633526",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["07c103e",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["085d120",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["0bcff67",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["0d509d0",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["0e28c35",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["0f0b48d",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["0f566ad",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1365,"title":{},"body":{"overview.html":{}}}],["1.1.2",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["15ce1ee",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["17f368e",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["19d8180",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["1add8a8",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["1b74a5a",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["1dfa9ba",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":1012,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["2d8313b",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["2e39369",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["2ea841b",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["2f2675e",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["32b080e",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["35a48be",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":1255,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["3ab996d",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["3bfc1b0",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["3d1a793",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["3ed6e3e",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["3f30355",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1222,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["40",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["448c51f",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["48f2da4",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["4ae172a",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["4de02a4",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1232,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["50ebf0d",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["51ca66e",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["5229ba9",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["58a71a7",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["59",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["5c76c67",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["5d90b63",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["60377e5",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["60ba6dd",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["60d8bd8",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["6148a68",{"_index":1242,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["62",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["62f357c",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["63f83a5",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["6420b9e",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["644cc20",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["6ade19d",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["7022023",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["70f1e62",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["73c58cf",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["781f009",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["78c8c4e",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":1254,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["81336f4",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["8c9d268",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["93a5281",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["962bc32",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["96985ca",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["97",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["985a96b",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["98fe148",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["9dfaa92",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["9e7fdb4",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":309,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["_clearchangefunctions",{"_index":121,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_queryparamadded",{"_index":576,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["_registeronchange(fn",{"_index":119,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_setparent(parent",{"_index":127,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["_updatevalue(opts",{"_index":596,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["_valuechanges",{"_index":107,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["a0bde9b",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["a0de621",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["a1b5349",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["a579a4a",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["a5f4d74",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["a6352fb",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["a94ccc6",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["aadad1b",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["aba7bd1",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1333,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstraction",{"_index":682,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["abstractqueryparam",{"_index":1,"title":{"classes/AbstractQueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:132",{"_index":331,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:58",{"_index":330,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:67",{"_index":329,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:70",{"_index":328,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:73",{"_index":326,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:76",{"_index":325,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:79",{"_index":327,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:82",{"_index":324,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:85",{"_index":323,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparambase",{"_index":22,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["accepts",{"_index":484,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["access",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["accessor.directive.ts",{"_index":247,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":272,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:49",{"_index":285,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:60",{"_index":293,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:69",{"_index":298,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.interface",{"_index":499,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["accessors",{"_index":393,"title":{},"body":{"classes/PartitionedQueryParam.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["accessors/accessors",{"_index":645,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["accessors/util",{"_index":501,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["achieve",{"_index":209,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["action",{"_index":1356,"title":{},"body":{"license.html":{}}}],["actually",{"_index":17,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ad",{"_index":249,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["ad3f917",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["adapt",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["adapter",{"_index":650,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["adapter.interface",{"_index":460,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["adapter.interface.ts",{"_index":670,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["adapter/router",{"_index":459,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":528,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add(queryparamname",{"_index":536,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["added",{"_index":620,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":374,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["adds",{"_index":538,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["adjust",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["aea857a",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["afeae98",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["afterwards",{"_index":542,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["against",{"_index":207,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamGroupDirective.html":{}}}],["alias",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1367,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":131,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["always",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["analytics",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1325,"title":{},"body":{"license.html":{}}}],["angular",{"_index":339,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["angular.json",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":302,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":303,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":681,"title":{},"body":{"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["another",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":570,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["api",{"_index":259,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":254,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["apply",{"_index":356,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["approach",{"_index":1286,"title":{},"body":{"index.html":{}}}],["areequalusing",{"_index":90,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["areequalusing(value",{"_index":191,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["arising",{"_index":1360,"title":{},"body":{"license.html":{}}}],["around",{"_index":683,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["array",{"_index":195,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["assert",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1314,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1350,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["b19a81e",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["bab1e45",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":392,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["bad6c06",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["badge",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":10,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["bb15442",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["bbaf6e4",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["bbc9a66",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["bcfd06e",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["belongs",{"_index":132,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["benefits",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":182,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["bf6c355",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":279,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["binds",{"_index":482,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["bit",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":124,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{}}}],["booleanparam",{"_index":411,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(urlparam",{"_index":414,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":441,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bound",{"_index":206,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{}}}],["branch",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["broken",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1363,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["buffering",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["builder.service.ts",{"_index":404,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["builder.service.ts:118",{"_index":429,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:145",{"_index":415,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:172",{"_index":431,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:41",{"_index":419,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:75",{"_index":434,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:91",{"_index":451,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["building",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":523,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["button",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1305,"title":{},"body":{"license.html":{}}}],["c",{"_index":1303,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["c6b3a1e",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["c6cd845",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["c91c440",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["ca45e43",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["ca6f87d",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":295,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["carries",{"_index":535,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["case",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["cc7a558",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["cfa25df",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":288,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["changed",{"_index":380,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["changefn(this.value",{"_index":239,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["changefn(value",{"_index":171,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["changefunctions",{"_index":109,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["changelog",{"_index":700,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":112,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["changes['name",{"_index":665,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["changes['queryparam",{"_index":512,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["changes['queryparamgroup",{"_index":611,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["changing",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1310,"title":{},"body":{"license.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirective",{"_index":637,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["checking",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["child",{"_index":601,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chmod",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1353,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"overview.html":{}}}],["clean",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":440,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"index.html":{}}}],["collecting",{"_index":526,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["collection",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["collections",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":391,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["combinewith",{"_index":27,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["coming",{"_index":350,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["command",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["comment",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["commitlint",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["comparator",{"_index":51,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["compares",{"_index":1370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":28,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["comparison",{"_index":367,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["complete",{"_index":114,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["complex",{"_index":432,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["component",{"_index":252,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"changelog.html":{}}}],["component's",{"_index":282,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["components",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1332,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1298,"title":{},"body":{"index.html":{}}}],["config",{"_index":633,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeroptions",{"_index":656,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configuration",{"_index":427,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["connection",{"_index":184,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"license.html":{}}}],["consider",{"_index":439,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["considered",{"_index":357,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["consistently",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":136,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["constructor(private",{"_index":609,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["constructor(queryparams",{"_index":394,"title":{},"body":{"classes/PartitionedQueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["constructor(urlparam",{"_index":37,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["constructors",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["contain",{"_index":223,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["content",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1357,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1296,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1297,"title":{},"body":{"index.html":{}}}],["control",{"_index":186,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["control's",{"_index":286,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"miscellaneous/typealiases.html":{}}}],["controls",{"_index":1104,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":251,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["controlvalueaccessordirective",{"_index":244,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{}}}],["controlvaluechange",{"_index":269,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["controlvaluechanges",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["conventional",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":211,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["converted",{"_index":1375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["copies",{"_index":1327,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1112,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copy&paste",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1302,"title":{},"body":{"license.html":{}}}],["core",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":406,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["createbooleandeserializer",{"_index":1265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleandeserializer(defaultvalue",{"_index":1275,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanserializer",{"_index":1267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanserializer(defaultvalue",{"_index":1277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createemptyondeserializer",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["createnumberdeserializer",{"_index":1268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberdeserializer(defaultvalue",{"_index":1278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberserializer",{"_index":1269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberserializer(defaultvalue",{"_index":1279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":420,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["createstringdeserializer",{"_index":1270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringdeserializer(defaultvalue",{"_index":1280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringserializer",{"_index":1271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringserializer(defaultvalue",{"_index":1281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creating",{"_index":386,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["creation",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":76,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["currently",{"_index":290,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["custom",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["customparam",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["d1d0a1b",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["d33fa5d",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["d9f96e3",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1354,"title":{},"body":{"license.html":{}}}],["data",{"_index":1290,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["dc628b6",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":18,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["de0d0e0",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1316,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1362,"title":{},"body":{"license.html":{}}}],["debounce",{"_index":355,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["debounced",{"_index":349,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["debouncetime",{"_index":29,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["dec2d0f",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":652,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["declarative",{"_index":1285,"title":{},"body":{"index.html":{}}}],["declaratively",{"_index":1282,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deserializer",{"_index":452,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_boolean_serializer",{"_index":453,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_deserializer",{"_index":454,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_serializer",{"_index":455,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_deserializer",{"_index":456,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_serializer",{"_index":457,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["defaultcontrolvalueaccessordirective",{"_index":638,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["defaultrouteradapter",{"_index":646,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["defaultrouteroptions",{"_index":647,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["defaultvalue",{"_index":1276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["define",{"_index":448,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["defined",{"_index":41,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["defines",{"_index":341,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["defining",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["definitions",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":587,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["demo",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["demonstrate",{"_index":1249,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":723,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["dependency",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["depending",{"_index":551,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["deploy",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["deregister",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["describes",{"_index":177,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"miscellaneous/typealiases.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deserialization",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["deserialize",{"_index":30,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["deserializer",{"_index":346,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserializevalue(value",{"_index":166,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["deserializing",{"_index":160,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["designed",{"_index":1291,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["detached",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["determine",{"_index":364,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["dev",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["devkit/schematics",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["didn't",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":614,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"interfaces/RouterOptions.html":{}}}],["differs",{"_index":70,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["direct",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":378,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["directive",{"_index":243,"title":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["directives",{"_index":245,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["directives/directives",{"_index":636,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["directly",{"_index":483,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["disable",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":287,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["disabledchange",{"_index":270,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribute",{"_index":1323,"title":{},"body":{"license.html":{}}}],["docs",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":599,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["domain",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":615,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dynamically",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["e.g",{"_index":68,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["e0e875b",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["e100621",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["e4ed111",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["e57e700",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":140,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["easy",{"_index":1284,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["ebc0d9d",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["ecf709e",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["ee2c473",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":372,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["effects",{"_index":1374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["element",{"_index":600,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["elementref",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["elements",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":123,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emitmodeltoviewchange",{"_index":126,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emits",{"_index":110,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emitted",{"_index":525,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["empty",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["emptyon",{"_index":31,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["encapsulates",{"_index":203,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["encode",{"_index":444,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["ensure",{"_index":115,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["entirely",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":1371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["equality",{"_index":1373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["equals",{"_index":365,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["equivalent",{"_index":277,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["error",{"_index":156,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{}}}],["error(`a",{"_index":583,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["error(`binding",{"_index":613,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`combinewith",{"_index":152,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`comparewith",{"_index":149,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`deserialize",{"_index":146,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`no",{"_index":586,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`parameter",{"_index":130,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`partition",{"_index":226,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`partitioned",{"_index":222,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`please",{"_index":138,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`reduce",{"_index":229,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`serialize",{"_index":142,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`you",{"_index":619,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["errors",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["essentially",{"_index":179,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["evaluated",{"_index":540,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["event",{"_index":280,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["eventemitter",{"_index":271,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["events",{"_index":258,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["example",{"_index":438,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["examples",{"_index":687,"title":{},"body":{"interfaces/RouterOptions.html":{},"index.html":{}}}],["exclude",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["executable",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["execute",{"_index":370,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["exists",{"_index":584,"title":{},"body":{"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["explanation",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["explicitly",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":134,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["exportas",{"_index":304,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exports",{"_index":653,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["expost",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1341,"title":{},"body":{"license.html":{}}}],["extends",{"_index":21,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["extras",{"_index":417,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["f02d26d",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["f1cdfeb",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["f27f369",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["f394fa6",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["f4c3365",{"_index":1243,"title":{},"body":{"changelog.html":{}}}],["f526b61",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["f570513",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":169,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["fce4ec2",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":442,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["files",{"_index":1315,"title":{},"body":{"license.html":{}}}],["filters",{"_index":1289,"title":{},"body":{"index.html":{}}}],["fired",{"_index":273,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["first",{"_index":471,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fitness",{"_index":1346,"title":{},"body":{"license.html":{}}}],["fix",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":317,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fnchange",{"_index":308,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fntouched",{"_index":310,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["following",{"_index":1331,"title":{},"body":{"license.html":{}}}],["forget",{"_index":663,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":185,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format",{"_index":574,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["forms",{"_index":815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["forroot",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["forwarded",{"_index":674,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["forwardref",{"_index":264,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["found",{"_index":552,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1309,"title":{},"body":{"license.html":{}}}],["function",{"_index":143,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":210,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":1330,"title":{},"body":{"license.html":{}}}],["further",{"_index":567,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["g",{"_index":216,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["g[i",{"_index":217,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["g[number",{"_index":218,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ga",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["get(queryparamname",{"_index":546,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["getcurrentnavigation",{"_index":693,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["getting",{"_index":699,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["getvalue",{"_index":397,"title":{},"body":{"classes/PartitionedQueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["gh",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":284,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["global",{"_index":426,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["globally",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["glue",{"_index":181,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["google",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1308,"title":{},"body":{"license.html":{}}}],["green",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":101,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(queryparams",{"_index":416,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.directive.ts",{"_index":598,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:23",{"_index":606,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.service",{"_index":498,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.ts",{"_index":521,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:110",{"_index":565,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:126",{"_index":573,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:142",{"_index":556,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:171",{"_index":571,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:28",{"_index":532,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:42",{"_index":531,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:73",{"_index":547,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:92",{"_index":537,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["groupchange",{"_index":610,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupchange.currentvalue",{"_index":618,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupchange.firstchange",{"_index":612,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groups",{"_index":407,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["groupservice",{"_index":504,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["guide",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["guidelines",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["haven't",{"_index":621,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["heading",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["headings",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["headline",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1307,"title":{},"body":{"license.html":{}}}],["hide",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["hoc",{"_index":250,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["holders",{"_index":1351,"title":{},"body":{"license.html":{}}}],["holds",{"_index":13,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["host",{"_index":253,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["https://angular.io/api/forms/controlvalueaccessor",{"_index":488,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["https://www.app.io?param=a&param=b&param=c",{"_index":343,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["husky",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["i.e",{"_index":369,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["icon",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":475,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["imperative",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":187,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["implied",{"_index":1342,"title":{},"body":{"license.html":{}}}],["import",{"_index":86,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["imports",{"_index":651,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["improve",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1287,"title":{},"body":{"index.html":{}}}],["included",{"_index":1336,"title":{},"body":{"license.html":{}}}],["including",{"_index":1318,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":389,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["infer",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["inform",{"_index":297,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["information",{"_index":446,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"index.html":{}}}],["ingo",{"_index":1304,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":322,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["initially",{"_index":541,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["inject",{"_index":494,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["inject(ng_value_accessor",{"_index":505,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["injectable",{"_index":400,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"overview.html":{}}}],["injectables",{"_index":402,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["injection",{"_index":696,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":678,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_adapter",{"_index":695,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_options",{"_index":698,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":495,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["input('queryparam",{"_index":502,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["input('queryparamgroup",{"_index":608,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamname",{"_index":662,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inputs",{"_index":354,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["inside",{"_index":72,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamNameDirective.html":{}}}],["install",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["installation",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":550,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{}}}],["instances",{"_index":390,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["instead",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["interaction",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":256,"title":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["interfaces",{"_index":332,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"overview.html":{}}}],["internal",{"_index":104,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["intuitive",{"_index":1293,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":373,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["isfunction",{"_index":91,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(combinewith",{"_index":151,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(comparewith",{"_index":148,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(deserialize",{"_index":145,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(opts.partition",{"_index":225,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(opts.reduce",{"_index":228,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(serialize",{"_index":141,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ismissing",{"_index":92,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["ismissing(queryparam",{"_index":592,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["ismissing(urlparam",{"_index":137,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ismultiopts",{"_index":1272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiopts(opts",{"_index":462,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["ispresent",{"_index":93,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ispresent(combinewith",{"_index":150,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["ispresent(this.parent",{"_index":174,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["item",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":534,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["keyed",{"_index":467,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["keyof",{"_index":215,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["kind",{"_index":1340,"title":{},"body":{"license.html":{}}}],["landing",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1355,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1352,"title":{},"body":{"license.html":{}}}],["license",{"_index":1113,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limitation",{"_index":1319,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["limited",{"_index":1343,"title":{},"body":{"license.html":{}}}],["line",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":133,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["linting",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":204,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["listed",{"_index":561,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["listen",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":78,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["location",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["loose",{"_index":366,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["loose_identity_comparator",{"_index":458,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["made",{"_index":368,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["make",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":1283,"title":{},"body":{"index.html":{}}}],["making",{"_index":449,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"index.html":{}}}],["mandatory",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["manipulate",{"_index":686,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["map(this.serialize.bind(this",{"_index":198,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["margin",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["master",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["matched",{"_index":603,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["matching",{"_index":241,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":470,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["means",{"_index":358,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["mention",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1345,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1108,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merging",{"_index":557,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["metadata",{"_index":260,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["method",{"_index":296,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["methods",{"_index":34,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["milliseconds",{"_index":347,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["misalignment",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1264,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1301,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{}}}],["model/query",{"_index":461,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["models",{"_index":212,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["modify",{"_index":1321,"title":{},"body":{"license.html":{}}}],["module",{"_index":625,"title":{"modules/QueryParamModule.html":{}},"body":{"changelog.html":{},"overview.html":{}}}],["modules",{"_index":627,"title":{"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":634,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["moment",{"_index":1300,"title":{},"body":{"index.html":{}}}],["more",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":348,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["multi",{"_index":189,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["multi:true",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":208,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["multiqueryparam",{"_index":12,"title":{"classes/MultiQueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["multiqueryparam(urlparam",{"_index":477,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["multiqueryparamopts",{"_index":102,"title":{"interfaces/MultiQueryParamOpts.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{}}}],["multiselectcontrolvalueaccessordirective",{"_index":639,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["multiselectoptiondirective",{"_index":640,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.directive",{"_index":607,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["name.directive.ts",{"_index":657,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:24",{"_index":658,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name]{@link",{"_index":660,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange",{"_index":664,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange.currentvalue",{"_index":668,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange.firstchange",{"_index":666,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["names",{"_index":382,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["naming",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["navigate(queryparams",{"_index":691,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["navigating",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":671,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["navigations",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":437,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["needs",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":108,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1064,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":262,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngmodule",{"_index":635,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["ngonchanges(changes",{"_index":510,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngondestroy",{"_index":519,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngqp",{"_index":291,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":1110,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_router_adapter",{"_index":648,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{}}}],["ngqp_router_options",{"_index":649,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["noninfringement",{"_index":1349,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["noscript",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["notable",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":113,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["notice",{"_index":1334,"title":{},"body":{"license.html":{}}}],["notifychange",{"_index":266,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(value",{"_index":292,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifytouched",{"_index":267,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":54,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":53,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["numbercontrolvalueaccessor",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirective",{"_index":641,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["numberparam",{"_index":412,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numberparam(urlparam",{"_index":428,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["numericparam",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":533,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.keys(this.queryparams).foreach(queryparamname",{"_index":590,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.keys(value).foreach(queryparamname",{"_index":591,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.values(this.queryparams).foreach(queryparam",{"_index":580,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["observable",{"_index":87,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["obtaining",{"_index":1312,"title":{},"body":{"license.html":{}}}],["occur",{"_index":568,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["once",{"_index":336,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["onchangefunction",{"_index":96,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["onchanges",{"_index":490,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["ondestroy",{"_index":491,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["one",{"_index":224,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["oninit",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["onlyself",{"_index":125,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["option",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":15,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["opts",{"_index":39,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"miscellaneous/functions.html":{}}}],["opts.emitevent",{"_index":172,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["opts.emitmodeltoviewchange",{"_index":168,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["opts.multi",{"_index":463,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["opts.onlyself",{"_index":175,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["opts.partition",{"_index":227,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["opts.reduce",{"_index":230,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["opts.ts",{"_index":333,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["order",{"_index":684,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["others",{"_index":435,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["otherwise",{"_index":1359,"title":{},"body":{"license.html":{}}}],["out",{"_index":1361,"title":{},"body":{"license.html":{}}}],["outer",{"_index":487,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["output",{"_index":301,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('controlvaluechange",{"_index":305,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchange",{"_index":306,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outputs",{"_index":268,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outside",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["overflows",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["overriding",{"_index":425,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["overview",{"_index":1364,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":572,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["package",{"_index":1258,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":376,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"index.html":{}}}],["pages",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["pageview",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["pagination",{"_index":377,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["param",{"_index":100,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["param(urlparam",{"_index":430,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.directive.ts",{"_index":481,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["param.directive.ts:26",{"_index":493,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["param.module.ts",{"_index":628,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["param.module.ts:61",{"_index":632,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["param.ts",{"_index":7,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["param.ts:132",{"_index":79,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:167",{"_index":399,"title":{},"body":{"classes/QueryParam.html":{}}}],["param.ts:199",{"_index":321,"title":{},"body":{"classes/MultiQueryParam.html":{}}}],["param.ts:241",{"_index":395,"title":{},"body":{"classes/PartitionedQueryParam.html":{}}}],["param.ts:266",{"_index":398,"title":{},"body":{"classes/PartitionedQueryParam.html":{}}}],["param.ts:270",{"_index":396,"title":{},"body":{"classes/PartitionedQueryParam.html":{}}}],["param.ts:58",{"_index":75,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:67",{"_index":62,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:70",{"_index":61,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:73",{"_index":57,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:76",{"_index":55,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:79",{"_index":59,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:82",{"_index":52,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:85",{"_index":42,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["paramchange",{"_index":511,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["paramchange.currentvalue",{"_index":516,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["paramcombinator",{"_index":48,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeserializer",{"_index":56,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter",{"_index":63,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parameter's",{"_index":14,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["parammap",{"_index":679,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["params",{"_index":680,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["paramserializer",{"_index":60,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":106,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamNameDirective.html":{}}}],["parmas",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1347,"title":{},"body":{"license.html":{}}}],["partition",{"_index":219,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["partition(queryparams",{"_index":433,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["partitioned",{"_index":202,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["partitionedqueryparam",{"_index":213,"title":{"classes/PartitionedQueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["partitionedqueryparam(queryparams",{"_index":476,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["partitionedqueryparamopts",{"_index":103,"title":{"interfaces/PartitionedQueryParamOpts.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["partitioner",{"_index":97,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["partitioning",{"_index":436,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["parts",{"_index":388,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":422,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["passed",{"_index":344,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["passing",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["patchvalue",{"_index":529,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(value",{"_index":554,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["path",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1306,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1328,"title":{},"body":{"license.html":{}}}],["person",{"_index":1311,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1329,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":276,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["phrasing",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":694,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["pin",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":605,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["please",{"_index":1299,"title":{},"body":{"index.html":{}}}],["png",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1338,"title":{},"body":{"license.html":{}}}],["possible",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["prefer",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["preservefragment",{"_index":676,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":421,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["private",{"_index":307,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["process",{"_index":604,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["programmatic",{"_index":351,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["project",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":692,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["propagation",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["proper",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":24,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["property",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["protected",{"_index":105,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["provide",{"_index":139,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":559,"title":{},"body":{"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":464,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["providers",{"_index":261,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["provides",{"_index":248,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{}}}],["proxying",{"_index":255,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["public",{"_index":25,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1322,"title":{},"body":{"license.html":{}}}],["published",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1348,"title":{},"body":{"license.html":{}}}],["push",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["pwa",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["q",{"_index":69,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"index.html":{}}}],["queryparam",{"_index":11,"title":{"classes/QueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["queryparam#urlparam",{"_index":661,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["queryparam(group",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["queryparam(urlparam",{"_index":478,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparam._clearchangefunctions",{"_index":588,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparam._setparent(this",{"_index":581,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparam.setvalue(partitioned[index",{"_index":238,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["queryparam.setvalue(value",{"_index":593,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparam.value",{"_index":235,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["queryparamaccessor",{"_index":489,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparamadded",{"_index":577,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparambuilder",{"_index":401,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamdirective",{"_index":479,"title":{"directives/QueryParamDirective.html":{}},"body":{"directives/QueryParamDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["queryparamgroup",{"_index":73,"title":{"classes/QueryParamGroup.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamgroup#add",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["queryparamgroup#valuechanges",{"_index":589,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparamgroup(queryparams",{"_index":474,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirective",{"_index":597,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["queryparamgroupservice",{"_index":492,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparammap",{"_index":690,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["queryparammodule",{"_index":626,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"modules.html":{}}}],["queryparamname",{"_index":544,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamnamedirective",{"_index":602,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparamopts",{"_index":50,"title":{"interfaces/QueryParamOpts.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamopts#emptyon",{"_index":363,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["queryparamoptsbase",{"_index":40,"title":{"interfaces/QueryParamOptsBase.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["queryparamoptsinput",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["queryparams",{"_index":214,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["queryparams.length",{"_index":221,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["queryparam}s",{"_index":466,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queue",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["quick",{"_index":1294,"title":{},"body":{"index.html":{}}}],["rangecontrolvalueaccessor",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirective",{"_index":642,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["raw",{"_index":381,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["read",{"_index":685,"title":{},"body":{"interfaces/RouterOptions.html":{},"index.html":{}}}],["readme",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["received",{"_index":144,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["recommended",{"_index":409,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["record",{"_index":555,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["recursion",{"_index":385,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["reduce",{"_index":220,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["reducer",{"_index":98,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["refer",{"_index":659,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["reference",{"_index":545,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["registeronchange(fn",{"_index":315,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":318,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registry",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["remains",{"_index":562,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["remove",{"_index":530,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["remove(queryparamname",{"_index":564,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["removed",{"_index":362,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["removes",{"_index":566,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["rename",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":677,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["reported",{"_index":569,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["representation",{"_index":183,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["represented",{"_index":338,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":66,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{}}}],["require",{"_index":864,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":188,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["requiring",{"_index":486,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["resemble",{"_index":1292,"title":{},"body":{"index.html":{}}}],["reset",{"_index":375,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["respective",{"_index":560,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["responsive",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["responsiveness",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1317,"title":{},"body":{"license.html":{}}}],["result",{"_index":240,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":242,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":553,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["retrieves",{"_index":548,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["return",{"_index":192,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["returning",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["returns",{"_index":84,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"miscellaneous/functions.html":{}}}],["reword",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["rework",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1320,"title":{},"body":{"license.html":{}}}],["root",{"_index":465,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["router",{"_index":340,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["router#navigate",{"_index":675,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["routeradapter",{"_index":689,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["routeroptions",{"_index":418,"title":{"interfaces/RouterOptions.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":384,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["runtime",{"_index":616,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["rxjs",{"_index":89,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{}}}],["same",{"_index":473,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize=true",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["schematics",{"_index":938,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["screens",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["scrolling",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":49,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["selectcontrolvalueaccessordirective",{"_index":643,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selection",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["selectoptiondirective",{"_index":644,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selector",{"_index":265,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["selectvalueaccessor",{"_index":500,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["selectvalueaccessor(valueaccessors",{"_index":508,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":496,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1326,"title":{},"body":{"license.html":{}}}],["separate",{"_index":447,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["serialize",{"_index":19,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["serialized",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["serializer",{"_index":345,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serializers",{"_index":383,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["serializevalue(value",{"_index":165,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["serializing",{"_index":157,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["serves",{"_index":180,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["service",{"_index":405,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["set",{"_index":337,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["setdisabledstate",{"_index":289,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":319,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["sets",{"_index":558,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["settings",{"_index":1288,"title":{},"body":{"index.html":{}}}],["setvalue",{"_index":35,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(undefinedtonull(value",{"_index":595,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["setvalue(value",{"_index":77,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["shall",{"_index":1335,"title":{},"body":{"license.html":{}}}],["shebang",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1253,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":371,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":408,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["simplechanges",{"_index":497,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["simply",{"_index":673,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["single",{"_index":178,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"miscellaneous/typealiases.html":{}}}],["skeleton",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1313,"title":{},"body":{"license.html":{}}}],["sort",{"_index":379,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["spec",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["spec\\.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":549,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["split",{"_index":387,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query",{"_index":1273,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../router",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.ts",{"_index":1266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1368,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/directives/control",{"_index":246,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/directives/query",{"_index":480,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["src/lib/model/query",{"_index":6,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["src/lib/query",{"_index":403,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"modules/QueryParamModule.html":{},"miscellaneous/functions.html":{}}}],["src/lib/router",{"_index":669,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.ts",{"_index":1274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/types.ts",{"_index":1369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/test.ts",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1295,"title":{},"body":{"index.html":{}}}],["started",{"_index":672,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["state",{"_index":283,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{}}}],["static",{"_index":629,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringparam",{"_index":413,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(urlparam",{"_index":450,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["styling",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":88,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"license.html":{}}}],["sublicense",{"_index":1324,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1337,"title":{},"body":{"license.html":{}}}],["success",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":205,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["super",{"_index":135,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["super(urlparam",{"_index":190,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["supplied",{"_index":622,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":745,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["supported",{"_index":617,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["svg",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":527,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{}}}],["synchronize",{"_index":83,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{},"index.html":{}}}],["syntax",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["synthetic",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":58,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["table",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":335,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["takes",{"_index":361,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["targets",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navigate",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":353,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["this._queryparamadded$.asobservable",{"_index":578,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._queryparamadded$.next(queryparamname",{"_index":585,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._updatevalue(opts",{"_index":594,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._valuechanges.asobservable",{"_index":118,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this._valuechanges.next(this.value",{"_index":173,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions",{"_index":122,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":170,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions.push(fn",{"_index":120,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.combinewith",{"_index":164,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.comparewith",{"_index":163,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.controlvaluechange.emit(value",{"_index":314,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.debouncetime",{"_index":161,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.deserialize",{"_index":158,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.deserialize(value",{"_index":194,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.disabledchange.emit(isdisabled",{"_index":320,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.emptyon",{"_index":162,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.fnchange",{"_index":316,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fnchange(value",{"_index":311,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fntouched",{"_index":312,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.get(queryparamname",{"_index":582,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this.group.add(this.name",{"_index":517,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.group.get(this.name",{"_index":513,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.group.remove(this.name",{"_index":515,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.groupservice",{"_index":520,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.deregisterqueryparamdirective(namechange.previousvalue",{"_index":667,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.deregisterqueryparamdirective(this.name",{"_index":514,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.registerqueryparamdirective(this",{"_index":518,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.setqueryparamgroup(queryparamgroup",{"_index":624,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.groupservice.setqueryparamgroup(this.group",{"_index":509,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.parent",{"_index":128,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.parent._updatevalue",{"_index":176,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.partition",{"_index":232,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.partition(value",{"_index":236,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.queryparams",{"_index":231,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.queryparams.foreach((queryparam",{"_index":237,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.reduce",{"_index":233,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.reduce(this.queryparams.map(queryparam",{"_index":234,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.routeroptions",{"_index":579,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this.serialize",{"_index":154,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.serialize(value",{"_index":193,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.urlparam",{"_index":153,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.value",{"_index":167,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.valueaccessor",{"_index":507,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["through",{"_index":257,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["throw",{"_index":129,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["tick",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":342,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["toc",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":469,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["together",{"_index":524,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["token",{"_index":697,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1358,"title":{},"body":{"license.html":{}}}],["touched",{"_index":299,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["track",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["tracking",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["traditional",{"_index":1372,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["travis",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":543,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["trigger",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":197,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["tsconfig",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":445,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["typealiases",{"_index":1366,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":196,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["types",{"_index":99,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["typing",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["typo",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["unaware",{"_index":16,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["unchanged",{"_index":563,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["undefinedtonull",{"_index":575,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["under",{"_index":539,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["unique",{"_index":468,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["unit",{"_index":522,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["unknown",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["unnecessary",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["unrelated",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":116,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["up",{"_index":82,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["update",{"_index":281,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["updated",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":80,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["url",{"_index":65,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlparam",{"_index":32,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["use",{"_index":623,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":654,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["used",{"_index":64,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["useexisting",{"_index":263,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["useful",{"_index":352,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["user",{"_index":300,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["usevalue",{"_index":655,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["using",{"_index":423,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["util",{"_index":95,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["utilities",{"_index":1131,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["validate",{"_index":472,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":199,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["value.map(this.deserialize.bind(this",{"_index":201,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["valueaccessor",{"_index":503,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["valueaccessors",{"_index":506,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["valuechanges",{"_index":117,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["values",{"_index":20,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/PartitionedQueryParam.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["variables",{"_index":1376,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versa",{"_index":360,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["version",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["vice",{"_index":359,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["view",{"_index":275,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"index.html":{}}}],["void",{"_index":85,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{}}}],["wait",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":443,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["warranties",{"_index":1344,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1339,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":410,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["website",{"_index":688,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["whenever",{"_index":111,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["whether",{"_index":334,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"license.html":{}}}],["widget",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["wired",{"_index":81,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["withconfig",{"_index":630,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["withconfig(config",{"_index":631,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["without",{"_index":485,"title":{},"body":{"directives/QueryParamDirective.html":{},"license.html":{}}}],["wording",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":894,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["wrap",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":94,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["wraptrycatch(deserialize",{"_index":159,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["wraptrycatch(serialize",{"_index":155,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/PartitionedQueryParam.html":{},"classes/QueryParam.html":{}}}],["write",{"_index":294,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["writevalue",{"_index":278,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["writevalue(value",{"_index":313,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["written",{"_index":274,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/PartitionedQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["x",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["xxxparam",{"_index":424,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["yarn",{"_index":1209,"title":{},"body":{"changelog.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractQueryParam.html":{"url":"classes/AbstractQueryParam.html","title":"class - AbstractQueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base for QueryParam and MultiQueryParam.\nThis base class holds most of the parameter's options, but is unaware of\nhow to actually (de-)serialize any values.\n\n            \n\n            \n                Extends\n            \n            \n                    AbstractQueryParamBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: QueryParamOptsBase)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        QueryParamOptsBase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:85\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:82\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:76\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:73\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:79\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:70\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:67\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:58\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param.ts:132\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer, Partitioner, Reducer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, PartitionedQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/** @internal */\nabstract class AbstractQueryParamBase {\n\n    public abstract value: T;\n\n    protected parent: QueryParamGroup;\n    protected _valueChanges = new Subject();\n    protected changeFunctions: OnChangeFunction[] = [];\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    public abstract setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    }): void;\n\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam extends AbstractQueryParamBase {\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        super();\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n\n/**\n * Describes a partitioned query parameter.\n *\n * This encapsulates a list of query parameters such that a single form control\n * can be bound against multiple URL parameters. To achieve this, functions must\n * be defined which can convert the models between the parameters.\n */\nexport class PartitionedQueryParam extends AbstractQueryParamBase {\n\n    /** @internal */\n    public readonly queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] };\n\n    /** @internal */\n    public readonly partition: Partitioner;\n\n    /** @internal */\n    public readonly reduce: Reducer;\n\n    constructor(\n        queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] },\n        opts: PartitionedQueryParamOpts,\n    ) {\n        super();\n\n        if (queryParams.length === 0) {\n            throw new Error(`Partitioned parameters must contain at least one parameter.`);\n        }\n\n        if (!isFunction(opts.partition)) {\n            throw new Error(`partition must be a function, but received ${opts.partition}`);\n        }\n\n        if (!isFunction(opts.reduce)) {\n            throw new Error(`reduce must be a function, but received ${opts.reduce}`);\n        }\n\n        this.queryParams = queryParams;\n        this.partition = opts.partition;\n        this.reduce = opts.reduce;\n    }\n\n    public get value(): T {\n        return this.reduce(this.queryParams.map(queryParam => queryParam.value) as G);\n    }\n\n    public setValue(value: T, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        const partitioned = this.partition(value);\n        this.queryParams.forEach((queryParam, index) => queryParam.setValue(partitioned[index] as any, {\n            emitEvent: opts.emitEvent,\n            onlySelf: true,\n            emitModelToViewChange: false,\n        }));\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                Provides an ad-hoc ControlValueAccessor to a component.\nThis directive provides a ControlValueAccessor for the host on which it is applied\nby proxying the required interface through events and an API.\n \n \n            \n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                notifyTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlValueChange\n                            \n                            \n                                disabledChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        controlValueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/control-value-accessor.directive.ts:38\n                            \n                        \n                \n                    \n                        Fired when a value should be written (model -> view).\nFrom the ControlValueAccessor perspective, this is the equivalent of\nwriteValue. You should bind to this event and update your component's\nstate with the given value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/control-value-accessor.directive.ts:49\n                            \n                        \n                \n                    \n                        Fired when the control's disabled change should change.\nFrom the ControlValueAccessor perspective, this is the equivalent of\nsetDisabledState.\nThis is currently not used by ngqp.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifyChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyChange(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/control-value-accessor.directive.ts:60\n                \n            \n\n\n            \n                \n                    Write a new value to the model (view -> model)\nWhen your component's value changes, call this method to inform\nthe model about the change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifyTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/control-value-accessor.directive.ts:69\n                \n            \n\n\n            \n                \n                    Inform that the component has been touched by the user.\nThis is currently not used by ngqp.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Provides an ad-hoc ControlValueAccessor to a component.\n *\n * This directive provides a ControlValueAccessor for the host on which it is applied\n * by proxying the required interface through events and an API.\n *\n *\n *     \n *     \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /**\n     * Fired when a value should be written (model -> view).\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * writeValue. You should bind to this event and update your component's\n     * state with the given value.\n     */\n    @Output('controlValueChange')\n    public controlValueChange = new EventEmitter();\n\n    /**\n     * Fired when the control's disabled change should change.\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * setDisabledState.\n     *\n     * This is currently not used by ngqp.\n     */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /**\n     * Write a new value to the model (view -> model)\n     *\n     * When your component's value changes, call this method to inform\n     * the model about the change.\n     */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    /**\n     * Inform that the component has been touched by the user.\n     *\n     * This is currently not used by ngqp.\n     */\n    public notifyTouched(): void {\n        this.fnTouched();\n    }\n\n    /** @internal */\n    public writeValue(value: T) {\n        this.controlValueChange.emit(value);\n    }\n\n    /** @internal */\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    /** @internal */\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    /** @internal */\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiQueryParam.html":{"url":"classes/MultiQueryParam.html","title":"class - MultiQueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiQueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Like QueryParam, but for array-typed parameters\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractQueryParam\n            \n\n            \n                Implements\n            \n            \n                        Required\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: MultiQueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:199\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    MultiQueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:199\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:85\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:82\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:76\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:73\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:79\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:70\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:67\n\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:58\n\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractQueryParam\n\n                \n            \n            \n                \n                        Defined in         AbstractQueryParam:132\n\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer, Partitioner, Reducer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, PartitionedQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/** @internal */\nabstract class AbstractQueryParamBase {\n\n    public abstract value: T;\n\n    protected parent: QueryParamGroup;\n    protected _valueChanges = new Subject();\n    protected changeFunctions: OnChangeFunction[] = [];\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    public abstract setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    }): void;\n\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam extends AbstractQueryParamBase {\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        super();\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n\n/**\n * Describes a partitioned query parameter.\n *\n * This encapsulates a list of query parameters such that a single form control\n * can be bound against multiple URL parameters. To achieve this, functions must\n * be defined which can convert the models between the parameters.\n */\nexport class PartitionedQueryParam extends AbstractQueryParamBase {\n\n    /** @internal */\n    public readonly queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] };\n\n    /** @internal */\n    public readonly partition: Partitioner;\n\n    /** @internal */\n    public readonly reduce: Reducer;\n\n    constructor(\n        queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] },\n        opts: PartitionedQueryParamOpts,\n    ) {\n        super();\n\n        if (queryParams.length === 0) {\n            throw new Error(`Partitioned parameters must contain at least one parameter.`);\n        }\n\n        if (!isFunction(opts.partition)) {\n            throw new Error(`partition must be a function, but received ${opts.partition}`);\n        }\n\n        if (!isFunction(opts.reduce)) {\n            throw new Error(`reduce must be a function, but received ${opts.reduce}`);\n        }\n\n        this.queryParams = queryParams;\n        this.partition = opts.partition;\n        this.reduce = opts.reduce;\n    }\n\n    public get value(): T {\n        return this.reduce(this.queryParams.map(queryParam => queryParam.value) as G);\n    }\n\n    public setValue(value: T, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        const partitioned = this.partition(value);\n        this.queryParams.forEach((queryParam, index) => queryParam.setValue(partitioned[index] as any, {\n            emitEvent: opts.emitEvent,\n            onlySelf: true,\n            emitModelToViewChange: false,\n        }));\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiQueryParamOpts.html":{"url":"interfaces/MultiQueryParamOpts.html","title":"interface - MultiQueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiQueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                See QueryParamOpts. \n\n            \n\n            \n                Extends\n            \n            \n                        QueryParamOptsBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        multi\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Whether this parameter can take on multiple values at once.\nIf set to true, this parameter is array-typed. How this is represented\non the URL is defined by the Angular Router, which defines the parameter\nmultiple times, e.g. https://www.app.io?param=A&param=B&param=C.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, Reducer, Partitioner, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n\n/**\n * Options when creating a partitioned query parameter.\n */\nexport interface PartitionedQueryParamOpts {\n    /**\n     * Partitioner function to split a value into its parts.\n     *\n     * The individual parts are used as the value passed to the {@link QueryParam}\n     * instances into which the parameter is partitioned.\n     */\n    partition: Partitioner;\n\n    /**\n     * Reducer function to combine parts back to a value.\n     *\n     */\n    reduce: Reducer;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartitionedQueryParam.html":{"url":"classes/PartitionedQueryParam.html","title":"class - PartitionedQueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartitionedQueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Describes a partitioned query parameter.\nThis encapsulates a list of query parameters such that a single form control\ncan be bound against multiple URL parameters. To achieve this, functions must\nbe defined which can convert the models between the parameters.\n\n            \n\n            \n                Extends\n            \n            \n                    AbstractQueryParamBase\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams, opts: PartitionedQueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:241\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    PartitionedQueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model/query-param.ts:266\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer, Partitioner, Reducer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, PartitionedQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/** @internal */\nabstract class AbstractQueryParamBase {\n\n    public abstract value: T;\n\n    protected parent: QueryParamGroup;\n    protected _valueChanges = new Subject();\n    protected changeFunctions: OnChangeFunction[] = [];\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    public abstract setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    }): void;\n\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam extends AbstractQueryParamBase {\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        super();\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n\n/**\n * Describes a partitioned query parameter.\n *\n * This encapsulates a list of query parameters such that a single form control\n * can be bound against multiple URL parameters. To achieve this, functions must\n * be defined which can convert the models between the parameters.\n */\nexport class PartitionedQueryParam extends AbstractQueryParamBase {\n\n    /** @internal */\n    public readonly queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] };\n\n    /** @internal */\n    public readonly partition: Partitioner;\n\n    /** @internal */\n    public readonly reduce: Reducer;\n\n    constructor(\n        queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] },\n        opts: PartitionedQueryParamOpts,\n    ) {\n        super();\n\n        if (queryParams.length === 0) {\n            throw new Error(`Partitioned parameters must contain at least one parameter.`);\n        }\n\n        if (!isFunction(opts.partition)) {\n            throw new Error(`partition must be a function, but received ${opts.partition}`);\n        }\n\n        if (!isFunction(opts.reduce)) {\n            throw new Error(`reduce must be a function, but received ${opts.reduce}`);\n        }\n\n        this.queryParams = queryParams;\n        this.partition = opts.partition;\n        this.reduce = opts.reduce;\n    }\n\n    public get value(): T {\n        return this.reduce(this.queryParams.map(queryParam => queryParam.value) as G);\n    }\n\n    public setValue(value: T, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        const partitioned = this.partition(value);\n        this.queryParams.forEach((queryParam, index) => queryParam.setValue(partitioned[index] as any, {\n            emitEvent: opts.emitEvent,\n            onlySelf: true,\n            emitModelToViewChange: false,\n        }));\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartitionedQueryParamOpts.html":{"url":"interfaces/PartitionedQueryParamOpts.html","title":"interface - PartitionedQueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartitionedQueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                Options when creating a partitioned query parameter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        partition\n                                \n                                \n                                        reduce\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        partition\n                                    \n                                \n                                \n                                    \n                                        partition:         Partitioner\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partitioner\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partitioner function to split a value into its parts.\nThe individual parts are used as the value passed to the QueryParam\ninstances into which the parameter is partitioned.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reduce\n                                    \n                                \n                                \n                                    \n                                        reduce:         Reducer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reducer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reducer function to combine parts back to a value.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, Reducer, Partitioner, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n\n/**\n * Options when creating a partitioned query parameter.\n */\nexport interface PartitionedQueryParamOpts {\n    /**\n     * Partitioner function to split a value into its parts.\n     *\n     * The individual parts are used as the value passed to the {@link QueryParam}\n     * instances into which the parameter is partitioned.\n     */\n    partition: Partitioner;\n\n    /**\n     * Reducer function to combine parts back to a value.\n     *\n     */\n    reduce: Reducer;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParam.html":{"url":"classes/QueryParam.html","title":"class - QueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Describes a single parameter.\nThis is the description of a single parameter and essentially serves\nas the glue between its representation in the URL and its connection\nto a form control.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractQueryParam\n            \n\n            \n                Implements\n            \n            \n                        Required\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: QueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:167\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        QueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:167\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:85\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:82\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:76\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:73\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:79\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:70\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:67\n\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:58\n\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractQueryParam\n\n                \n            \n            \n                \n                        Defined in         AbstractQueryParam:132\n\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer, Partitioner, Reducer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, PartitionedQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/** @internal */\nabstract class AbstractQueryParamBase {\n\n    public abstract value: T;\n\n    protected parent: QueryParamGroup;\n    protected _valueChanges = new Subject();\n    protected changeFunctions: OnChangeFunction[] = [];\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    public abstract setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    }): void;\n\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam extends AbstractQueryParamBase {\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        super();\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n\n/**\n * Describes a partitioned query parameter.\n *\n * This encapsulates a list of query parameters such that a single form control\n * can be bound against multiple URL parameters. To achieve this, functions must\n * be defined which can convert the models between the parameters.\n */\nexport class PartitionedQueryParam extends AbstractQueryParamBase {\n\n    /** @internal */\n    public readonly queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] };\n\n    /** @internal */\n    public readonly partition: Partitioner;\n\n    /** @internal */\n    public readonly reduce: Reducer;\n\n    constructor(\n        queryParams: { [I in keyof G]: G[I] extends G[number] ? (QueryParam | MultiQueryParam) : G[I] },\n        opts: PartitionedQueryParamOpts,\n    ) {\n        super();\n\n        if (queryParams.length === 0) {\n            throw new Error(`Partitioned parameters must contain at least one parameter.`);\n        }\n\n        if (!isFunction(opts.partition)) {\n            throw new Error(`partition must be a function, but received ${opts.partition}`);\n        }\n\n        if (!isFunction(opts.reduce)) {\n            throw new Error(`reduce must be a function, but received ${opts.reduce}`);\n        }\n\n        this.queryParams = queryParams;\n        this.partition = opts.partition;\n        this.reduce = opts.reduce;\n    }\n\n    public get value(): T {\n        return this.reduce(this.queryParams.map(queryParam => queryParam.value) as G);\n    }\n\n    public setValue(value: T, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        const partitioned = this.partition(value);\n        this.queryParams.forEach((queryParam, index) => queryParam.setValue(partitioned[index] as any, {\n            emitEvent: opts.emitEvent,\n            onlySelf: true,\n            emitModelToViewChange: false,\n        }));\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to create parameters and groups.\nThis service provides a simple API to create QueryParamGroup and QueryParam\ninstances and is the recommended way to set them up.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numberParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                partition\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            booleanParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    booleanParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:145\n                \n            \n\n\n            \n                \n                    Create a new parameter of type boolean.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            group\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    group(queryParams: literal type, extras: RouterOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:41\n                \n            \n\n\n            \n                \n                    Creates a new QueryParamGroup.\nThis is the primary method to create a new group of parameters. Pass a list of\nQueryParam instances by using the xxxParam methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of {\n\n                                    \n                                \n                                \n                                    extras\n                                    \n                                                RouterOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional parameters for this group, overriding global configuration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryParamGroup\n\n                    \n                    \n                        The new {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            numberParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    numberParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:118\n                \n            \n\n\n            \n                \n                    Create a new parameter of type number.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    param(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:172\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Create a new parameter for a complex type.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            partition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    partition(queryParams: (QueryParam | MultiQueryParam)[], opts: PartitionedQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:75\n                \n            \n\n\n            \n                \n                    Partition a query parameter into multiple others.\nPartitioning is useful if you need to bind a single form control to multiple query parameters.\nFor example, consider a {@code } which represents both a field to sort by and the\ndirection to sort in. If you want to encode these two information on separate URL parameters,\nyou can define a single query parameter that is partitioned into two others.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                            (QueryParam | MultiQueryParam)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The query parameters making up this partition.\n\n                                    \n                                \n                                \n                                    opts\n                                    \n                                            PartitionedQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        See {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PartitionedQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stringParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stringParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:91\n                \n            \n\n\n            \n                \n                    Create a new parameter of type string.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\nimport { MultiQueryParam, QueryParam, PartitionedQueryParam } from './model/query-param';\nimport { QueryParamGroup } from './model/query-param-group';\nimport { MultiQueryParamOpts, PartitionedQueryParamOpts, QueryParamOpts } from './model/query-param-opts';\n\nfunction isMultiOpts(opts: QueryParamOpts | MultiQueryParamOpts): opts is MultiQueryParamOpts {\n    return opts.multi === true;\n}\n\n/**\n * Service to create parameters and groups.\n *\n * This service provides a simple API to create {@link QueryParamGroup} and {@link QueryParam}\n * instances and is the recommended way to set them up.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * Creates a new {@link QueryParamGroup}.\n     *\n     * This is the primary method to create a new group of parameters. Pass a list of\n     * {@link QueryParam} instances by using the `xxxParam` methods.\n     *\n     * @param queryParams List of {@link QueryParam}s keyed by a unique name.\n     * @param extras Additional parameters for this group, overriding global configuration.\n     * @returns The new {@link QueryParamGroup}.\n     */\n    public group(\n        queryParams: { [ name: string ]: QueryParam | MultiQueryParam | PartitionedQueryParam },\n        extras: RouterOptions = {}\n    ): QueryParamGroup {\n        // TODO Maybe we should first validate that no two queryParams defined the same \"param\".\n        return new QueryParamGroup(queryParams, extras);\n    }\n\n    /** @ignore */\n    public partition(\n        queryParams: [QueryParam | MultiQueryParam],\n        opts: PartitionedQueryParamOpts\n    ): PartitionedQueryParam;\n    /** @ignore */\n    public partition(\n        queryParams: [QueryParam | MultiQueryParam, QueryParam | MultiQueryParam],\n        opts: PartitionedQueryParamOpts\n    ): PartitionedQueryParam;\n    /** @ignore */\n    public partition(\n        queryParams: [QueryParam | MultiQueryParam, QueryParam | MultiQueryParam, QueryParam | MultiQueryParam],\n        opts: PartitionedQueryParamOpts\n    ): PartitionedQueryParam;\n    /**\n     * Partition a query parameter into multiple others.\n     *\n     * Partitioning is useful if you need to bind a single form control to multiple query parameters.\n     * For example, consider a {@code } which represents both a field to sort by and the\n     * direction to sort in. If you want to encode these two information on separate URL parameters,\n     * you can define a single query parameter that is partitioned into two others.\n     *\n     * @param queryParams The query parameters making up this partition.\n     * @param opts See {@link PartitionedQueryParamOpts}.\n     */\n    public partition(\n        queryParams: (QueryParam | MultiQueryParam)[],\n        opts: PartitionedQueryParamOpts\n    ): PartitionedQueryParam {\n        return new PartitionedQueryParam(queryParams, opts);\n    }\n\n    /** @ignore */\n    public stringParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public stringParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `string`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public stringParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public numberParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public numberParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `number`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public numberParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public booleanParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public booleanParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `boolean`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public booleanParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public param(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public param(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter for a complex type.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public param(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamDirective.html":{"url":"directives/QueryParamDirective.html","title":"directive - QueryParamDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParam to a component directly.\nThis directive accepts a QueryParam without requiring an outer QueryParamGroup.\nIt binds this parameter to the host component, which is required to have a [ControlValueAccessor]\nhttps://angular.io/api/forms/ControlValueAccessor.\n\n            \n\n            \n                Implements\n            \n            \n                            QueryParamAccessor\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                QueryParamGroupService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [queryParam]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParam\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParam\n                    \n                \n                \n                    \n                        Type :         QueryParam\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param.directive.ts:26\n                            \n                        \n                \n                    \n                        The QueryParam to bind to the host component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnChanges, OnDestroy, Optional, Self, SimpleChanges } from '@angular/core';\nimport { QueryParamGroupService } from './query-param-group.service';\nimport { QueryParamAccessor } from './query-param-accessor.interface';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { selectValueAccessor } from '../accessors/util';\nimport { QueryParam } from '../model/query-param';\nimport { QueryParamGroup } from '../model/query-param-group';\n\n/**\n * Binds a {@link QueryParam} to a component directly.\n *\n * This directive accepts a {@link QueryParam} without requiring an outer {@link QueryParamGroup}.\n * It binds this parameter to the host component, which is required to have a [ControlValueAccessor]\n * {@link https://angular.io/api/forms/ControlValueAccessor}.\n */\n@Directive({\n    selector: '[queryParam]',\n    providers: [QueryParamGroupService],\n})\nexport class QueryParamDirective implements QueryParamAccessor, OnChanges, OnDestroy  {\n\n    /**\n     * The {@link QueryParam} to bind to the host component.\n     */\n    @Input('queryParam')\n    public queryParam: QueryParam;\n\n    /** @internal */\n    public readonly name = 'param';\n\n    /** @internal */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    /** @internal */\n    private group = new QueryParamGroup({});\n\n    /** @internal */\n    constructor(\n        @Optional() private groupService: QueryParamGroupService,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        this.valueAccessor = selectValueAccessor(valueAccessors);\n        this.groupService.setQueryParamGroup(this.group);\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges): void {\n        const paramChange = changes['queryParam'];\n\n        if (paramChange) {\n            if (this.group.get(this.name)) {\n                this.groupService.deregisterQueryParamDirective(this.name);\n                this.group.remove(this.name);\n            }\n\n            if (paramChange.currentValue) {\n                this.group.add(this.name, paramChange.currentValue);\n                this.groupService.registerQueryParamDirective(this);\n            }\n        }\n    }\n\n    /** @ignore */\n    public ngOnDestroy(): void {\n        if (this.groupService) {\n            this.groupService.deregisterQueryParamDirective(this.name);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-group.ts\n        \n\n            \n                Description\n            \n            \n                Groups multiple QueryParam instances to a single unit.\nThis \"bundles\" multiple parameters together such that changes can be emitted as a\ncomplete unit. Collecting parameters into a group is required for the synchronization\nto and from the URL.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams: literal type, extras: RouterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param-group.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                        RouterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param-group.ts:28\n                            \n                        \n\n                \n                    \n                        Emits the values of all parameters in this group whenever at least one changes.\nThis observable emits an object keyed by the {@QueryParam} names where each key\ncarries the current value of the represented parameter. It emits whenever at least\none parameter's value is changed.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(queryParamName: string, queryParam: QueryParam | MultiQueryParam | PartitionedQueryParam)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:92\n                \n            \n\n\n            \n                \n                    Adds a new QueryParam to this group.\nThis adds the parameter under the given name to this group. The current\nURL will be evaluated to synchronize its value initially. Afterwards\nit is treated just like any other parameter in this group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the parameter to reference it with.\n\n                                    \n                                \n                                \n                                    queryParam\n                                    \n                                            QueryParam | MultiQueryParam | PartitionedQueryParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new parameter to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(queryParamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:73\n                \n            \n\n\n            \n                \n                    Retrieves a specific parameter from this group by name.\nThis returns an instance of either QueryParam, MultiQueryParam\nor PartitionedQueryParam depending on the configuration, or null\nif no parameter with that name is found in this group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the parameter instance to retrieve.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam | PartitionedQueryParam | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchValue(value: Record, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:142\n                \n            \n\n\n            \n                \n                    Updates the value of this group by merging it in.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value remains unchanged.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        See {\n\n                                    \n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(queryParamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:110\n                \n            \n\n\n            \n                \n                    Removes a QueryParam from this group.\nThis removes the parameter defined by the provided name from this group.\nNo further synchronization with this parameter will occur and it will not\nbe reported in the value of this group anymore.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the parameter to remove.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: Record, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:171\n                \n            \n\n\n            \n                \n                    Updates the value of this group by overwriting it.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value is set to undefined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        See {\n\n                                    \n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model/query-param-group.ts:126\n                                \n                            \n                    \n                        \n                                The current value of this group.\nSee QueryParamGroup for a description of the format of\nthe value.\n\n\n                                \n                                    Returns :     Record\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { isMissing, undefinedToNull } from '../util';\nimport { OnChangeFunction } from '../types';\nimport { MultiQueryParam, QueryParam, PartitionedQueryParam } from './query-param';\nimport { RouterOptions } from '../router-adapter/router-adapter.interface';\n\n/**\n * Groups multiple {@link QueryParam} instances to a single unit.\n *\n * This \"bundles\" multiple parameters together such that changes can be emitted as a\n * complete unit. Collecting parameters into a group is required for the synchronization\n * to and from the URL.\n */\nexport class QueryParamGroup {\n\n    /** @internal */\n    private readonly _valueChanges = new Subject>();\n\n    /**\n     * Emits the values of all parameters in this group whenever at least one changes.\n     *\n     * This observable emits an object keyed by the {@QueryParam} names where each key\n     * carries the current value of the represented parameter. It emits whenever at least\n     * one parameter's value is changed.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable> = this._valueChanges.asObservable();\n\n    /** @internal */\n    private readonly _queryParamAdded$ = new Subject();\n\n    /** @internal */\n    public readonly queryParamAdded$: Observable = this._queryParamAdded$.asObservable();\n\n    /** @internal */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam | MultiQueryParam | PartitionedQueryParam };\n\n    /** @internal */\n    public readonly routerOptions: RouterOptions;\n\n    private changeFunctions: OnChangeFunction>[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam | MultiQueryParam | PartitionedQueryParam },\n        extras: RouterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction>): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** @internal */\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    /**\n     * Retrieves a specific parameter from this group by name.\n     *\n     * This returns an instance of either {@link QueryParam}, {@link MultiQueryParam}\n     * or {@link PartitionedQueryParam} depending on the configuration, or `null`\n     * if no parameter with that name is found in this group.\n     *\n     * @param queryParamName The name of the parameter instance to retrieve.\n     */\n    public get(queryParamName: string): QueryParam | MultiQueryParam | PartitionedQueryParam | null {\n        const param = this.queryParams[ queryParamName ];\n        if (!param) {\n            return null;\n        }\n\n        return param;\n    }\n\n    /**\n     * Adds a new {@link QueryParam} to this group.\n     *\n     * This adds the parameter under the given name to this group. The current\n     * URL will be evaluated to synchronize its value initially. Afterwards\n     * it is treated just like any other parameter in this group.\n     *\n     * @param queryParamName Name of the parameter to reference it with.\n     * @param queryParam The new parameter to add.\n     */\n    public add(queryParamName: string, queryParam: QueryParam | MultiQueryParam | PartitionedQueryParam): void {\n        if (this.get(queryParamName)) {\n            throw new Error(`A parameter with name ${queryParamName} already exists.`);\n        }\n\n        this.queryParams[ queryParamName ] = queryParam;\n        this._queryParamAdded$.next(queryParamName);\n    }\n\n    /**\n     * Removes a {@link QueryParam} from this group.\n     *\n     * This removes the parameter defined by the provided name from this group.\n     * No further synchronization with this parameter will occur and it will not\n     * be reported in the value of this group anymore.\n     *\n     * @param queryParamName The name of the parameter to remove.\n     */\n    public remove(queryParamName: string): void {\n        const queryParam = this.get(queryParamName);\n        if (!queryParam) {\n            throw new Error(`No parameter with name ${queryParamName} found.`);\n        }\n\n        delete this.queryParams[ queryParamName ];\n        queryParam._clearChangeFunctions();\n    }\n\n    /**\n     * The current value of this group.\n     *\n     * See {@link QueryParamGroup#valueChanges} for a description of the format of\n     * the value.\n     */\n    public get value(): Record {\n        const value: Record = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * Updates the value of this group by merging it in.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value remains unchanged.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public patchValue(value: Record, opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], {\n                emitEvent: opts.emitEvent,\n                onlySelf: true,\n                emitModelToViewChange: false,\n            });\n        });\n\n        this._updateValue(opts);\n    }\n\n    /**\n     * Updates the value of this group by overwriting it.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value is set to `undefined`.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public setValue(value: Record, opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(undefinedToNull(value[ queryParamName ]), {\n                emitEvent: opts.emitEvent,\n                onlySelf: true,\n                emitModelToViewChange: false,\n            });\n        });\n\n        this._updateValue(opts);\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParamGroup to a DOM element.\nThis directive accepts an instance of QueryParamGroup. Any child using\nQueryParamNameDirective will then be matched against this group, and the\nsynchronization process can take place.\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                QueryParamGroupService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                \n                \n                    \n                        Type :         QueryParamGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param-group.directive.ts:23\n                            \n                        \n                \n                    \n                        The QueryParamGroup to bind.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroup } from '../model/query-param-group';\nimport { QueryParamGroupService } from './query-param-group.service';\n\n/**\n * Binds a {@link QueryParamGroup} to a DOM element.\n *\n * This directive accepts an instance of {@link QueryParamGroup}. Any child using\n * {@link QueryParamNameDirective} will then be matched against this group, and the\n * synchronization process can take place.\n */\n@Directive({\n    selector: '[queryParamGroup]',\n    providers: [QueryParamGroupService],\n})\nexport class QueryParamGroupDirective implements OnChanges {\n\n    /**\n     * The {@link QueryParamGroup} to bind.\n     */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    /** @internal */\n    constructor(private groupService: QueryParamGroupService) {\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges) {\n        const groupChange = changes['queryParamGroup'];\n        if (groupChange) {\n            if (!groupChange.firstChange) {\n                throw new Error(`Binding a different QueryParamGroup during runtime is currently not supported.`);\n            }\n\n            const queryParamGroup = groupChange.currentValue;\n            if (!queryParamGroup) {\n                throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n            }\n\n            this.groupService.setQueryParamGroup(queryParamGroup);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withConfig(config: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param.module.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport {\n    ControlValueAccessorDirective,\n    QueryParamDirective,\n    QueryParamNameDirective,\n    QueryParamGroupDirective\n} from './directives/directives';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterOptions\n} from './router-adapter/router-adapter';\n\n/** @ignore */\nconst DIRECTIVES: Type[] = [\n    QueryParamDirective,\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static withConfig(config: { routerOptions?: RouterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: {\n                        ...DefaultRouterOptions,\n                        ...config.routerOptions\n                    },\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParam to a DOM element.\nThis directive accepts the name of a QueryParam inside its parent QueryParamGroup.\nIt binds this parameter to the host element, which is required to have a [ControlValueAccessor]\nhttps://angular.io/api/forms/ControlValueAccessor.\n\n            \n\n            \n                Implements\n            \n            \n                            QueryParamAccessor\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param-name.directive.ts:24\n                            \n                        \n                \n                    \n                        The name of the QueryParam inside its parent QueryParamGroup.\nNote that this does not refer to the parameter name.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnChanges, OnDestroy, Optional, Self, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupService } from './query-param-group.service';\nimport { QueryParamAccessor } from './query-param-accessor.interface';\nimport { selectValueAccessor } from '../accessors/util';\n\n/**\n * Binds a {@link QueryParam} to a DOM element.\n *\n * This directive accepts the name of a {@link QueryParam} inside its parent {@link QueryParamGroup}.\n * It binds this parameter to the host element, which is required to have a [ControlValueAccessor]\n * {@link https://angular.io/api/forms/ControlValueAccessor}.\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements QueryParamAccessor, OnChanges, OnDestroy {\n\n    /**\n     * The name of the {@link QueryParam} inside its parent {@link QueryParamGroup}.\n     * Note that this does not refer to the [parameter name]{@link QueryParam#urlParam}.\n     */\n    @Input('queryParamName')\n    public name: string;\n\n    /** @internal */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    /** @internal */\n    constructor(\n        @Optional() private groupService: QueryParamGroupService,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.groupService) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = selectValueAccessor(valueAccessors);\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges) {\n        const nameChange = changes['name'];\n        if (nameChange) {\n            if (!nameChange.firstChange) {\n                this.groupService.deregisterQueryParamDirective(nameChange.previousValue);\n            }\n\n            if (nameChange.currentValue) {\n                this.groupService.registerQueryParamDirective(this);\n            }\n        }\n    }\n\n    /** @ignore */\n    public ngOnDestroy() {\n        if (this.groupService) {\n            this.groupService.deregisterQueryParamDirective(this.name);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOpts.html":{"url":"interfaces/QueryParamOpts.html","title":"interface - QueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                See QueryParamOpts. \n\n            \n\n            \n                Extends\n            \n            \n                        QueryParamOptsBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multi\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See MultiQueryParamOpts. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, Reducer, Partitioner, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n\n/**\n * Options when creating a partitioned query parameter.\n */\nexport interface PartitionedQueryParamOpts {\n    /**\n     * Partitioner function to split a value into its parts.\n     *\n     * The individual parts are used as the value passed to the {@link QueryParam}\n     * instances into which the parameter is partitioned.\n     */\n    partition: Partitioner;\n\n    /**\n     * Reducer function to combine parts back to a value.\n     *\n     */\n    reduce: Reducer;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOptsBase.html":{"url":"interfaces/QueryParamOptsBase.html","title":"interface - QueryParamOptsBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOptsBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                List of options which can be passed to QueryParam.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                            Optional\n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                            Optional\n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:         ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Execute a side effect on other query parameters.\nIf the value of this parameter changes, this function is invoked. It can return an\nadditional set of query parameters to change, e.g., to reset the current page in a\npagination when the direction in which to sort has been changed.\nNOTE: This function must return the raw query parameter names and values. No\n       (de-)serializers are run and no recursion is applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:         Comparator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comparator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The comparator to be used with QueryParamOpts.\nThis function will be used to determine whether the current value equals the defined\ndefault value. By default, a loose equals comparison is made (i.e., \"==\").\nSee Comparator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines, in milliseconds, how much changes to the value should be debounced.\nWhen set, a change of the parameter value coming from either the form control\nor a programmatic change will be debounced by the given value (in milliseconds).\nThis is useful for, e.g., text inputs.\nIf the value changes through a change of the URL, this debounce will not apply.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:         ParamDeserializer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamDeserializer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The deserializer used for this parameter.\nSee ParamDeserializer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default value of the parameter.\nIf set, the parameter will be considered to default to this value. This means\nthat if the parameter is not defined on the URL, this value will be written\nto the form control. Vice versa, if the form control takes on this value,\nthe URL parameter will be removed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:         ParamSerializer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamSerializer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The serializer used for this parameter.\nSee ParamSerializer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, Reducer, Partitioner, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n\n/**\n * Options when creating a partitioned query parameter.\n */\nexport interface PartitionedQueryParamOpts {\n    /**\n     * Partitioner function to split a value into its parts.\n     *\n     * The individual parts are used as the value passed to the {@link QueryParam}\n     * instances into which the parameter is partitioned.\n     */\n    partition: Partitioner;\n\n    /**\n     * Reducer function to combine parts back to a value.\n     *\n     */\n    reduce: Reducer;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Options to be provided when a navigation is started to update the URL.\nThese options are simply forwarded to Router#navigate.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        preserveFragment\n                                \n                                \n                                            Optional\n                                        replaceUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFragment\n                                    \n                                \n                                \n                                    \n                                        preserveFragment:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replaceUrl\n                                    \n                                \n                                \n                                    \n                                        replaceUrl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Navigation, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Abstraction around the Angular Router used by ngqp in order to read from\n * or manipulate the URL.\n *\n * This abstraction only exists so we can provide a different adapter for the\n * examples on the website.\n *\n * @internal\n */\nexport interface RouterAdapter {\n\n    /** @internal */\n    url: string;\n\n    /** @internal */\n    queryParamMap: Observable;\n\n    /** @internal */\n    navigate(queryParams: Params, extras?: RouterOptions & { state?: any }): Promise;\n\n    /** @internal */\n    getCurrentNavigation(): Pick;\n\n}\n\n/**\n * Options to be provided when a navigation is started to update the URL.\n * These options are simply forwarded to Router#navigate.\n */\nexport interface RouterOptions {\n    replaceUrl?: boolean;\n    preserveFragment?: boolean;\n}\n\n/**\n * See {@link RouterOptions}.\n */\nexport const DefaultRouterOptions: RouterOptions = {\n    replaceUrl: true,\n    preserveFragment: true,\n};\n\n/** @internal */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/** Injection token to provide {@link RouterOptions}. */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.10.0 (2019-03-27)\nBug Fixes\n\ncore: Prefer unknown over any where possible (62f357c)\ndeps: bump dependencies (4ae172a)\ndeps: pin rxjs version (50ebf0d)\ndeps: reduce rxjs dependency to what Angular needs (81336f4)\ndocs: Hide directive constructors from API docs (dc628b6), closes #97\nscripts: Sign release commits (0bcff67)\n\nFeatures\n\nAdapt commitlint configuration to our project (c91c440)\ncore: add support for partitioned parameters (ad3f917), closes #90\ncore: run commitlint on Travis (a1b5349)\nother: added commitlint and husky (7022023)\n\n\n0.9.0 (2019-03-08)\nBug Fixes\n\ncore: Adjust name of variable (copy&paste error) (6420b9e)\ncore: Ignore changes in unrelated query parameters (32b080e), closes #81\ncore: Improve typing and support emptyOn for multi:true (0e28c35), closes #92 #27\ncore: Reword documentation (644cc20)\nother: Push only after release is published (ecf709e)\nother: Update commit guidelines (bcfd06e)\ntravis: Only trigger branch builds for master (a579a4a)\n\nFeatures\n\ncore: Added QueryParamDirective for standalone parameters (05b48ca)\ncore: Support changing the bound standalone parameter (f1cdfeb)\n\n\n0.8.0 (2019-02-09)\nBug Fixes\n\ncore: Do not synchronize detached parameters (1add8a8), closes #44\ncore: Fix typo in comment (2d8313b)\ndocs: Added documentation for QueryParamGroup #add / #remove (985a96b), closes #44\ndocs: Exclude test util from API docs (93a5281)\ntests: Added tests for QueryParamGroup#add / #remove (085d120), closes #44\n\nFeatures\n\ncore: Allow changing name for queryParamName directive. (ca6f87d), closes #44\ncore: Dynamically add or remove parameters (5c76c67), closes #44\n\n\n0.7.2 (2019-02-03)\nBug Fixes\n\ncore: Do not detect non-imperative navigations as synthetic (9e7fdb4), closes #73\n\n\n0.7.1 (2019-02-01)\nBug Fixes\n\ncore: Align event propagation with Forms API (0529276)\ncore: Rework event handling of QueryParam(Group) (a5f4d74), closes #67\ncore: Use queryParamName instead of urlParam (58a71a7)\n\n\n0.7.0 (2019-01-15)\nBug Fixes\n\ndocs: Fix duplicate fragment (00a5667)\n\nFeatures\n\ncore: New QueryParam creation syntax (98fe148)\ndocs: Added noscript (d33fa5d)\ndocs: Turn demo app into a PWA (f570513), closes #30\n\n\n0.6.0 (2019-01-13)\nBug Fixes\n\napi-docs: Remove GA ID (a6352fb)\ncore: Added internal documentation (6ade19d)\ncore: Deregister directive on destroy (3ab996d), closes #53\ncore: Handle errors in navigation queue (9dfaa92)\ncore: Improve cleanup behavior more (0633526)\ncore: Improve typings (962bc32)\ncore: Only console.log error in dev mode (ebc0d9d)\ncore: Only require compareWith if emptyOn is provided (d9f96e3)\ncore: Provide default comparator on custom params (96985ca), closes #59\ncore: Remove string shorthand syntax (3f30355), closes #63\ncore: Rename numericParam to numberParam (ee2c473), closes #62\ncore: Rename valueChanges to controLValueChanges (60ba6dd), closes #54\ncore: Support using the same queryParamName multiple times (1b74a5a)\ncore: Use OnChanges instead of OnInit (cc7a558), closes #52\ndemo: Don't debounce in the getting started example (60d8bd8), closes #57\ndocs: Don't track fragment navigation as pageview (73c58cf)\ndocs: Don't track unnecessary event (3d1a793)\ndocs: Global configuration typo (5229ba9)\ndocs: Remove API docs tracking since it doesn't work (448c51f)\ntests: Change test name (19d8180)\ntests: Don't export test components (e4ed111)\ntests: Pin versions due to broken @angular-devkit/schematics release (bbc9a66)\ntests: Remove spec tsconfig file from angular.json (de0d0e0)\n\nFeatures\n\ncore: Allow comparator to return a number (78c8c4e)\ncore: Allow passing preserveFragment (a94ccc6), closes #39\ndocs: Track events for interaction (1dfa9ba), closes #38\n\n\n0.5.1 (2019-01-06)\nBug Fixes\n\ncore: Allow combineWith returning null | undefined (3bfc1b0)\ncore: Do not serialize non-multi params into an array (bf6c355)\ncore: Don't expost \"adapter\" naming in API (e0e875b)\ncore: Export createEmptyOnDeserializer (ca45e43)\ncore: Improve typing definitions (0d509d0)\ncore: Remove typealias (bab1e45)\ncore: Removed QueryParamOptsInput (63f83a5)\ncore: Rename forRoot to withConfig and ensure defaults are set at least (0f0b48d), closes #41\ncore: Use interface instead of type alias (4de02a4), closes #40\ndocs: Exclude schematics from docs (e57e700), closes #45\ndocs: Fix heading level (f27f369)\ndocs: Fix linting error (2ea841b)\ndocs: Prevent line break in API docs link (17f368e)\ndocs: Remove URL entirely if no parmas are set (aba7bd1)\nREADME: Rework README (8c9d268)\n\n\n0.5.0 (2019-01-03)\nBug Fixes\n\ncore: Do not create an empty-on serializer if emptyOn wasn't given (f394fa6)\ncore: Fix list of built-in accessors (2e39369)\ncore: Remove customParam and replace it with param (60377e5)\ncore: Split accessors into one directive per file (a0bde9b)\ncore: Use correct param name in shorthand syntax (f526b61)\ncore: use multi property rather than checking value type (781f009)\ncore: Use proper type in accessor (5d90b63)\ndocs: Fix demo-browser in responsive case (bbaf6e4)\ndocs: Fix first TOC item (0f566ad)\ndocs: Fix fragment misalignment (f02d26d)\ndocs: Fix link to GitHub (2f2675e)\ndocs: Fix margin on fragment headings (07c103e)\ndocs: Fix overflows on small screens (e100621)\ndocs: Fix typo (c6b3a1e)\ndocs: Improve responsiveness of example (c6cd845)\ndocs: Make demo-browser content overflow if necessary (48f2da4)\ndocs: Remove GitHub button for now (aadad1b), closes #36\ndocs: Use PNG instead of SVG (cfa25df)\n\nFeatures\n\ndocs: Added Google Analytics (aea857a), closes #35\n\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.2.0\n        \n            @angular/core : ^7.2.0\n        \n            @angular/forms : ^7.2.0\n        \n            @angular/router : ^7.2.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            isMultiOpts   (src/.../query-param-builder.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createBooleanDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBooleanDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type boolean.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBooleanSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBooleanSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type boolean.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNumberDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNumberDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNumberSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNumberSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStringDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStringDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStringSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStringSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/query-param-builder.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isMultiOpts\n                        \n                        \n                    \n                \n            \n            \n                \nisMultiOpts(opts)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MultiQueryParamOpts\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n    \n        \n    \n\n\nngqp\n\n\n    Declaratively synchronize form controls with the URL\n    \n    Documentation\n\n\nDescription\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nQuick Start\nng add @ngqp/core\nRead the Getting Started page for information on how to use it.\nContributing\nSee CONTRIBUTING.md.\nCode of Conduct\nPlease take a moment to read the Code of Conduct.\n\nMIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../types.ts)\n                        \n                        \n                            ParamCombinator   (src/.../types.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../types.ts)\n                        \n                        \n                            ParamSerializer   (src/.../types.ts)\n                        \n                        \n                            Partitioner   (src/.../types.ts)\n                        \n                        \n                            Reducer   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Comparator\n                \n            \n            \n                \n                    A function which compares two values of the same type to determine\nif they are equal. To support traditional comparator functions, you\ncan also return a number where \"0\" means equality.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamCombinator\n                \n            \n            \n                \n                    Defines a function which describes side effects on other\nURL parameters.\nSee QueryParamOpts.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamDeserializer\n                \n            \n            \n                \n                    A deserializer defines how a URL parameter is converted\ninto the represented form control's value.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamSerializer\n                \n            \n            \n                \n                    A serializer defines how the represented form control's\nvalue is converted into a string to be used in the URL.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Partitioner\n                \n            \n            \n                \n                    A partitioner can split a value into an array of parts.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Reducer\n                \n            \n            \n                \n                    A reducer can combine an array of values into a single value.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DefaultRouterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RouterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n    preserveFragment: true,\n}\n                        \n                    \n\n                \n                    \n                        See RouterOptions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        Injection token to provide RouterOptions. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
