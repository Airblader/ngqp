var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractQueryParam.html",[0,0.533,1,1.77]],["body/classes/AbstractQueryParam.html",[0,0.756,1,2.326,2,0.972,3,0.333,4,0.333,5,0.289,6,2.142,7,1.271,8,0.38,9,2.888,10,2.675,11,1.033,12,1.617,13,1.955,14,1.7,15,0.941,16,1.955,17,1.955,18,1.181,19,1.529,20,0.941,21,0.208,22,0.941,23,1.531,24,2.637,25,1.843,26,1.644,27,1.745,28,1.39,29,1.843,30,2.21,31,0.993,32,1.823,33,1.181,34,1.496,35,0.768,36,2.675,37,1.574,38,2.406,39,1.616,40,1.044,41,1.83,42,0.391,43,0.046,44,1.14,45,0.699,46,0.444,47,1.44,48,1.83,49,1.085,50,1.779,51,1.285,52,1.83,53,0.839,54,1.312,55,1.83,56,1.285,57,1.83,58,1.936,59,1.83,60,1.285,61,1.83,62,1.83,63,1.23,64,1.31,65,1.253,66,1.955,67,0.979,68,1.326,69,1.955,70,1.955,71,1.496,72,1.7,73,1.408,74,0.807,75,1.83,76,1.442,77,2.21,78,1.7,79,1.83,80,1.7,81,1.7,82,0.941,83,1.054,84,1.7,85,1.496,86,1.7,87,1.7,88,1.326,89,1.83,90,1.7,91,1.955,92,1.496,93,1.326,94,0.685,95,1.959,96,0.756,97,1.496,98,0.862,99,1.271,100,1.271,101,1.105,102,1.271,103,1.271,104,0.862,105,2.072,106,0.768,107,0.584,108,0.685,109,0.941,110,1.085,111,0.541,112,1.44,113,1.105,114,1.076,115,1.7,116,1.105,117,0.612,118,1.271,119,1.843,120,1.271,121,0.685,122,1.105,123,1.271,124,1.271,125,1.442,126,2.675,127,1.271,128,1.271,129,1.959,130,1.271,131,1.271,132,1.271,133,1.271,134,1.271,135,2.383,136,1.271,137,1.271,138,1.7,139,1.271,140,1.271,141,1.271,142,1.271,143,1.271,144,3.364,145,2.383,146,1.271,147,1.619,148,2.383,149,2.383,150,1.105,151,1.105,152,1.105,153,1.105,154,1.7,155,1.285,156,1.105,157,1.7,158,1.271,159,1.105,160,1.616,161,1.105,162,1.271,163,1.7,164,1.105,165,1.271,166,1.271,167,1.271,168,1.271,169,1.955,170,1.271,171,1.105,172,1.271,173,1.105,174,1.7,175,1.271,176,1.271,177,1.271,178,1.271,179,1.271,180,1.105,181,0.685,182,0.768,183,1.326,184,1.181,185,1.181,186,1.054,187,1.955,188,1.955,189,1.111,190,1.271,191,1.271,192,0.768,193,0.862,194,0.431,195,1.271,196,1.271,197,1.105,198,1.271,199,0.014,200,0.021,201,0.014]],["title/directives/ControlValueAccessorDirective.html",[202,0.98,203,2.035]],["body/directives/ControlValueAccessorDirective.html",[0,0.505,3,0.505,4,0.505,5,0.438,8,0.375,21,0.317,23,1.472,31,1.027,33,1.602,40,0.975,42,0.317,43,0.046,44,0.654,45,0.589,46,0.438,58,1.904,64,1.4,71,2.82,82,1.276,94,1.429,95,2.213,96,0.694,111,0.438,112,1.602,114,1.105,121,1.429,147,1.57,155,1.04,184,1.602,185,1.602,186,1.429,194,0.898,199,0.021,200,0.029,201,0.021,202,1.57,203,3.261,204,1.309,205,4.923,206,2.778,207,3.831,208,3.818,209,3.818,210,3.902,211,3.261,212,2.651,213,2.305,214,3.818,215,1.138,216,2.305,217,3.114,218,2.305,219,1.678,220,2.029,221,3.029,222,3.818,223,4.362,224,2.305,225,3.818,226,4.696,227,3.818,228,4.362,229,4.362,230,4.923,231,2.778,232,4.696,233,2.305,234,3.831,235,4.696,236,4.696,237,3.818,238,2.651,239,2.651,240,2.651,241,4.696,242,3.114,243,1.799,244,2.778,245,3.114,246,3.818,247,2.703,248,3.818,249,3.831,250,2.835,251,3.818,252,2.778,253,3.114,254,3.818,255,2.651,256,4.696,257,2.778,258,3.818,259,3.818,260,2.778,261,1.04,262,1.476,263,2.778,264,2.778,265,2.778,266,2.778,267,2.778,268,2.778,269,2.778,270,3.818,271,2.778,272,2.778,273,2.778,274,2.778,275,3.818,276,2.778,277,2.778,278,2.778]],["title/classes/MultiQueryParam.html",[0,0.533,12,1.381]],["body/classes/MultiQueryParam.html",[0,0.695,1,3.148,2,0.96,3,0.328,4,0.328,5,0.285,6,1.427,7,1.254,8,0.377,9,2.656,10,1.935,11,1.028,12,1.603,13,1.254,14,1.09,15,0.604,16,1.254,17,1.254,18,0.758,19,1.46,20,0.604,21,0.206,22,0.931,23,1.534,24,2.649,25,1.833,26,1.635,27,1.734,28,1.382,29,1.833,30,2.197,31,0.996,32,1.808,33,1.169,34,1.481,35,0.758,36,2.656,37,1.57,38,2.398,39,1.169,40,1.056,42,0.436,43,0.046,44,1.135,45,0.697,46,0.439,47,1.427,49,1.093,50,1.789,51,1.274,53,0.831,54,1.308,56,1.274,58,1.93,60,1.274,63,1.227,64,1.302,65,1.248,66,1.935,67,0.973,68,1.313,69,1.935,70,1.935,71,1.481,72,1.682,73,1.402,74,0.9,76,1.432,77,2.197,78,1.682,80,1.682,81,1.682,82,0.931,83,1.043,84,1.682,85,1.481,86,1.682,87,1.682,88,1.313,90,1.682,91,1.935,92,1.481,93,1.313,94,0.676,95,1.947,96,0.751,97,1.481,98,0.851,99,1.254,100,1.254,101,1.09,102,1.254,103,1.254,104,0.851,105,2.054,106,0.758,107,0.578,108,0.676,109,1.279,110,1.082,111,0.537,112,1.427,113,1.09,114,1.071,115,1.682,116,1.09,117,0.604,118,1.254,119,1.833,120,1.254,121,0.676,122,1.09,123,1.254,124,1.254,125,1.432,126,2.656,127,1.254,128,1.254,129,1.947,130,1.254,131,1.254,132,1.254,133,1.254,134,1.254,135,2.363,136,1.254,137,1.254,138,1.682,139,1.254,140,1.254,141,1.254,142,1.254,143,1.254,144,3.35,145,2.363,146,1.254,147,1.613,148,2.363,149,2.363,150,1.09,151,1.09,152,1.09,153,1.09,154,1.682,155,1.274,156,1.09,157,1.682,158,1.254,159,1.09,160,1.605,161,1.09,162,1.254,163,1.682,164,1.09,165,1.254,166,1.254,167,1.254,168,1.254,169,1.935,170,1.254,171,1.09,172,1.254,173,1.09,174,1.682,175,1.254,176,1.254,177,1.254,178,1.254,179,1.254,180,1.09,181,0.676,182,0.758,183,1.603,184,1.427,185,1.427,186,1.432,187,1.935,188,1.935,189,1.106,190,1.254,191,1.254,192,1.169,193,1.313,194,0.656,195,1.254,196,1.254,197,1.09,198,1.254,199,0.014,200,0.021,201,0.014,279,2.786,280,4.02,281,1.473,282,1.473,283,1.473,284,1.473,285,1.473,286,1.473,287,1.473,288,1.473,289,1.473,290,1.473]],["title/interfaces/MultiQueryParamOpts.html",[109,0.98,215,0.874]],["body/interfaces/MultiQueryParamOpts.html",[3,0.54,4,0.54,5,0.469,6,1.247,8,0.402,11,0.699,15,0.993,18,1.247,19,0.993,20,1.509,21,0.338,22,1.336,25,1.247,26,1.112,27,1.247,28,0.993,29,1.247,31,1.012,39,2.026,40,1.002,42,0.455,43,0.046,47,1.676,49,1.1,50,1.614,51,1.808,53,0.886,54,0.788,56,1.69,58,1.112,60,1.69,63,1.341,64,1.44,65,1.337,67,1.062,68,2.275,74,1.136,76,1.496,82,1.509,83,1.112,96,0.54,106,1.247,107,0.617,109,1.509,110,1.119,111,0.712,125,1.69,160,1.247,181,1.69,182,1.894,183,2.127,186,1.886,189,0.94,192,1.676,193,1.883,194,1.062,199,0.023,200,0.03,201,0.023,213,1.794,215,1.346,216,1.794,233,1.794,243,1.4,247,2.566,291,1.579,292,2.063,293,2.726,294,2.123,295,2.566,296,2.775,297,2.374,298,2.123,299,2.123,300,1.496,301,2.726,302,2.413,303,2.775,304,1.579,305,2.063,306,1.4,307,1.579,308,2.775,309,2.063,310,2.775,311,2.063,312,2.063,313,2.063,314,2.063,315,1.4,316,1.794,317,2.063,318,2.063,319,1.794,320,2.063,321,2.063,322,2.063,323,1.794,324,2.063,325,1.794,326,2.775,327,2.063,328,2.063,329,2.063,330,2.063,331,2.063,332,1.794,333,2.063,334,2.063,335,1.579,336,2.063,337,1.579,338,1.794,339,2.063,340,2.063,341,1.794,342,2.063,343,1.794,344,1.579,345,2.063,346,2.063]],["title/classes/QueryParam.html",[0,0.533,11,0.69]],["body/classes/QueryParam.html",[0,0.692,1,3.143,2,0.952,3,0.326,4,0.326,5,0.283,6,1.421,7,1.244,8,0.458,9,2.646,10,1.923,11,1.025,12,1.305,13,1.244,14,1.082,15,0.599,16,1.244,17,1.244,18,0.752,19,1.456,20,0.599,21,0.204,22,0.926,23,1.533,24,2.647,25,1.827,26,1.63,27,1.728,28,1.377,29,1.827,30,2.189,31,0.995,32,1.799,33,1.162,34,1.472,35,0.752,36,2.646,37,1.567,38,2.394,39,1.162,40,1.055,42,0.386,43,0.046,44,1.133,45,0.696,46,0.437,47,1.421,49,1.091,50,1.81,51,1.268,53,0.826,54,1.305,56,1.268,58,1.927,60,1.268,63,1.248,64,1.298,65,1.277,66,1.923,67,0.969,68,1.305,69,1.923,70,1.923,71,1.472,72,1.672,73,1.398,74,0.896,76,1.426,77,2.189,78,1.672,80,1.672,81,1.672,82,0.926,83,1.037,84,1.672,85,1.472,86,1.672,87,1.672,88,1.305,90,1.672,91,1.923,92,1.472,93,1.305,94,0.671,95,1.941,96,0.749,97,1.472,98,0.844,99,1.244,100,1.244,101,1.082,102,1.244,103,1.244,104,0.844,105,2.044,106,0.752,107,0.575,108,0.671,109,0.926,110,1.08,111,0.534,112,1.421,113,1.082,114,1.068,115,1.672,116,1.082,117,0.599,118,1.244,119,1.827,120,1.244,121,0.671,122,1.082,123,1.244,124,1.244,125,1.426,126,2.646,127,1.244,128,1.244,129,1.941,130,1.244,131,1.244,132,1.244,133,1.244,134,1.244,135,2.351,136,1.244,137,1.244,138,1.672,139,1.244,140,1.244,141,1.244,142,1.244,143,1.244,144,3.343,145,2.351,146,1.244,147,1.609,148,2.351,149,2.351,150,1.082,151,1.082,152,1.082,153,1.082,154,1.672,155,1.268,156,1.082,157,1.672,158,1.244,159,1.082,160,1.728,161,1.082,162,1.244,163,1.672,164,1.082,165,1.244,166,1.244,167,1.244,168,1.244,169,1.923,170,1.244,171,1.082,172,1.244,173,1.672,174,2.3,175,1.923,176,1.923,177,1.923,178,1.923,179,1.923,180,1.672,181,1.037,182,1.162,183,1.595,184,1.421,185,1.421,186,1.426,187,1.923,188,1.923,189,1.103,190,1.244,191,1.244,192,0.752,193,0.844,194,0.422,195,1.244,196,1.244,197,1.082,198,1.244,199,0.014,200,0.021,201,0.014,280,4.011,281,1.462,282,1.462,283,1.462,284,1.462,285,1.462,286,1.462,287,1.462,288,1.462,289,1.462,290,1.462,347,2.77]],["title/injectables/QueryParamBuilder.html",[348,2.035,349,2.391]],["body/injectables/QueryParamBuilder.html",[0,0.371,3,0.371,4,0.371,5,0.322,8,0.413,11,1.292,12,2.516,19,1.226,21,0.233,23,1.49,26,1.525,28,1.226,30,2.596,31,0.793,33,1.709,37,1.674,38,2.731,40,0.951,42,0.596,43,0.046,44,1.118,45,0.733,46,0.688,49,1.014,50,1.894,53,0.912,58,0.764,63,1.149,73,1.457,74,1.027,88,1.441,92,1.625,94,1.715,96,0.863,104,0.962,107,1.118,108,1.829,109,1.846,110,1.056,111,0.322,114,1.321,125,0.764,155,1.145,189,1.197,194,0.48,199,0.015,200,0.023,201,0.015,207,2.495,218,1.847,255,2.124,261,0.764,297,1.441,300,0.764,304,2.165,335,1.625,344,1.085,348,2.124,349,2.495,350,2.041,351,3.181,352,1.665,353,4.074,354,4.357,355,2.495,356,3.059,357,3.324,358,3.059,359,3.059,360,2.992,361,2.992,362,2.992,363,3.668,364,2.041,365,2.041,366,3.03,367,1.919,368,2.041,369,2.495,370,3.059,371,3.059,372,1.847,373,3.059,374,3.324,375,3.059,376,2.495,377,2.124,378,3.668,379,2.041,380,3.668,381,2.041,382,3.059,383,3.668,384,2.041,385,3.059,386,3.059,387,3.059,388,3.059,389,3.059,390,3.059,391,4.364,392,1.085,393,1.665,394,2.547,395,3.56,396,2.041,397,2.041,398,2.041,399,2.041,400,1.665,401,2.041,402,2.041,403,2.041,404,1.665,405,1.665,406,1.665,407,1.417,408,2.041,409,2.302,410,4.074,411,4.074]],["title/directives/QueryParamDirective.html",[202,0.98,412,1.77]],["body/directives/QueryParamDirective.html",[0,0.577,3,0.577,4,0.577,5,0.501,8,0.429,11,1.347,21,0.362,23,1.367,24,1.497,35,1.753,40,0.867,42,0.362,43,0.046,44,0.983,45,0.565,46,0.782,54,1.109,63,0.983,67,0.983,73,1.479,95,1.968,96,0.98,107,1.069,108,1.564,110,1.069,111,0.501,112,1.753,114,0.748,117,1.062,147,1.56,184,1.753,185,1.753,199,0.024,200,0.032,201,0.024,202,1.658,204,1.497,210,3.744,211,3.673,212,3.444,219,1.918,220,2.22,221,2.206,224,2.523,238,2.901,261,1.189,262,1.688,315,1.968,394,2.901,409,1.968,412,2.523,413,3.242,414,3.177,415,3.444,416,4.178,417,2.901,418,3.408,419,4.178,420,4.178,421,3.408,422,3.808,423,2.819,424,3.808,425,3.673,426,2.206,427,3.808,428,3.177,429,2.901,430,3.177,431,2.592,432,1.918,433,3.408,434,2.901,435,2.206,436,2.592,437,2.592,438,2.592,439,3.177,440,2.592,441,2.592,442,2.592,443,2.592,444,3.177,445,2.206,446,4.178,447,3.177,448,3.177,449,3.408,450,3.177,451,4.178,452,3.177,453,2.592,454,2.592,455,2.592]],["title/classes/QueryParamGroup.html",[0,0.533,73,0.874]],["body/classes/QueryParamGroup.html",[0,0.307,2,0.898,3,0.307,4,0.307,5,0.266,6,1.984,8,0.654,11,1.313,12,2.167,14,1.597,15,1.234,20,0.884,21,0.192,22,0.884,23,1.466,24,2.167,31,1.044,32,1.733,33,1.11,34,1.406,35,1.11,37,1.47,38,2.167,40,1.004,42,0.571,43,0.046,44,1.294,45,0.686,46,0.67,49,0.882,54,1.063,63,1.32,65,0.979,67,0.397,73,0.972,74,0.767,76,1.591,77,2.444,78,1.597,80,2.566,81,2.228,82,1.234,83,0.991,84,2.228,85,1.406,86,1.597,87,1.597,88,2.002,90,2.228,93,1.247,94,1.722,95,2.323,96,0.728,97,1.733,98,0.796,101,1.02,104,0.796,105,1.969,106,0.709,107,1.126,108,2.075,110,0.954,111,0.266,112,1.368,113,1.02,114,1.082,116,1.02,117,1.234,119,1.11,122,2.566,129,1.247,147,1.537,150,1.02,151,1.02,152,1.02,153,1.02,154,2.419,155,1.591,156,1.597,157,2.419,159,1.02,160,1.548,161,1.02,163,1.969,164,1.02,171,1.02,174,1.597,185,1.11,189,0.868,194,0.622,199,0.013,200,0.02,201,0.013,243,1.739,295,1.961,297,1.247,298,1.406,300,0.632,335,1.961,341,1.597,343,1.597,355,2.158,357,2.158,366,2.563,367,2.002,374,3.011,392,0.898,393,1.378,400,2.158,456,1.689,457,3.691,458,2.646,459,2.646,460,2.646,461,2.646,462,2.646,463,3.011,464,2.228,465,2.158,466,3.011,467,1.837,468,1.689,469,1.689,470,1.689,471,3.011,472,2.646,473,2.646,474,2.646,475,2.646,476,1.689,477,3.691,478,2.646,479,2.646,480,2.158,481,2.646,482,2.646,483,3.724,484,2.646,485,2.646,486,1.689,487,2.646,488,2.646,489,2.661,490,2.158,491,2.646,492,2.646,493,4.728,494,1.689,495,2.646,496,3.691,497,2.92,498,3.691,499,3.691,500,2.646,501,2.646,502,2.646,503,1.689,504,3.691,505,2.646,506,2.646,507,2.646,508,2.646,509,1.689,510,2.646,511,1.689,512,1.689,513,3.691,514,1.689,515,1.689,516,1.689,517,1.689,518,4.443,519,1.689,520,1.689,521,1.689,522,2.646,523,1.689,524,1.378,525,1.689,526,1.378,527,1.689,528,1.689,529,3.261,530,2.646,531,1.689,532,1.689,533,1.689,534,2.646,535,1.689,536,1.689,537,1.689]],["title/directives/QueryParamGroupDirective.html",[202,0.98,538,2.035]],["body/directives/QueryParamGroupDirective.html",[0,0.626,3,0.626,4,0.626,5,0.543,8,0.466,21,0.393,23,1.169,35,1.446,40,0.914,42,0.393,43,0.045,44,0.811,45,0.595,46,0.543,67,1.036,73,1.744,96,0.93,107,1.122,108,1.915,110,1.061,111,0.543,114,1.036,117,1.472,119,1.847,184,1.847,199,0.026,200,0.033,201,0.026,202,1.767,204,1.623,219,2.08,220,2.34,224,2.659,238,3.058,249,2.811,261,1.29,294,2.34,315,2.075,372,2.659,394,2.393,409,1.623,413,3.37,415,3.058,417,3.058,423,2.93,425,3.754,426,2.393,429,3.058,432,2.08,434,3.058,435,2.393,445,2.393,463,3.592,490,3.592,538,3.058,539,3.446,540,3.592,541,3.592,542,4.404,543,2.93,544,4.404,545,4.404,546,4.404,547,4.404,548,4.404,549,3.446,550,3.446,551,3.446,552,4.404,553,3.446,554,3.446,555,3.446,556,2.811,557,3.446,558,3.446,559,3.446,560,3.446,561,3.446,562,2.811,563,3.446,564,3.446,565,2.08,566,3.446]],["title/modules/QueryParamModule.html",[567,2.035,568,2.035]],["body/modules/QueryParamModule.html",[0,0.662,3,0.662,4,0.662,5,0.574,23,0.966,31,0.662,33,1.528,40,0.756,42,0.415,43,0.046,44,0.857,45,0.726,46,0.574,74,0.857,88,2.148,94,1.363,96,0.948,111,0.574,117,1.217,121,1.864,189,0.857,199,0.028,200,0.035,201,0.028,203,3.167,204,2.346,220,2.423,261,1.363,300,1.363,351,3.167,367,2.346,392,1.935,409,1.715,412,2.753,467,2.528,538,3.167,543,2.753,568,3.457,569,2.528,570,3.641,571,4.56,572,2.97,573,4.56,574,3.641,575,2.97,576,4.979,577,4.979,578,3.641,579,4.56,580,4.56,581,3.72,582,4.56,583,4.56,584,4.56,585,4.56,586,4.56,587,3.641,588,4.56,589,3.457,590,3.72,591,3.457,592,2.528,593,3.641,594,3.641,595,3.641,596,3.641,597,4.56,598,3.641]],["title/directives/QueryParamNameDirective.html",[202,0.98,543,1.77]],["body/directives/QueryParamNameDirective.html",[0,0.585,3,0.585,4,0.585,5,0.508,8,0.435,11,1.249,21,0.367,23,1.323,35,1.769,37,1.257,40,0.875,42,0.367,43,0.046,44,1.273,45,0.57,46,0.786,54,1.119,63,1.173,67,0.992,72,3.01,73,1.543,83,1.578,96,0.94,107,1.074,110,1.102,111,0.508,112,1.351,114,0.758,115,3.124,117,1.077,119,1.351,147,1.077,184,1.769,185,1.769,199,0.024,200,0.032,201,0.024,202,1.667,204,1.518,210,3.756,212,2.927,219,1.945,221,2.237,224,2.545,261,1.206,262,1.712,315,1.986,377,2.237,409,1.986,413,3.263,415,3.462,417,2.927,421,3.439,422,3.834,423,2.837,424,3.834,425,3.462,426,2.237,427,3.834,429,2.927,431,2.628,432,1.945,433,3.439,434,2.927,435,2.237,436,2.628,437,2.628,438,2.628,440,2.628,441,2.628,442,2.628,443,2.628,445,2.237,449,2.628,453,2.628,454,2.628,455,3.439,464,1.945,483,3.462,489,2.628,526,2.628,540,3.439,541,4.067,543,2.545,599,3.221,600,3.221,601,3.221,602,4.216,603,3.221,604,3.221,605,3.221,606,3.221,607,4.216,608,3.221,609,3.221,610,3.221,611,3.221]],["title/interfaces/QueryParamOpts.html",[50,0.98,215,0.874]],["body/interfaces/QueryParamOpts.html",[3,0.552,4,0.552,5,0.479,6,1.273,8,0.41,11,0.714,15,1.014,18,1.273,19,1.014,20,1.355,21,0.346,22,1.355,25,1.273,26,1.136,27,1.273,28,1.014,29,1.273,31,1.015,39,2.043,40,0.947,42,0.462,43,0.046,46,0.639,47,1.7,49,1.124,50,1.696,51,1.823,53,0.905,54,0.805,56,1.708,58,1.136,60,1.708,63,1.324,64,1.452,65,1.292,67,1.074,68,2.15,74,1.146,76,1.517,82,1.525,83,1.136,96,0.552,106,1.273,107,0.63,109,1.525,110,1.124,111,0.72,125,1.708,160,1.273,181,1.708,182,1.914,183,2.15,186,1.9,189,0.954,192,1.273,193,1.43,194,0.954,199,0.023,200,0.031,201,0.023,213,1.832,215,1.361,216,1.832,233,1.832,243,1.43,247,2.588,291,1.612,292,2.107,293,2.447,294,1.612,295,2.154,296,2.107,297,2.294,298,1.612,299,1.612,300,1.136,301,2.447,302,1.832,303,2.107,304,1.612,305,2.107,306,1.43,307,1.612,308,2.814,309,2.107,310,2.814,311,2.107,312,2.107,313,2.107,314,2.107,315,1.43,316,1.832,317,2.107,318,2.107,319,1.832,320,2.107,321,2.107,322,2.107,323,1.832,324,2.107,325,1.832,326,2.814,327,2.107,328,2.107,329,2.107,330,2.107,331,2.107,332,1.832,333,2.107,334,2.107,335,1.612,336,2.107,337,1.612,338,1.832,339,2.107,340,2.107,341,1.832,342,2.107,343,1.832,344,1.612,345,2.107,346,2.107]],["title/interfaces/QueryParamOptsBase.html",[39,1.23,215,0.874]],["body/interfaces/QueryParamOptsBase.html",[3,0.457,4,0.457,5,0.397,6,1.055,8,0.34,11,0.838,15,1.19,18,1.494,19,1.503,20,1.382,21,0.286,22,1.19,25,1.887,26,1.684,27,1.887,28,1.503,29,1.887,31,1.041,39,1.887,40,0.985,42,0.512,43,0.046,45,0.666,46,0.86,47,1.887,49,1.093,50,1.503,51,1.938,53,1.233,54,1.097,56,1.845,58,1.548,60,1.845,63,1.344,64,1.544,65,1.345,67,1.16,68,2.236,74,1.218,76,1.684,82,1.647,83,1.333,96,0.457,106,1.055,107,0.522,109,1.19,110,1.074,111,0.652,125,1.845,160,1.055,181,1.845,182,2.068,183,1.678,186,1.333,189,1.058,192,1.055,193,1.185,194,0.838,199,0.019,200,0.027,201,0.019,213,2.15,215,1.233,216,2.15,233,2.15,243,1.678,247,2.751,291,1.336,292,1.746,293,2.496,294,1.336,295,1.892,296,1.746,297,2.387,298,1.336,299,1.336,300,0.941,301,2.496,302,1.518,303,1.746,304,1.892,305,2.473,306,1.678,307,1.892,308,3.123,309,2.473,310,3.123,311,2.473,312,2.473,313,2.473,314,2.473,315,1.678,316,2.15,317,2.473,318,2.473,319,2.15,320,2.473,321,2.473,322,2.473,323,2.15,324,1.746,325,2.15,326,3.123,327,2.473,328,2.473,329,2.473,330,2.473,331,2.473,332,2.15,333,2.473,334,2.473,335,1.892,336,2.473,337,1.892,338,2.15,339,2.473,340,2.473,341,2.15,342,2.473,343,2.15,344,1.892,345,2.473,346,2.473]],["title/interfaces/RouterOptions.html",[215,0.874,367,1.381]],["body/interfaces/RouterOptions.html",[3,0.638,4,0.638,5,0.554,8,0.475,15,1.722,21,0.4,22,1.49,37,1.047,43,0.046,45,0.602,46,0.812,49,0.729,64,1.047,65,1.367,77,2.368,96,0.89,98,1.654,110,0.925,111,0.838,114,1.049,117,1.637,121,1.669,147,1.816,155,2.034,194,1.049,199,0.027,200,0.034,201,0.027,215,1.329,240,3.095,242,2.865,250,2.12,261,1.315,291,1.866,299,1.866,300,1.315,366,2.438,367,2.559,392,1.866,497,2.691,524,2.865,556,2.865,589,2.438,590,2.865,591,2.438,592,2.438,612,2.865,613,2.865,614,3.995,615,2.1,616,4.457,617,4.457,618,4.457,619,3.692,620,3.692,621,3.512,622,3.512,623,3.636,624,2.865,625,3.636,626,3.512,627,3.512,628,2.865,629,3.512,630,2.865,631,2.865,632,3.512,633,3.512,634,3.512,635,3.512,636,3.512,637,3.512,638,3.512,639,2.865,640,2.865,641,2.865]],["title/changelog.html",[615,1.163,642,1.311,643,2.468]],["body/changelog.html",[5,0.563,8,0.182,11,0.316,15,0.936,18,0.924,19,0.736,20,0.449,22,0.449,23,0.357,24,0.633,25,1.174,26,1.048,27,0.564,28,0.449,29,1.61,30,0.714,31,0.649,32,1.171,34,0.714,37,0.401,42,0.369,43,0.031,44,0.841,45,0.378,46,0.212,49,0.279,51,0.825,53,0.401,54,0.585,63,0.316,64,0.401,65,0.859,67,0.316,71,0.714,73,0.835,74,0.659,82,0.936,85,1.171,92,0.714,93,0.633,104,0.633,107,0.672,108,1.048,110,0.672,111,0.51,114,0.518,119,0.564,121,1.437,129,1.038,138,1.954,147,0.449,182,1.174,186,1.212,189,0.316,192,0.564,194,0.316,199,0.01,200,0.017,201,0.01,202,1.082,211,0.934,215,0.401,217,1.797,218,2.447,220,0.714,239,1.944,240,2.481,243,0.633,247,1.487,250,2.157,253,1.097,255,1.53,295,1.171,297,1.909,299,0.714,300,0.503,302,0.812,304,0.714,306,1.038,316,0.812,323,0.812,337,1.171,344,1.487,354,1.797,360,1.097,361,1.097,362,1.097,372,0.812,376,1.097,377,0.934,404,2.284,405,1.097,407,0.934,409,0.633,412,0.812,423,0.812,432,0.812,464,1.954,465,1.097,466,4.075,467,1.944,471,1.097,480,1.097,483,1.944,497,0.812,562,4.451,565,2.895,567,0.934,572,1.097,575,1.097,581,1.097,592,0.934,614,1.797,615,0.633,619,0.934,620,1.944,623,2.641,625,1.097,631,1.097,642,0.714,644,1.344,645,1.344,646,2.203,647,1.344,648,1.344,649,2.799,650,2.203,651,2.203,652,1.344,653,4.23,654,2.799,655,1.344,656,5.287,657,5.287,658,5.856,659,1.344,660,1.344,661,1.344,662,1.344,663,1.344,664,1.344,665,5.636,666,1.344,667,4.379,668,2.203,669,2.914,670,1.344,671,1.344,672,1.344,673,3.237,674,1.344,675,1.944,676,1.344,677,2.203,678,4.23,679,1.344,680,1.344,681,1.344,682,2.799,683,1.344,684,1.344,685,1.344,686,1.344,687,1.344,688,4.379,689,2.203,690,1.344,691,2.203,692,1.344,693,1.344,694,1.344,695,2.799,696,1.344,697,1.344,698,1.344,699,3.572,700,5.183,701,2.799,702,1.344,703,1.344,704,5.814,705,1.344,706,2.203,707,3.237,708,1.344,709,4.052,710,1.344,711,1.344,712,3.837,713,1.344,714,1.344,715,1.344,716,1.344,717,1.344,718,3.237,719,1.344,720,1.344,721,1.344,722,1.344,723,1.344,724,1.344,725,3.572,726,1.344,727,1.344,728,1.097,729,1.344,730,2.203,731,1.344,732,1.344,733,1.344,734,1.344,735,3.837,736,1.344,737,1.344,738,2.799,739,1.344,740,3.572,741,1.344,742,1.344,743,2.799,744,1.344,745,1.344,746,1.344,747,1.344,748,4.711,749,2.203,750,1.344,751,1.344,752,3.237,753,1.344,754,1.344,755,1.344,756,1.344,757,1.344,758,1.344,759,1.344,760,1.344,761,1.344,762,1.344,763,1.344,764,2.203,765,2.203,766,1.344,767,1.344,768,1.344,769,1.344,770,1.344,771,2.203,772,1.344,773,2.203,774,1.344,775,2.203,776,1.344,777,1.797,778,1.344,779,1.344,780,1.344,781,1.344,782,2.203,783,1.344,784,1.344,785,2.799,786,2.203,787,1.344,788,1.344,789,1.344,790,1.344,791,1.344,792,1.344,793,1.344,794,1.344,795,1.344,796,4.052,797,2.799,798,1.344,799,1.344,800,2.799,801,1.344,802,1.344,803,2.203,804,1.344,805,1.344,806,1.344,807,1.344,808,2.284,809,1.344,810,1.344,811,1.344,812,1.344,813,1.344,814,2.203,815,2.203,816,1.344,817,1.344,818,1.344,819,1.344,820,1.344,821,1.344,822,1.344,823,1.344,824,1.344,825,1.344,826,1.344,827,1.344,828,1.344,829,1.344,830,1.344,831,1.344,832,1.344,833,1.344,834,1.344,835,1.344,836,1.344,837,1.344,838,1.344,839,1.344,840,1.344,841,1.344,842,1.344,843,1.344,844,1.344,845,1.344,846,2.799,847,1.344,848,1.344,849,1.344,850,2.203,851,1.344,852,1.344,853,3.45,854,1.344,855,1.344,856,1.344,857,1.344,858,1.344,859,1.344,860,1.344,861,1.344,862,2.203,863,1.344,864,1.344,865,1.344,866,1.344,867,1.344,868,3.837,869,1.344,870,1.344,871,1.344,872,1.344,873,1.344,874,1.344,875,1.344,876,2.203,877,2.203,878,1.344,879,1.344,880,2.203,881,1.344,882,2.799,883,1.344,884,2.203,885,1.344,886,1.344,887,2.799,888,3.237,889,1.344,890,3.572,891,1.344,892,1.344,893,1.344,894,1.344,895,1.344,896,1.344,897,1.344,898,1.344,899,3.572,900,1.344,901,1.344,902,1.344,903,1.344,904,1.344,905,1.344,906,1.344,907,1.344,908,1.344,909,2.203,910,1.344,911,3.837,912,1.344,913,1.344,914,1.344,915,1.344,916,2.203,917,3.237,918,1.344,919,1.344,920,1.344,921,1.344,922,1.344,923,1.344,924,1.344,925,1.344,926,1.344,927,1.344,928,4.195,929,5.142,930,2.203,931,1.344,932,1.344,933,1.344,934,1.344,935,3.237,936,1.344,937,1.344,938,1.344,939,1.344,940,1.344,941,1.344,942,1.344,943,1.344,944,1.344,945,1.344,946,1.344,947,1.344,948,1.344,949,1.344,950,1.344,951,3.572,952,1.344,953,1.344,954,1.344,955,1.344,956,2.203,957,2.799,958,1.344,959,1.344,960,1.344,961,1.344,962,1.344,963,1.344,964,1.344,965,1.344,966,1.344,967,1.344,968,1.344,969,2.203,970,1.344,971,2.203,972,1.344,973,2.203,974,1.344,975,1.344,976,1.344,977,1.344,978,1.344,979,1.344,980,1.344,981,1.344,982,1.097,983,1.344,984,1.344,985,2.203,986,1.344,987,1.344,988,1.344,989,1.344,990,1.344,991,1.344,992,1.344,993,2.203,994,1.344,995,1.344,996,1.344,997,1.344,998,1.344,999,1.344,1000,1.344,1001,1.344,1002,1.344,1003,1.344,1004,1.344,1005,3.237,1006,1.344,1007,1.344,1008,1.344,1009,1.344,1010,1.344,1011,1.344,1012,1.344,1013,1.344,1014,1.344,1015,1.344,1016,1.344,1017,1.344,1018,1.344,1019,1.344,1020,1.344,1021,1.344,1022,1.797,1023,1.344,1024,1.344,1025,1.344,1026,1.344,1027,1.097,1028,1.344,1029,1.344,1030,1.097,1031,1.344,1032,1.097,1033,0.812,1034,1.344,1035,2.203,1036,1.344,1037,1.344,1038,1.344,1039,1.344,1040,1.344,1041,1.344,1042,4.052,1043,1.344,1044,1.344,1045,1.344,1046,1.344,1047,1.344,1048,1.344,1049,1.344,1050,2.203,1051,1.097,1052,1.344,1053,0.934,1054,1.344,1055,1.344,1056,1.344,1057,1.344,1058,1.344,1059,1.344,1060,1.344,1061,1.344,1062,1.344,1063,1.344,1064,1.344,1065,1.344,1066,1.344,1067,1.344,1068,1.344,1069,2.203,1070,1.344,1071,1.344,1072,1.344,1073,1.344,1074,1.344,1075,1.344,1076,1.344,1077,1.344,1078,1.344,1079,1.344,1080,1.344,1081,0.812,1082,1.344,1083,1.344,1084,1.344,1085,2.203,1086,1.344,1087,1.344,1088,1.344,1089,1.344,1090,1.344,1091,1.344,1092,1.344,1093,1.344,1094,3.237,1095,1.344,1096,1.344,1097,1.344,1098,1.344,1099,1.344,1100,1.344,1101,1.344,1102,1.344,1103,1.344,1104,1.344,1105,1.344,1106,1.344,1107,1.344,1108,1.344,1109,1.344,1110,2.799,1111,1.344,1112,1.344,1113,1.344,1114,1.344,1115,1.344,1116,1.344,1117,1.344,1118,1.344,1119,2.203,1120,1.344,1121,1.344,1122,1.344,1123,1.344,1124,1.344,1125,2.203,1126,1.344,1127,1.344,1128,1.344,1129,1.344,1130,1.344,1131,1.344,1132,1.344,1133,1.344,1134,1.344,1135,1.344,1136,1.344,1137,2.203,1138,1.344,1139,1.344,1140,3.237,1141,2.203,1142,1.344,1143,1.344,1144,1.344,1145,1.097,1146,1.344,1147,1.344,1148,1.344,1149,1.344,1150,1.344,1151,2.799,1152,1.344,1153,1.344,1154,1.344,1155,2.203,1156,1.344,1157,1.344,1158,2.203,1159,1.344,1160,1.344,1161,1.344,1162,1.344,1163,1.344,1164,1.344,1165,1.344,1166,1.344,1167,1.344,1168,1.344,1169,1.344,1170,1.344,1171,1.344,1172,1.344,1173,1.344,1174,1.344,1175,1.344,1176,1.344,1177,1.344,1178,1.344,1179,1.344,1180,1.344,1181,1.344]],["title/dependencies.html",[1053,2.44,1182,2.468]],["body/dependencies.html",[43,0.044,98,2.103,199,0.034,200,0.039,201,0.034,261,1.671,262,2.372,624,3.641,853,3.641,1051,3.641,1053,3.58,1183,4.464,1184,4.464,1185,4.464,1186,5.588,1187,4.464]],["title/miscellaneous/functions.html",[1081,2.122,1188,1.163]],["body/miscellaneous/functions.html",[8,0.734,19,1.638,21,0.401,28,1.638,31,1.045,37,1.33,38,1.657,42,0.658,43,0.044,44,1.299,45,0.734,46,0.91,53,1.33,54,1.442,56,1.834,60,1.834,74,1.279,94,2.067,107,0.926,109,1.175,129,2.56,155,1.67,189,1.279,199,0.027,200,0.034,201,0.027,306,2.308,307,2.604,351,2.442,352,3.639,369,4.433,395,2.869,1081,2.123,1188,1.657,1189,4.461,1190,5.434,1191,4.461,1192,4.461,1193,4.461,1194,4.461,1195,4.461,1196,4.461,1197,3.516,1198,3.516,1199,3.516,1200,5.434,1201,3.516,1202,3.516,1203,3.516,1204,3.516,1205,3.516]],["title/index.html",[21,0.281,615,1.163,642,1.311]],["body/index.html",[8,0.564,42,0.475,43,0.038,49,0.866,65,1.315,67,0.982,76,1.562,93,2.335,181,1.855,199,0.032,200,0.038,201,0.032,218,2.52,234,3.405,250,3.192,262,2.218,294,2.218,337,2.218,338,2.52,372,2.52,464,2.52,565,2.52,615,1.966,628,4.043,630,3.405,642,2.218,675,2.898,728,3.405,808,3.405,982,3.405,1022,4.043,1030,3.405,1033,2.52,1206,4.174,1207,4.174,1208,4.174,1209,4.174,1210,4.174,1211,4.174,1212,4.956,1213,4.174,1214,4.174,1215,4.174,1216,4.174,1217,4.174,1218,4.174,1219,4.174,1220,4.174,1221,4.174,1222,4.174,1223,4.174,1224,4.956,1225,4.956,1226,4.174,1227,4.174,1228,3.405]],["title/license.html",[615,1.163,642,1.311,1033,1.49]],["body/license.html",[43,0.037,97,2.111,180,2.399,199,0.03,200,0.037,201,0.03,239,2.759,293,2.399,418,4.223,497,2.399,565,2.905,675,2.759,928,3.241,1027,3.241,1032,3.926,1033,2.399,1228,3.241,1229,5.176,1230,3.973,1231,3.973,1232,3.973,1233,4.812,1234,3.973,1235,3.973,1236,3.973,1237,3.973,1238,3.973,1239,3.973,1240,5.757,1241,3.973,1242,3.973,1243,3.973,1244,3.973,1245,4.812,1246,3.973,1247,3.973,1248,3.973,1249,3.973,1250,3.973,1251,3.973,1252,3.973,1253,3.973,1254,4.812,1255,3.973,1256,3.973,1257,3.973,1258,3.973,1259,3.973,1260,3.973,1261,4.812,1262,4.812,1263,3.973,1264,3.973,1265,3.973,1266,3.973,1267,3.973,1268,3.973,1269,3.973,1270,3.973,1271,3.973,1272,3.973,1273,3.973,1274,3.973,1275,3.973,1276,3.973,1277,3.973,1278,3.973,1279,3.973,1280,3.973,1281,3.973,1282,3.973,1283,3.973,1284,3.973,1285,3.973,1286,3.973,1287,3.973,1288,3.973,1289,3.973]],["title/modules.html",[569,2.749]],["body/modules.html",[43,0.04,199,0.035,200,0.04,201,0.035,568,3.205,569,3.205,1290,4.616]],["title/overview.html",[1291,3.23]],["body/overview.html",[2,2.418,43,0.04,199,0.035,200,0.04,201,0.035,204,2.144,291,2.418,348,3.16,567,3.16,1145,4.469,1291,3.712,1292,5.213]],["title/miscellaneous/typealiases.html",[1188,1.163,1293,3.514]],["body/miscellaneous/typealiases.html",[20,1.386,21,0.472,31,0.897,37,1.236,42,0.472,43,0.037,45,0.667,47,2.071,49,0.861,50,1.386,51,1.974,53,1.236,56,1.848,60,1.848,63,0.976,64,1.236,65,1.399,125,2.117,173,2.504,181,1.848,189,0.976,197,2.504,199,0.031,200,0.037,201,0.031,245,4.027,298,2.623,301,3.183,306,1.954,307,2.203,319,2.504,325,2.504,332,2.504,406,3.383,407,2.879,669,3.383,1081,2.504,1188,1.954,1294,4.147,1295,5.457,1296,4.147,1297,4.147,1298,4.147,1299,4.147,1300,4.147,1301,4.147,1302,4.937]],["title/miscellaneous/variables.html",[1188,1.163,1303,2.867]],["body/miscellaneous/variables.html",[21,0.483,31,0.967,43,0.044,45,0.676,49,0.88,74,1.252,114,0.998,121,1.588,194,1.252,199,0.032,200,0.038,201,0.032,367,2.508,392,2.254,589,3.475,591,3.475,612,3.461,613,4.342,619,2.946,620,2.946,639,3.461,640,3.461,641,3.461,777,4.082,1188,1.999,1303,3.461,1304,5.004,1305,5.004,1306,5.004,1307,4.243,1308,4.243,1309,4.243]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":197,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"miscellaneous/typealiases.html":{}}}],["0.0.2",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["0.2.6",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["0.2.7",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["0.2.8",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["0.7.2",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["00a5667",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["0234ebf",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["0351f05",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["04b2c8c",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["0529276",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["05b48ca",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["0633526",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["07c103e",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["08259b8",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["085d120",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["0d509d0",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["0dfd817",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["0e28c35",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["0f0b48d",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["0f566ad",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1292,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["128c233",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["131508b",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["15ce1ee",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["164eee1",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["17f368e",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["19d8180",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["19df3e7",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["1ab4edc",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["1add8a8",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["1b74a5a",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["1cd8dfa",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["1d666d5",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["1dfa9ba",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["1e61b69",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":928,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["21e44c1",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["226bb25",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["2bffb73",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["2d8313b",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["2e39369",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["2ea841b",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["2f2675e",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["2f43d27",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["30",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["32b080e",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["35a48be",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["35b0e66",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["35bd383",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["36",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["38a609a",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["397635d",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["3ab996d",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["3bfc1b0",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["3c2e4b7",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["3d1a793",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["3dd2028",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["3ed6e3e",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["3f30355",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1145,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["40",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["43e1ea6",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["448c51f",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["44a9d69",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["4518232",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["466c39c",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["4865d5f",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["48f2da4",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["4ce6f5c",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["4de02a4",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["4fdcfe1",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["51ca66e",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["5229ba9",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["52ec93a",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["58a71a7",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["59",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["5c76c67",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["5d65a55",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["5d90b63",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["5e0ab8b",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["5e2e50c",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["5eea3ea",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["5fcb4cf",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["60377e5",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["60ba6dd",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["60d8bd8",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["6148a68",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["61cc019",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["62",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["63",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["63d6358",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["63f83a5",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["6420b9e",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["644cc20",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["6481613",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["6ade19d",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["6ebdc96",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["7.2.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["70f1e62",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["718c789",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["73",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["73c58cf",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["76ad096",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["781f009",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["7864ffe",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["78c8c4e",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["79a340d",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["7dc56f3",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["7ee98f3",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["7fcb598",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["8037a39",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["82987c7",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["865adaf",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["8ab0449",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["8c9d268",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["8dc960c",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["90a61bb",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["91a75ba",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["91cb7f7",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["91d4c8a",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["93a5281",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["93ed9cb",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["962bc32",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["96985ca",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["971cae4",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["985a96b",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["98fe148",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["9c2a369",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["9c8722a",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["9cf2a08",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["9dfaa92",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["9e7fdb4",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":267,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["_clearchangefunctions",{"_index":152,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_queryparamadded",{"_index":515,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["_registeronchange(fn",{"_index":150,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["_setparent(parent",{"_index":168,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["_updatevalue(opts",{"_index":536,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["_valuechanges",{"_index":113,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["a0bde9b",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["a0de621",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["a1997c7",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["a55ad5c",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["a579a4a",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["a5f4d74",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["a6352fb",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["a746ac3",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["a94ccc6",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["aadad1b",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["aba7bd1",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1260,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstraction",{"_index":625,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["abstractqueryparam",{"_index":1,"title":{"classes/AbstractQueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:113",{"_index":290,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:22",{"_index":289,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:27",{"_index":288,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:36",{"_index":287,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:39",{"_index":286,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:42",{"_index":284,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:45",{"_index":283,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:48",{"_index":285,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:51",{"_index":282,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["abstractqueryparam:54",{"_index":281,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["accepts",{"_index":417,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["access",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["accessor",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["accessor.directive.ts",{"_index":206,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:38",{"_index":231,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:49",{"_index":244,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:60",{"_index":252,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.directive.ts:69",{"_index":257,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["accessor.interface",{"_index":436,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["accessors",{"_index":467,"title":{},"body":{"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["accessors/accessors",{"_index":587,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["accessors/util",{"_index":438,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["action",{"_index":1283,"title":{},"body":{"license.html":{}}}],["actually",{"_index":17,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["ad",{"_index":208,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["adapter",{"_index":592,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["adapter.interface",{"_index":393,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["adapter.interface.ts",{"_index":613,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["adapter/router",{"_index":392,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":464,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"index.html":{}}}],["add(queryparamname",{"_index":475,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["added",{"_index":562,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":335,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["adds",{"_index":477,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["adjust",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["aea857a",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["afeae98",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["afterwards",{"_index":481,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["against",{"_index":545,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["alias",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1294,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":171,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["always",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["analytics",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1252,"title":{},"body":{"license.html":{}}}],["angular",{"_index":299,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["angular.json",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":261,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":262,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":624,"title":{},"body":{"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["another",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":508,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["api",{"_index":218,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":213,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["apply",{"_index":317,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["approach",{"_index":1210,"title":{},"body":{"index.html":{}}}],["areequalusing",{"_index":99,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["areequalusing(value",{"_index":188,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["arising",{"_index":1287,"title":{},"body":{"license.html":{}}}],["around",{"_index":626,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["array",{"_index":192,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["assert",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1241,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1277,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["b19a81e",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["b2435af",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["b706777",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["ba59419",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["bab1e45",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["bad6c06",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["badge",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":10,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["bb15442",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["bbaf6e4",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["bbc9a66",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["bcac502",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["bcfd06e",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["belongs",{"_index":172,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["benefits",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":178,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["bf6c355",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["bff5d3f",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":238,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["binds",{"_index":415,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["bit",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":155,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{}}}],["booleanparam",{"_index":360,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["booleanparam(urlparam",{"_index":363,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["bootstrap",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["bound",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["branch",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["broken",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1290,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["buffering",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["builder.service.ts",{"_index":352,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["builder.service.ts:112",{"_index":364,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:139",{"_index":381,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:41",{"_index":368,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:58",{"_index":384,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["builder.service.ts:85",{"_index":379,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["building",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["bundles",{"_index":458,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["button",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["bürk",{"_index":1232,"title":{},"body":{"license.html":{}}}],["c",{"_index":1230,"title":{},"body":{"license.html":{}}}],["c4787a4",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["c6b3a1e",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["c6cd845",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["ca45e43",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["ca6f87d",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":254,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["carries",{"_index":474,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["case",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["cc7334f",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["cc7a558",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["cfa25df",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":247,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["changed",{"_index":341,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["changefn(this.value",{"_index":537,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["changefn(value",{"_index":162,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["changefunctions",{"_index":116,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["changelog",{"_index":643,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":82,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["changes['name",{"_index":608,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["changes['queryparam",{"_index":447,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["changes['queryparamgroup",{"_index":553,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["changing",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1237,"title":{},"body":{"license.html":{}}}],["checkboxcontrolvalueaccessor",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["checkboxcontrolvalueaccessordirective",{"_index":579,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["checking",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["child",{"_index":542,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["chmod",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1280,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"overview.html":{}}}],["clean",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":1224,"title":{},"body":{"index.html":{}}}],["collecting",{"_index":462,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["collection",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["collections",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["combinewith",{"_index":25,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["coming",{"_index":311,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["command",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["comment",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["comparator",{"_index":51,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["compares",{"_index":1297,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["comparewith",{"_index":26,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["comparison",{"_index":328,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["complete",{"_index":84,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["complex",{"_index":382,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["component",{"_index":211,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"changelog.html":{}}}],["component's",{"_index":241,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["components",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1259,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1225,"title":{},"body":{"index.html":{}}}],["config",{"_index":575,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["config.routeroptions",{"_index":598,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["configuration",{"_index":377,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["connection",{"_index":180,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"license.html":{}}}],["consider",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":318,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["consistently",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["console.log",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":117,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["constructor(groupservice",{"_index":426,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["constructor(private",{"_index":551,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["constructor(queryparams",{"_index":468,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["constructor(urlparam",{"_index":36,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["content",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["context",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":1284,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1222,"title":{},"body":{"index.html":{}}}],["contributing.md",{"_index":1223,"title":{},"body":{"index.html":{}}}],["control",{"_index":182,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["control's",{"_index":245,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"miscellaneous/typealiases.html":{}}}],["controls",{"_index":1022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["controlvalueaccessor",{"_index":210,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["controlvalueaccessordirective",{"_index":203,"title":{"directives/ControlValueAccessorDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"modules/QueryParamModule.html":{}}}],["controlvaluechange",{"_index":228,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["controlvaluechanges",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["conventional",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["converted",{"_index":1302,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["copies",{"_index":1254,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1032,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copy&paste",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1229,"title":{},"body":{"license.html":{}}}],["core",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["correct",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":354,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["createbooleandeserializer",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleandeserializer(defaultvalue",{"_index":1199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanserializer",{"_index":1191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbooleanserializer(defaultvalue",{"_index":1201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createemptyondeserializer",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["createnumberdeserializer",{"_index":1192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberdeserializer(defaultvalue",{"_index":1202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberserializer",{"_index":1193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnumberserializer(defaultvalue",{"_index":1203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":369,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["createstringdeserializer",{"_index":1194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringdeserializer(defaultvalue",{"_index":1204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringserializer",{"_index":1195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstringserializer(defaultvalue",{"_index":1205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":76,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["currently",{"_index":249,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["custom",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["customparam",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["d1d0a1b",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["d2c1d08",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["d33fa5d",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["d653c6c",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["d828073",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["d9f96e3",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["da0f162",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["da72932",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1281,"title":{},"body":{"license.html":{}}}],["data",{"_index":1215,"title":{},"body":{"index.html":{}}}],["dba2b08",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["dc45c9a",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":18,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["de0d0e0",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1243,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1289,"title":{},"body":{"license.html":{}}}],["debounce",{"_index":316,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["debounced",{"_index":310,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["debouncetime",{"_index":27,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["dec2d0f",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":594,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["declarative",{"_index":1209,"title":{},"body":{"index.html":{}}}],["declaratively",{"_index":1206,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_boolean_deserializer",{"_index":385,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_boolean_serializer",{"_index":386,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_deserializer",{"_index":387,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_number_serializer",{"_index":388,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_deserializer",{"_index":389,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["default_string_serializer",{"_index":390,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["defaultcontrolvalueaccessordirective",{"_index":580,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["defaultrouteradapter",{"_index":588,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["defaultrouteroptions",{"_index":589,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["defaultvalue",{"_index":1200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":40,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["defines",{"_index":301,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["defining",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["definitions",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":527,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["demo",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["demonstrate",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":1053,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["dependency",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["deploy",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["deregister",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["describes",{"_index":173,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"miscellaneous/typealiases.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deserialization",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["deserialize",{"_index":28,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["deserializer",{"_index":307,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["deserializevalue(value",{"_index":149,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["deserializing",{"_index":142,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["designed",{"_index":1216,"title":{},"body":{"index.html":{}}}],["destroy",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["detached",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["determine",{"_index":325,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["dev",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["devkit/schematics",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["didn't",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":556,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"interfaces/RouterOptions.html":{}}}],["differs",{"_index":70,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["direct",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":339,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["directive",{"_index":202,"title":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["directives",{"_index":204,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"overview.html":{}}}],["directives/directives",{"_index":578,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["directly",{"_index":416,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["disable",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":246,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["disabledchange",{"_index":229,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["distribute",{"_index":1250,"title":{},"body":{"license.html":{}}}],["docs",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":540,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["domain",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":557,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["dynamically",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["e.g",{"_index":68,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["e0e875b",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["e100621",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["e41b19a",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["e4ed111",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["e57e700",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":122,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["easy",{"_index":1208,"title":{},"body":{"index.html":{}}}],["eb588a0",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["ebc0d9d",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["ecf709e",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["ee2c473",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":333,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["effects",{"_index":1301,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["element",{"_index":541,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["elementref",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["elements",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":154,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emitmodeltoviewchange",{"_index":157,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emits",{"_index":80,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["emitted",{"_index":461,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["empty",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["emptyon",{"_index":29,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["ensure",{"_index":85,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["entirely",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":1298,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["equality",{"_index":1300,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["equals",{"_index":326,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["equivalent",{"_index":236,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["error",{"_index":138,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{}}}],["error(`a",{"_index":523,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["error(`binding",{"_index":555,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["error(`combinewith",{"_index":134,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`comparewith",{"_index":131,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`deserialize",{"_index":128,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`no",{"_index":526,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["error(`parameter",{"_index":170,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`please",{"_index":120,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`serialize",{"_index":124,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["error(`you",{"_index":561,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["errors",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["essentially",{"_index":175,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["evaluated",{"_index":479,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["event",{"_index":239,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{},"license.html":{}}}],["eventemitter",{"_index":230,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["events",{"_index":217,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["example",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["examples",{"_index":630,"title":{},"body":{"interfaces/RouterOptions.html":{},"index.html":{}}}],["exclude",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["executable",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["execute",{"_index":331,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["exists",{"_index":524,"title":{},"body":{"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["explanation",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["explicitly",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":111,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["exportas",{"_index":263,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["exports",{"_index":595,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["expost",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1268,"title":{},"body":{"license.html":{}}}],["extends",{"_index":183,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["extras",{"_index":366,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["f02d26d",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["f1cdfeb",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["f27f369",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["f394fa6",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["f4c3365",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["f526b61",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["f570513",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["f837240",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["f843d23",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["f994b25",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":160,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["fce4ec2",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["files",{"_index":1242,"title":{},"body":{"license.html":{}}}],["filters",{"_index":1214,"title":{},"body":{"index.html":{}}}],["fired",{"_index":232,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["first",{"_index":404,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["fitness",{"_index":1273,"title":{},"body":{"license.html":{}}}],["fix",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":275,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fnchange",{"_index":266,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["fntouched",{"_index":268,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["following",{"_index":1258,"title":{},"body":{"license.html":{}}}],["forget",{"_index":606,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["forgotten",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":181,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["format",{"_index":513,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["forms",{"_index":728,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["forroot",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["forwarded",{"_index":617,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["forwardref",{"_index":223,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["found",{"_index":489,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["fragment",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1236,"title":{},"body":{"license.html":{}}}],["function",{"_index":125,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1081,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":1257,"title":{},"body":{"license.html":{}}}],["further",{"_index":505,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["ga",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["get(queryparamname",{"_index":485,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["getcurrentnavigation",{"_index":636,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["getting",{"_index":642,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["getvalue",{"_index":511,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["gh",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["gitter",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":243,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["global",{"_index":376,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["globally",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["glue",{"_index":177,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["google",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1235,"title":{},"body":{"license.html":{}}}],["green",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":108,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{}}}],["group(queryparams",{"_index":365,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["group.directive.ts",{"_index":539,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.directive.ts:23",{"_index":548,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["group.service",{"_index":435,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["group.ts",{"_index":456,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:109",{"_index":503,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:125",{"_index":512,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:141",{"_index":494,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:170",{"_index":509,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:28",{"_index":470,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:42",{"_index":469,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:72",{"_index":486,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["group.ts:91",{"_index":476,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["groupchange",{"_index":552,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupchange.currentvalue",{"_index":560,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groupchange.firstchange",{"_index":554,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["groups",{"_index":355,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["groupservice",{"_index":429,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["guide",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["guidelines",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["haven't",{"_index":563,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["heading",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["headings",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["headline",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1234,"title":{},"body":{"license.html":{}}}],["history",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["hoc",{"_index":209,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["holders",{"_index":1278,"title":{},"body":{"license.html":{}}}],["holds",{"_index":13,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["host",{"_index":212,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["https://angular.io/api/forms/controlvalueaccessor",{"_index":421,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["https://www.app.io?param=a&param=b&param=c",{"_index":303,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["i.e",{"_index":330,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["icon",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":409,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["imperative",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":184,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["implied",{"_index":1269,"title":{},"body":{"license.html":{}}}],["import",{"_index":96,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["imports",{"_index":593,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["improve",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1211,"title":{},"body":{"index.html":{}}}],["included",{"_index":1263,"title":{},"body":{"license.html":{}}}],["including",{"_index":1245,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infer",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["inform",{"_index":256,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["information",{"_index":1212,"title":{},"body":{"index.html":{}}}],["ingo",{"_index":1231,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":280,"title":{},"body":{"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["initially",{"_index":480,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["inject",{"_index":431,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["inject(ng_value_accessor",{"_index":441,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["injectable",{"_index":348,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"overview.html":{}}}],["injectables",{"_index":350,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["injection",{"_index":639,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":621,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_adapter",{"_index":638,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["injectiontoken('ngqp_router_options",{"_index":641,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":432,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["input('queryparam",{"_index":439,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["input('queryparamgroup",{"_index":550,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["input('queryparamname",{"_index":605,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["inputs",{"_index":315,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["inside",{"_index":72,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamNameDirective.html":{}}}],["install",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["installation",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":490,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{}}}],["instances",{"_index":357,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["instead",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["interaction",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":215,"title":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["interfaces",{"_index":291,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"overview.html":{}}}],["internal",{"_index":147,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["intuitive",{"_index":1219,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":334,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["isfunction",{"_index":100,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(combinewith",{"_index":133,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(comparewith",{"_index":130,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(deserialize",{"_index":127,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["isfunction(serialize",{"_index":123,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["ismissing",{"_index":101,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["ismissing(queryparam",{"_index":532,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["ismissing(urlparam",{"_index":118,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["ismultiopts",{"_index":1196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismultiopts(opts",{"_index":395,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/functions.html":{}}}],["isn't",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["ispresent",{"_index":102,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["ispresent(combinewith",{"_index":132,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["ispresent(this.parent",{"_index":165,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["item",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":473,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["keyed",{"_index":400,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["kind",{"_index":1267,"title":{},"body":{"license.html":{}}}],["landing",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1282,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1279,"title":{},"body":{"license.html":{}}}],["license",{"_index":1033,"title":{"license.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["limitation",{"_index":1246,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["limited",{"_index":1270,"title":{},"body":{"license.html":{}}}],["line",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":110,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["linting",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":304,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["listed",{"_index":499,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["listen",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":88,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["location",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["loose",{"_index":327,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["loose_identity_comparator",{"_index":391,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["made",{"_index":329,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["make",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":1207,"title":{},"body":{"index.html":{}}}],["making",{"_index":1218,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["manipulate",{"_index":629,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["map(this.serialize.bind(this",{"_index":195,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["margin",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["master",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["matched",{"_index":544,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["matching",{"_index":200,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":403,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["means",{"_index":319,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["mention",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1272,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1027,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merging",{"_index":495,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["metadata",{"_index":219,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["method",{"_index":255,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["methods",{"_index":33,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{}}}],["milliseconds",{"_index":308,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["misalignment",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1188,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1228,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"changelog.html":{}}}],["model/query",{"_index":394,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{}}}],["modify",{"_index":1248,"title":{},"body":{"license.html":{}}}],["module",{"_index":567,"title":{"modules/QueryParamModule.html":{}},"body":{"changelog.html":{},"overview.html":{}}}],["modules",{"_index":569,"title":{"modules.html":{}},"body":{"modules/QueryParamModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":576,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["moment",{"_index":1227,"title":{},"body":{"index.html":{}}}],["more",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":309,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["multi",{"_index":186,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["multi:true",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":295,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["multiqueryparam",{"_index":12,"title":{"classes/MultiQueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["multiqueryparam(urlparam",{"_index":410,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["multiqueryparamopts",{"_index":109,"title":{"interfaces/MultiQueryParamOpts.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{}}}],["multiselectcontrolvalueaccessordirective",{"_index":581,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["multiselectoptiondirective",{"_index":582,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["name",{"_index":44,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.directive",{"_index":549,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["name.directive.ts",{"_index":599,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:24",{"_index":601,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name.directive.ts:27",{"_index":600,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["name]{@link",{"_index":603,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange",{"_index":607,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange.currentvalue",{"_index":611,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["namechange.firstchange",{"_index":609,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["names",{"_index":343,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["naming",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["navigate(queryparams",{"_index":634,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["navigating",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":614,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["navigations",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":114,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":982,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":221,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngmodule",{"_index":577,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["ngonchanges(changes",{"_index":445,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngondestroy",{"_index":454,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["ngqp",{"_index":250,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["ngqp.io",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["ngqp/core",{"_index":1030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngqp_router_adapter",{"_index":590,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{}}}],["ngqp_router_options",{"_index":591,"title":{},"body":{"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["non",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["noninfringement",{"_index":1276,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["noscript",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["notable",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":83,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["notice",{"_index":1261,"title":{},"body":{"license.html":{}}}],["notifychange",{"_index":225,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifychange(value",{"_index":251,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["notifytouched",{"_index":226,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["now",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":54,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":53,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["numbercontrolvalueaccessor",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["numbercontrolvalueaccessordirective",{"_index":583,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["numberparam",{"_index":361,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["numberparam(urlparam",{"_index":378,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["numericparam",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":472,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.keys(this.queryparams).foreach(queryparamname",{"_index":530,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.keys(value).foreach(queryparamname",{"_index":531,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["object.values(this.queryparams).foreach(queryparam",{"_index":520,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["observable",{"_index":77,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{}}}],["obtaining",{"_index":1239,"title":{},"body":{"license.html":{}}}],["occur",{"_index":506,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["once",{"_index":296,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["onchangefunction",{"_index":105,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["onchanges",{"_index":423,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["ondestroy",{"_index":424,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["one",{"_index":471,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["oninit",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["onlyself",{"_index":156,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["option",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":46,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":15,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["opts",{"_index":38,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"miscellaneous/functions.html":{}}}],["opts.emitevent",{"_index":163,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["opts.emitmodeltoviewchange",{"_index":159,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["opts.multi",{"_index":396,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["opts.onlyself",{"_index":166,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["opts.ts",{"_index":292,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["order",{"_index":627,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["otherwise",{"_index":1286,"title":{},"body":{"license.html":{}}}],["out",{"_index":1288,"title":{},"body":{"license.html":{}}}],["outer",{"_index":420,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["output",{"_index":260,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('controlvaluechange",{"_index":264,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["output('disabledchange",{"_index":265,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outputs",{"_index":227,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["outside",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["overflows",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["overriding",{"_index":375,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["overview",{"_index":1291,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":510,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["package",{"_index":1182,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":337,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"index.html":{}}}],["pages",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["pageview",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["pagination",{"_index":338,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["param",{"_index":107,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["param(urlparam",{"_index":380,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["param.directive.ts",{"_index":414,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["param.directive.ts:26",{"_index":430,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["param.directive.ts:35",{"_index":428,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["param.module.ts",{"_index":570,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["param.module.ts:61",{"_index":574,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["param.ts",{"_index":7,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["param.ts:113",{"_index":89,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:157",{"_index":347,"title":{},"body":{"classes/QueryParam.html":{}}}],["param.ts:189",{"_index":279,"title":{},"body":{"classes/MultiQueryParam.html":{}}}],["param.ts:22",{"_index":79,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:27",{"_index":75,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:36",{"_index":62,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:39",{"_index":61,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:42",{"_index":57,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:45",{"_index":55,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:48",{"_index":59,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:51",{"_index":52,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:54",{"_index":48,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["param.ts:57",{"_index":41,"title":{},"body":{"classes/AbstractQueryParam.html":{}}}],["paramchange",{"_index":446,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["paramchange.currentvalue",{"_index":451,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["paramcombinator",{"_index":47,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["paramdeserializer",{"_index":56,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter",{"_index":63,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parameter's",{"_index":14,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["parammap",{"_index":622,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["params",{"_index":623,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["paramserializer",{"_index":60,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["parent",{"_index":115,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamNameDirective.html":{}}}],["parmas",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1274,"title":{},"body":{"license.html":{}}}],["pass",{"_index":371,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["passed",{"_index":305,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["passing",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["patchvalue",{"_index":465,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["patchvalue(value",{"_index":492,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["path",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["peer",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1233,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1255,"title":{},"body":{"license.html":{}}}],["person",{"_index":1238,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1256,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":235,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["phrasing",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["pick",{"_index":637,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["pin",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":547,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["please",{"_index":1226,"title":{},"body":{"index.html":{}}}],["png",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1265,"title":{},"body":{"license.html":{}}}],["preservefragment",{"_index":619,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":370,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["private",{"_index":112,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["process",{"_index":546,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["programmatic",{"_index":312,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["project",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":635,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["propagation",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["proper",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":22,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["property",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":121,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":497,"title":{},"body":{"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":397,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["providers",{"_index":220,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["provides",{"_index":207,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"injectables/QueryParamBuilder.html":{}}}],["proxying",{"_index":214,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["public",{"_index":23,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["publish",{"_index":1249,"title":{},"body":{"license.html":{}}}],["published",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1275,"title":{},"body":{"license.html":{}}}],["push",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["pwa",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["q",{"_index":69,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["query",{"_index":67,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"index.html":{}}}],["queryparam",{"_index":11,"title":{"classes/QueryParam.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["queryparam#urlparam",{"_index":604,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["queryparam(group",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["queryparam(urlparam",{"_index":411,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparam._clearchangefunctions",{"_index":528,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparam._setparent(this",{"_index":521,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparam.setvalue(value",{"_index":533,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparamaccessor",{"_index":422,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparamadded",{"_index":516,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparambuilder",{"_index":349,"title":{"injectables/QueryParamBuilder.html":{}},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamdirective",{"_index":412,"title":{"directives/QueryParamDirective.html":{}},"body":{"directives/QueryParamDirective.html":{},"modules/QueryParamModule.html":{},"changelog.html":{}}}],["queryparamgroup",{"_index":73,"title":{"classes/QueryParamGroup.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamgroup#add",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["queryparamgroup#valuechanges",{"_index":529,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["queryparamgroup(queryparams",{"_index":408,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queryparamgroupdirective",{"_index":538,"title":{"directives/QueryParamGroupDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{}}}],["queryparamgroupservice",{"_index":425,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparammap",{"_index":633,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["queryparammodule",{"_index":568,"title":{"modules/QueryParamModule.html":{}},"body":{"modules/QueryParamModule.html":{},"modules.html":{}}}],["queryparamname",{"_index":483,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["queryparamnamedirective",{"_index":543,"title":{"directives/QueryParamNameDirective.html":{}},"body":{"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{}}}],["queryparamopts",{"_index":50,"title":{"interfaces/QueryParamOpts.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["queryparamopts#emptyon",{"_index":324,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["queryparamoptsbase",{"_index":39,"title":{"interfaces/QueryParamOptsBase.html":{}},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["queryparamoptsinput",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["queryparams",{"_index":374,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{}}}],["queryparam}s",{"_index":399,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["queue",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["quick",{"_index":1220,"title":{},"body":{"index.html":{}}}],["rangecontrolvalueaccessor",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["rangecontrolvalueaccessordirective",{"_index":584,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["raw",{"_index":342,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["read",{"_index":628,"title":{},"body":{"interfaces/RouterOptions.html":{},"index.html":{}}}],["readme",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["received",{"_index":126,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["recommended",{"_index":358,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["record",{"_index":493,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["recursion",{"_index":346,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["refer",{"_index":602,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["reference",{"_index":484,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["registeronchange(fn",{"_index":273,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registerontouched(fn",{"_index":276,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["registry",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["remains",{"_index":500,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["remove",{"_index":466,"title":{},"body":{"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["remove(queryparamname",{"_index":502,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["removed",{"_index":323,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["removes",{"_index":504,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["rename",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["replaceurl",{"_index":620,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["reported",{"_index":507,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["representation",{"_index":179,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["represented",{"_index":298,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":66,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["require",{"_index":777,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":185,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{}}}],["requiring",{"_index":419,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["resemble",{"_index":1217,"title":{},"body":{"index.html":{}}}],["reset",{"_index":336,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["respective",{"_index":498,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["responsive",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["responsiveness",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1244,"title":{},"body":{"license.html":{}}}],["result",{"_index":199,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":201,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":491,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["retrieves",{"_index":487,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["return",{"_index":189,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["returning",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"miscellaneous/functions.html":{}}}],["reword",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["rework",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1247,"title":{},"body":{"license.html":{}}}],["root",{"_index":398,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["router",{"_index":300,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["router#navigate",{"_index":618,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["routeradapter",{"_index":632,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["routeroptions",{"_index":367,"title":{"interfaces/RouterOptions.html":{}},"body":{"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":345,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["runtime",{"_index":558,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["rxjs",{"_index":98,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/RouterOptions.html":{},"dependencies.html":{}}}],["same",{"_index":407,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sanitize=true",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["schematics",{"_index":853,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["screens",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["scrolling",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":49,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["selectcontrolvalueaccessordirective",{"_index":585,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selection",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["selectoptiondirective",{"_index":586,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["selector",{"_index":224,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["selectvalueaccessor",{"_index":437,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["selectvalueaccessor(valueaccessors",{"_index":443,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["self",{"_index":433,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["sell",{"_index":1253,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":19,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["serialized",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["serializer",{"_index":306,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["serializers",{"_index":344,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["serializevalue(value",{"_index":148,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["serializing",{"_index":139,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["serves",{"_index":176,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["service",{"_index":353,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["set",{"_index":297,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["setdisabledstate",{"_index":248,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["setdisabledstate(isdisabled",{"_index":277,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["sets",{"_index":496,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["settings",{"_index":1213,"title":{},"body":{"index.html":{}}}],["setvalue",{"_index":34,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["setvalue(undefinedtonull(value",{"_index":535,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["setvalue(value",{"_index":87,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["shall",{"_index":1262,"title":{},"body":{"license.html":{}}}],["shebang",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":332,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"miscellaneous/typealiases.html":{}}}],["simple",{"_index":356,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["simplechanges",{"_index":434,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["simply",{"_index":616,"title":{},"body":{"interfaces/RouterOptions.html":{}}}],["single",{"_index":174,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["skeleton",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1240,"title":{},"body":{"license.html":{}}}],["sort",{"_index":340,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{}}}],["spec",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["spec\\.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":488,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["split",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["src/.../query",{"_index":1197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../router",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../serializers.ts",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1295,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/directives/control",{"_index":205,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["src/lib/directives/query",{"_index":413,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["src/lib/model/query",{"_index":6,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["src/lib/query",{"_index":351,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"modules/QueryParamModule.html":{},"miscellaneous/functions.html":{}}}],["src/lib/router",{"_index":612,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/serializers.ts",{"_index":1198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/types.ts",{"_index":1296,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/test.ts",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1221,"title":{},"body":{"index.html":{}}}],["started",{"_index":615,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{}}}],["state",{"_index":242,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{}}}],["static",{"_index":571,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["string",{"_index":37,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringparam",{"_index":362,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["stringparam(urlparam",{"_index":383,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["styling",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":97,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"license.html":{}}}],["sublicense",{"_index":1251,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1264,"title":{},"body":{"license.html":{}}}],["success",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["such",{"_index":460,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["super(urlparam",{"_index":187,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["supplied",{"_index":564,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["support",{"_index":669,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["supported",{"_index":559,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["svg",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":463,"title":{},"body":{"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{}}}],["synchronize",{"_index":93,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{},"index.html":{}}}],["syntax",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["synthetic",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":58,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["table",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":294,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"directives/QueryParamGroupDirective.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"index.html":{}}}],["takes",{"_index":322,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["targets",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["testrouteradapter#navigate",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":314,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["this._queryparamadded$.asobservable",{"_index":517,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._queryparamadded$.next(queryparamname",{"_index":525,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._updatevalue(opts",{"_index":534,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this._valuechanges.asobservable",{"_index":78,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this._valuechanges.next(this.value",{"_index":164,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions",{"_index":153,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions.foreach(changefn",{"_index":161,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.changefunctions.push(fn",{"_index":151,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["this.combinewith",{"_index":146,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.comparewith",{"_index":145,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.controlvaluechange.emit(value",{"_index":272,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.debouncetime",{"_index":143,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.deserialize",{"_index":140,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.deserialize(value",{"_index":191,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.disabledchange.emit(isdisabled",{"_index":278,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.emptyon",{"_index":144,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.fnchange",{"_index":274,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fnchange(value",{"_index":269,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.fntouched",{"_index":270,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["this.get(queryparamname",{"_index":522,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this.group.add(this.name",{"_index":452,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.group.get(this.name",{"_index":448,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.group.remove(this.name",{"_index":450,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.groupservice",{"_index":455,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.deregisterqueryparamdirective(namechange.previousvalue",{"_index":610,"title":{},"body":{"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.deregisterqueryparamdirective(this.name",{"_index":449,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.registerqueryparamdirective(this",{"_index":453,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["this.groupservice.setqueryparamgroup(queryparamgroup",{"_index":566,"title":{},"body":{"directives/QueryParamGroupDirective.html":{}}}],["this.groupservice.setqueryparamgroup(this.group",{"_index":444,"title":{},"body":{"directives/QueryParamDirective.html":{}}}],["this.parent",{"_index":169,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.parent._updatevalue",{"_index":167,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.queryparams",{"_index":518,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this.routeroptions",{"_index":519,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["this.serialize",{"_index":136,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.serialize(value",{"_index":190,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.urlparam",{"_index":135,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.value",{"_index":158,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["this.valueaccessor",{"_index":442,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["through",{"_index":216,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["throw",{"_index":119,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"directives/QueryParamNameDirective.html":{},"changelog.html":{}}}],["tick",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":302,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{}}}],["toc",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":402,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["together",{"_index":459,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["token",{"_index":640,"title":{},"body":{"interfaces/RouterOptions.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1285,"title":{},"body":{"license.html":{}}}],["touched",{"_index":258,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["track",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["tracking",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["traditional",{"_index":1299,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["travis",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":482,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["trigger",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":194,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["tsconfig",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":406,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":45,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{},"directives/QueryParamGroupDirective.html":{},"modules/QueryParamModule.html":{},"directives/QueryParamNameDirective.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["typealiases",{"_index":1293,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":193,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["types",{"_index":106,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["typing",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["typo",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["unaware",{"_index":16,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["unchanged",{"_index":501,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["undefined",{"_index":129,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["undefinedtonull",{"_index":514,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["under",{"_index":478,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["unique",{"_index":401,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["unit",{"_index":457,"title":{},"body":{"classes/QueryParamGroup.html":{}}}],["unnecessary",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["unrelated",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":86,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["up",{"_index":92,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["update",{"_index":240,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["updated",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":90,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["url",{"_index":65,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["urlparam",{"_index":30,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["use",{"_index":565,"title":{},"body":{"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":596,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["used",{"_index":64,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"interfaces/RouterOptions.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["useexisting",{"_index":222,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["useful",{"_index":313,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["user",{"_index":259,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["usevalue",{"_index":597,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["using",{"_index":372,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"directives/QueryParamGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["util",{"_index":104,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["utilities",{"_index":1051,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["validate",{"_index":405,"title":{},"body":{"injectables/QueryParamBuilder.html":{},"changelog.html":{}}}],["value",{"_index":31,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"injectables/QueryParamBuilder.html":{},"classes/QueryParamGroup.html":{},"modules/QueryParamModule.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":196,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["value.map(this.deserialize.bind(this",{"_index":198,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["valueaccessor",{"_index":440,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["valueaccessors",{"_index":427,"title":{},"body":{"directives/QueryParamDirective.html":{},"directives/QueryParamNameDirective.html":{}}}],["valuechanges",{"_index":32,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"changelog.html":{}}}],["values",{"_index":20,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"interfaces/MultiQueryParamOpts.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["variables",{"_index":1303,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versa",{"_index":321,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["version",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["vice",{"_index":320,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["view",{"_index":234,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"index.html":{}}}],["void",{"_index":95,"title":{},"body":{"classes/AbstractQueryParam.html":{},"directives/ControlValueAccessorDirective.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"directives/QueryParamDirective.html":{},"classes/QueryParamGroup.html":{}}}],["wait",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1271,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1266,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":359,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["website",{"_index":631,"title":{},"body":{"interfaces/RouterOptions.html":{},"changelog.html":{}}}],["whenever",{"_index":81,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{},"classes/QueryParamGroup.html":{}}}],["whether",{"_index":293,"title":{},"body":{"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{},"license.html":{}}}],["widget",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["wired",{"_index":91,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["withconfig",{"_index":572,"title":{},"body":{"modules/QueryParamModule.html":{},"changelog.html":{}}}],["withconfig(config",{"_index":573,"title":{},"body":{"modules/QueryParamModule.html":{}}}],["without",{"_index":418,"title":{},"body":{"directives/QueryParamDirective.html":{},"license.html":{}}}],["wording",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":808,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["wrap",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["wraptrycatch",{"_index":103,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["wraptrycatch(deserialize",{"_index":141,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["wraptrycatch(serialize",{"_index":137,"title":{},"body":{"classes/AbstractQueryParam.html":{},"classes/MultiQueryParam.html":{},"classes/QueryParam.html":{}}}],["write",{"_index":253,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"changelog.html":{}}}],["writevalue",{"_index":237,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["writevalue(value",{"_index":271,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{}}}],["written",{"_index":233,"title":{},"body":{"directives/ControlValueAccessorDirective.html":{},"interfaces/MultiQueryParamOpts.html":{},"interfaces/QueryParamOpts.html":{},"interfaces/QueryParamOptsBase.html":{}}}],["x",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["xxxparam",{"_index":373,"title":{},"body":{"injectables/QueryParamBuilder.html":{}}}],["yarn",{"_index":1132,"title":{},"body":{"changelog.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractQueryParam.html":{"url":"classes/AbstractQueryParam.html","title":"class - AbstractQueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base for QueryParam and MultiQueryParam.\nThis base class holds most of the parameter's options, but is unaware of\nhow to actually (de-)serialize any values.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: QueryParamOptsBase)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        QueryParamOptsBase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:54\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:51\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:45\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:42\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:48\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:39\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:36\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:27\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:22\n                            \n                        \n\n                \n                    \n                        Emits the current value of this parameter whenever it changes.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param.ts:113\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** @internal */\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlValueAccessorDirective.html":{"url":"directives/ControlValueAccessorDirective.html","title":"directive - ControlValueAccessorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ControlValueAccessorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                Provides an ad-hoc ControlValueAccessor to a component.\nThis directive provides a ControlValueAccessor for the host on which it is applied\nby proxying the required interface through events and an API.\n \n \n            \n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorDirective), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [controlValueAccessor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifyChange\n                            \n                            \n                                    Public\n                                notifyTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlValueChange\n                            \n                            \n                                disabledChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        controlValueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/control-value-accessor.directive.ts:38\n                            \n                        \n                \n                    \n                        Fired when a value should be written (model -> view).\nFrom the ControlValueAccessor perspective, this is the equivalent of\nwriteValue. You should bind to this event and update your component's\nstate with the given value.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabledChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/control-value-accessor.directive.ts:49\n                            \n                        \n                \n                    \n                        Fired when the control's disabled change should change.\nFrom the ControlValueAccessor perspective, this is the equivalent of\nsetDisabledState.\nThis is currently not used by ngqp.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifyChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyChange(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/control-value-accessor.directive.ts:60\n                \n            \n\n\n            \n                \n                    Write a new value to the model (view -> model)\nWhen your component's value changes, call this method to inform\nthe model about the change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifyTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/directives/control-value-accessor.directive.ts:69\n                \n            \n\n\n            \n                \n                    Inform that the component has been touched by the user.\nThis is currently not used by ngqp.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Provides an ad-hoc ControlValueAccessor to a component.\n *\n * This directive provides a ControlValueAccessor for the host on which it is applied\n * by proxying the required interface through events and an API.\n *\n *\n *     \n *     \n */\n@Directive({\n    selector: '[controlValueAccessor]',\n    exportAs: 'controlValueAccessor',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ControlValueAccessorDirective),\n            multi: true\n        }\n    ],\n})\nexport class ControlValueAccessorDirective implements ControlValueAccessor {\n\n    /**\n     * Fired when a value should be written (model -> view).\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * writeValue. You should bind to this event and update your component's\n     * state with the given value.\n     */\n    @Output('controlValueChange')\n    public controlValueChange = new EventEmitter();\n\n    /**\n     * Fired when the control's disabled change should change.\n     *\n     * From the ControlValueAccessor perspective, this is the equivalent of\n     * setDisabledState.\n     *\n     * This is currently not used by ngqp.\n     */\n    @Output('disabledChange')\n    public disabledChange = new EventEmitter();\n\n    private fnChange = (_: T) => {};\n    private fnTouched = () => {};\n\n    /**\n     * Write a new value to the model (view -> model)\n     *\n     * When your component's value changes, call this method to inform\n     * the model about the change.\n     */\n    public notifyChange(value: T): void {\n        this.fnChange(value);\n    }\n\n    /**\n     * Inform that the component has been touched by the user.\n     *\n     * This is currently not used by ngqp.\n     */\n    public notifyTouched(): void {\n        this.fnTouched();\n    }\n\n    /** @internal */\n    public writeValue(value: T) {\n        this.controlValueChange.emit(value);\n    }\n\n    /** @internal */\n    public registerOnChange(fn: (value: T) => any) {\n        this.fnChange = fn;\n    }\n\n    /** @internal */\n    public registerOnTouched(fn: () => any) {\n        this.fnTouched = fn;\n    }\n\n    /** @internal */\n    public setDisabledState(isDisabled: boolean) {\n        this.disabledChange.emit(isDisabled);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiQueryParam.html":{"url":"classes/MultiQueryParam.html","title":"class - MultiQueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiQueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Like QueryParam, but for array-typed parameters\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractQueryParam\n            \n\n            \n                Implements\n            \n            \n                        Required\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: MultiQueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:189\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    MultiQueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:189\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:54\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:51\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:45\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:42\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:48\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:39\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:36\n\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:27\n\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:22\n\n                            \n                        \n\n                \n                    \n                        Emits the current value of this parameter whenever it changes.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractQueryParam\n\n                \n            \n            \n                \n                        Defined in         AbstractQueryParam:113\n\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** @internal */\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiQueryParamOpts.html":{"url":"interfaces/MultiQueryParamOpts.html","title":"interface - MultiQueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiQueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                See QueryParamOpts. \n\n            \n\n            \n                Extends\n            \n            \n                        QueryParamOptsBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        multi\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Whether this parameter can take on multiple values at once.\nIf set to true, this parameter is array-typed. How this is represented\non the URL is defined by the Angular Router, which defines the parameter\nmultiple times, e.g. https://www.app.io?param=A&param=B&param=C.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParam.html":{"url":"classes/QueryParam.html","title":"class - QueryParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param.ts\n        \n\n            \n                Description\n            \n            \n                Describes a single parameter.\nThis is the description of a single parameter and essentially serves\nas the glue between its representation in the URL and its connection\nto a form control.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractQueryParam\n            \n\n            \n                Implements\n            \n            \n                        Required\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                multi\n                            \n                            \n                                    Public\n                                    Readonly\n                                combineWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                compareWith\n                            \n                            \n                                    Public\n                                    Readonly\n                                debounceTime\n                            \n                            \n                                    Public\n                                    Readonly\n                                deserialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                emptyOn\n                            \n                            \n                                    Public\n                                    Readonly\n                                serialize\n                            \n                            \n                                    Public\n                                    Readonly\n                                urlParam\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlParam: string, opts: QueryParamOpts)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param.ts:157\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urlParam\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        QueryParamOpts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            multi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param.ts:157\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            combineWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamCombinator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:54\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            compareWith\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comparator\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:51\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            debounceTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:45\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            deserialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamDeserializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:42\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            emptyOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:48\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serialize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParamSerializer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:39\n\n                            \n                        \n\n                \n                    \n                        See QueryParamOpts. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            urlParam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:36\n\n                            \n                        \n\n                \n                    \n                        The name of the parameter to be used in the URL.\nThis represents the name of the query parameter which will be\nused in the URL (e.g., ?q=), which differs from the name of\nthe QueryParam model used inside QueryParamGroup.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:27\n\n                            \n                        \n\n                \n                    \n                        The current value of this parameter.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractQueryParam\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractQueryParam:22\n\n                            \n                        \n\n                \n                    \n                        Emits the current value of this parameter whenever it changes.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: T | null, opts: literal type)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractQueryParam\n\n                \n            \n            \n                \n                        Defined in         AbstractQueryParam:113\n\n                \n            \n\n\n            \n                \n                    Updates the value of this parameter.\nIf wired up with a QueryParamGroup, this will also synchronize\nthe value to the URL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { areEqualUsing, isFunction, isMissing, isPresent, wrapTryCatch } from '../util';\nimport { Comparator, OnChangeFunction, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\nimport { QueryParamGroup } from './query-param-group';\nimport { MultiQueryParamOpts, QueryParamOpts, QueryParamOptsBase } from './query-param-opts';\n\n/**\n * Abstract base for {@link QueryParam} and {@link MultiQueryParam}.\n *\n * This base class holds most of the parameter's options, but is unaware of\n * how to actually (de-)serialize any values.\n */\nexport abstract class AbstractQueryParam {\n\n    private _valueChanges = new Subject();\n\n    /**\n     * Emits the current value of this parameter whenever it changes.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable = this._valueChanges.asObservable();\n\n    /**\n     * The current value of this parameter.\n     */\n    public value: T = null;\n\n    /**\n     * The name of the parameter to be used in the URL.\n     *\n     * This represents the name of the query parameter which will be\n     * used in the URL (e.g., `?q=`), which differs from the name of\n     * the {@link QueryParam} model used inside {@link QueryParamGroup}.\n     */\n    public readonly urlParam: string;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly serialize: ParamSerializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly deserialize: ParamDeserializer;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly debounceTime: number | null;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly emptyOn: T;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly compareWith: Comparator;\n\n    /** See {@link QueryParamOpts}. */\n    public readonly combineWith: ParamCombinator;\n\n    private parent: QueryParamGroup;\n    private changeFunctions: OnChangeFunction[] = [];\n\n    constructor(urlParam: string, opts: QueryParamOptsBase = {}) {\n        const { serialize, deserialize, debounceTime, compareWith, emptyOn, combineWith } = opts;\n\n        if (isMissing(urlParam)) {\n            throw new Error(`Please provide a URL parameter name for each query parameter.`);\n        }\n\n        if (!isFunction(serialize)) {\n            throw new Error(`serialize must be a function, but received ${serialize}`);\n        }\n\n        if (!isFunction(deserialize)) {\n            throw new Error(`deserialize must be a function, but received ${deserialize}`);\n        }\n\n        if (emptyOn !== undefined && !isFunction(compareWith)) {\n            throw new Error(`compareWith must be a function, but received ${compareWith}`);\n        }\n\n        if (isPresent(combineWith) && !isFunction(combineWith)) {\n            throw new Error(`combineWith must be a function, but received ${combineWith}`);\n        }\n\n        this.urlParam = urlParam;\n        this.serialize = wrapTryCatch(serialize, `Error while serializing value for ${this.urlParam}`);\n        this.deserialize = wrapTryCatch(deserialize, `Error while deserializing value for ${this.urlParam}`);\n        this.debounceTime = debounceTime;\n        this.emptyOn = emptyOn;\n        this.compareWith = compareWith;\n        this.combineWith = combineWith;\n    }\n\n    /** @internal */\n    public abstract serializeValue(value: T): string | string[];\n\n    /** @internal */\n    public abstract deserializeValue(value: string | string[]): T;\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** @internal */\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    /**\n     * Updates the value of this parameter.\n     *\n     * If wired up with a {@link QueryParamGroup}, this will also synchronize\n     * the value to the URL.\n     */\n    public setValue(value: T | null, opts: {\n        emitEvent?: boolean,\n        onlySelf?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        this.value = value;\n\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n\n        if (isPresent(this.parent) && !opts.onlySelf) {\n            this.parent._updateValue({\n                emitEvent: opts.emitEvent,\n                emitModelToViewChange: false,\n            });\n        }\n    }\n\n    /** @internal */\n    public _setParent(parent: QueryParamGroup): void {\n        if (this.parent) {\n            throw new Error(`Parameter already belongs to a QueryParamGroup.`);\n        }\n\n        this.parent = parent;\n    }\n\n}\n\n/**\n * Describes a single parameter.\n *\n * This is the description of a single parameter and essentially serves\n * as the glue between its representation in the URL and its connection\n * to a form control.\n */\nexport class QueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = false;\n\n    constructor(urlParam: string, opts: QueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T): string {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return this.serialize(value);\n    }\n\n    /** @internal */\n    public deserializeValue(value: string): T {\n        if (this.emptyOn !== undefined && value === null) {\n            return this.emptyOn;\n        }\n\n        return this.deserialize(value);\n    }\n\n}\n\n/**\n * Like {@link QueryParam}, but for array-typed parameters\n */\nexport class MultiQueryParam extends AbstractQueryParam implements Required>> {\n\n    /** See {@link QueryParamOpts}. */\n    public readonly multi = true;\n\n    constructor(urlParam: string, opts: MultiQueryParamOpts) {\n        super(urlParam, opts);\n    }\n\n    /** @internal */\n    public serializeValue(value: T[]): string[] {\n        if (this.emptyOn !== undefined && areEqualUsing(value, this.emptyOn, this.compareWith)) {\n            return null;\n        }\n\n        return (value || []).map(this.serialize.bind(this));\n    }\n\n    /** @internal */\n    public deserializeValue(value: string[]): T[] {\n        if (this.emptyOn !== undefined && value.length === 0) {\n            return this.emptyOn;\n        }\n\n        return value.map(this.deserialize.bind(this));\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryParamBuilder.html":{"url":"injectables/QueryParamBuilder.html","title":"injectable - QueryParamBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueryParamBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/query-param-builder.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to create parameters and groups.\nThis service provides a simple API to create QueryParamGroup and QueryParam\ninstances and is the recommended way to set them up.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                booleanParam\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                numberParam\n                            \n                            \n                                    Public\n                                param\n                            \n                            \n                                    Public\n                                stringParam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            booleanParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    booleanParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:112\n                \n            \n\n\n            \n                \n                    Create a new parameter of type boolean.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            group\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    group(queryParams: literal type, extras: RouterOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:41\n                \n            \n\n\n            \n                \n                    Creates a new QueryParamGroup.\nThis is the primary method to create a new group of parameters. Pass a list of\nQueryParam instances by using the xxxParam methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of {\n\n                                    \n                                \n                                \n                                    extras\n                                    \n                                                RouterOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional parameters for this group, overriding global configuration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryParamGroup\n\n                    \n                    \n                        The new {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            numberParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    numberParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:85\n                \n            \n\n\n            \n                \n                    Create a new parameter of type number.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    param(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:139\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Create a new parameter for a complex type.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stringParam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stringParam(urlParam: string, opts: QueryParamOpts | MultiQueryParamOpts)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param-builder.service.ts:58\n                \n            \n\n\n            \n                \n                    Create a new parameter of type string.\nSee QueryParamOpts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    urlParam\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            QueryParamOpts | MultiQueryParamOpts\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n    DEFAULT_BOOLEAN_DESERIALIZER,\n    DEFAULT_BOOLEAN_SERIALIZER,\n    DEFAULT_NUMBER_DESERIALIZER,\n    DEFAULT_NUMBER_SERIALIZER,\n    DEFAULT_STRING_DESERIALIZER,\n    DEFAULT_STRING_SERIALIZER\n} from './serializers';\nimport { LOOSE_IDENTITY_COMPARATOR } from './util';\nimport { RouterOptions } from './router-adapter/router-adapter.interface';\nimport { MultiQueryParam, QueryParam } from './model/query-param';\nimport { QueryParamGroup } from './model/query-param-group';\nimport { MultiQueryParamOpts, QueryParamOpts } from './model/query-param-opts';\n\nfunction isMultiOpts(opts: QueryParamOpts | MultiQueryParamOpts): opts is MultiQueryParamOpts {\n    return opts.multi === true;\n}\n\n/**\n * Service to create parameters and groups.\n *\n * This service provides a simple API to create {@link QueryParamGroup} and {@link QueryParam}\n * instances and is the recommended way to set them up.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class QueryParamBuilder {\n\n    /**\n     * Creates a new {@link QueryParamGroup}.\n     *\n     * This is the primary method to create a new group of parameters. Pass a list of\n     * {@link QueryParam} instances by using the `xxxParam` methods.\n     *\n     * @param queryParams List of {@link QueryParam}s keyed by a unique name.\n     * @param extras Additional parameters for this group, overriding global configuration.\n     * @returns The new {@link QueryParamGroup}.\n     */\n    public group(\n        queryParams: { [ name: string ]: QueryParam | MultiQueryParam },\n        extras: RouterOptions = {}\n    ): QueryParamGroup {\n        // TODO Maybe we should first validate that no two queryParams defined the same \"param\".\n        return new QueryParamGroup(queryParams, extras);\n    }\n\n    /** @ignore */\n    public stringParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public stringParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `string`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public stringParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_STRING_SERIALIZER,\n            deserialize: DEFAULT_STRING_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public numberParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public numberParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `number`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public numberParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_NUMBER_SERIALIZER,\n            deserialize: DEFAULT_NUMBER_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public booleanParam(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public booleanParam(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter of type `boolean`.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public booleanParam(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            serialize: DEFAULT_BOOLEAN_SERIALIZER,\n            deserialize: DEFAULT_BOOLEAN_DESERIALIZER,\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n    /** @ignore */\n    public param(urlParam: string, opts: MultiQueryParamOpts): MultiQueryParam;\n    /** @ignore */\n    public param(urlParam: string, opts?: QueryParamOpts): QueryParam;\n    /**\n     * Create a new parameter for a complex type.\n     *\n     * See {@link QueryParamOpts}.\n     */\n    public param(\n        urlParam: string,\n        opts: QueryParamOpts | MultiQueryParamOpts = {}\n    ): QueryParam | MultiQueryParam {\n        opts = {\n            compareWith: LOOSE_IDENTITY_COMPARATOR,\n            ...opts,\n        };\n\n        if (isMultiOpts(opts)) {\n            return new MultiQueryParam(urlParam, opts);\n        } else {\n            return new QueryParam(urlParam, opts);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamDirective.html":{"url":"directives/QueryParamDirective.html","title":"directive - QueryParamDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParam to a component directly.\nThis directive accepts a QueryParam without requiring an outer QueryParamGroup.\nIt binds this parameter to the host component, which is required to have a [ControlValueAccessor]\nhttps://angular.io/api/forms/ControlValueAccessor.\n\n            \n\n            \n                Implements\n            \n            \n                            QueryParamAccessor\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                QueryParamGroupService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [queryParam]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParam\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: QueryParamGroupService, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/query-param.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                    QueryParamGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParam\n                    \n                \n                \n                    \n                        Type :         QueryParam\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param.directive.ts:26\n                            \n                        \n                \n                    \n                        The QueryParam to bind to the host component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnChanges, OnDestroy, Optional, Self, SimpleChanges } from '@angular/core';\nimport { QueryParamGroupService } from './query-param-group.service';\nimport { QueryParamAccessor } from './query-param-accessor.interface';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { selectValueAccessor } from '../accessors/util';\nimport { QueryParam } from '../model/query-param';\nimport { QueryParamGroup } from '../model/query-param-group';\n\n/**\n * Binds a {@link QueryParam} to a component directly.\n *\n * This directive accepts a {@link QueryParam} without requiring an outer {@link QueryParamGroup}.\n * It binds this parameter to the host component, which is required to have a [ControlValueAccessor]\n * {@link https://angular.io/api/forms/ControlValueAccessor}.\n */\n@Directive({\n    selector: '[queryParam]',\n    providers: [QueryParamGroupService],\n})\nexport class QueryParamDirective implements QueryParamAccessor, OnChanges, OnDestroy  {\n\n    /**\n     * The {@link QueryParam} to bind to the host component.\n     */\n    @Input('queryParam')\n    public queryParam: QueryParam;\n\n    /** @internal */\n    public readonly name = 'param';\n\n    /** @internal */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    /** @internal */\n    private group = new QueryParamGroup({});\n\n    constructor(\n        @Optional() private groupService: QueryParamGroupService,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        this.valueAccessor = selectValueAccessor(valueAccessors);\n        this.groupService.setQueryParamGroup(this.group);\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges): void {\n        const paramChange = changes['queryParam'];\n\n        if (paramChange) {\n            if (this.group.get(this.name)) {\n                this.groupService.deregisterQueryParamDirective(this.name);\n                this.group.remove(this.name);\n            }\n\n            if (paramChange.currentValue) {\n                this.group.add(this.name, paramChange.currentValue);\n                this.groupService.registerQueryParamDirective(this);\n            }\n        }\n    }\n\n    /** @ignore */\n    public ngOnDestroy(): void {\n        if (this.groupService) {\n            this.groupService.deregisterQueryParamDirective(this.name);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParamGroup.html":{"url":"classes/QueryParamGroup.html","title":"class - QueryParamGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParamGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-group.ts\n        \n\n            \n                Description\n            \n            \n                Groups multiple QueryParam instances to a single unit.\nThis \"bundles\" multiple parameters together such that changes can be emitted as a\ncomplete unit. Collecting parameters into a group is required for the synchronization\nto and from the URL.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                valueChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patchValue\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                setValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queryParams: literal type, extras: RouterOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/model/query-param-group.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extras\n                                                  \n                                                        \n                                                                        RouterOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            valueChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this._valueChanges.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/model/query-param-group.ts:28\n                            \n                        \n\n                \n                    \n                        Emits the values of all parameters in this group whenever at least one changes.\nThis observable emits an object keyed by the {@QueryParam} names where each key\ncarries the current value of the represented parameter. It emits whenever at least\none parameter's value is changed.\nNOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(queryParamName: string, queryParam: QueryParam | MultiQueryParam)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:91\n                \n            \n\n\n            \n                \n                    Adds a new QueryParam to this group.\nThis adds the parameter under the given name to this group. The current\nURL will be evaluated to synchronize its value initially. Afterwards\nit is treated just like any other parameter in this group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the parameter to reference it with.\n\n                                    \n                                \n                                \n                                    queryParam\n                                    \n                                            QueryParam | MultiQueryParam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new parameter to add.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(queryParamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:72\n                \n            \n\n\n            \n                \n                    Retrieves a specific QueryParam from this group by name.\nThis returns the QueryParam with the given name, or null\nif no parameter with that name is found in this group.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the parameter instance to retrieve.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryParam | MultiQueryParam | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchValue(value: Record, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:141\n                \n            \n\n\n            \n                \n                    Updates the value of this group by merging it in.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value remains unchanged.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        See {\n\n                                    \n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(queryParamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:109\n                \n            \n\n\n            \n                \n                    Removes a QueryParam from this group.\nThis removes the parameter defined by the provided name from this group.\nNo further synchronization with this parameter will occur and it will not\nbe reported in the value of this group anymore.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryParamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the parameter to remove.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: Record, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/model/query-param-group.ts:170\n                \n            \n\n\n            \n                \n                    Updates the value of this group by overwriting it.\nThis sets the value of each provided parameter to the respective provided\nvalue. If a parameter is not listed, its value is set to undefined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        See {\n\n                                    \n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/model/query-param-group.ts:125\n                                \n                            \n                    \n                        \n                                The current value of this group.\nSee QueryParamGroup for a description of the format of\nthe value.\n\n\n                                \n                                    Returns :     Record\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { isMissing, undefinedToNull } from '../util';\nimport { OnChangeFunction } from '../types';\nimport { MultiQueryParam, QueryParam } from './query-param';\nimport { RouterOptions } from '../router-adapter/router-adapter.interface';\n\n/**\n * Groups multiple {@link QueryParam} instances to a single unit.\n *\n * This \"bundles\" multiple parameters together such that changes can be emitted as a\n * complete unit. Collecting parameters into a group is required for the synchronization\n * to and from the URL.\n */\nexport class QueryParamGroup {\n\n    /** @internal */\n    private readonly _valueChanges = new Subject>();\n\n    /**\n     * Emits the values of all parameters in this group whenever at least one changes.\n     *\n     * This observable emits an object keyed by the {@QueryParam} names where each key\n     * carries the current value of the represented parameter. It emits whenever at least\n     * one parameter's value is changed.\n     *\n     * NOTE: This observable does not complete on its own, so ensure to unsubscribe from it.\n     */\n    public readonly valueChanges: Observable> = this._valueChanges.asObservable();\n\n    /** @internal */\n    private readonly _queryParamAdded$ = new Subject();\n\n    /** @internal */\n    public readonly queryParamAdded$: Observable = this._queryParamAdded$.asObservable();\n\n    /** @internal */\n    public readonly queryParams: { [ queryParamName: string ]: QueryParam | MultiQueryParam };\n\n    /** @internal */\n    public readonly routerOptions: RouterOptions;\n\n    private changeFunctions: OnChangeFunction>[] = [];\n\n    constructor(\n        queryParams: { [ queryParamName: string ]: QueryParam | MultiQueryParam },\n        extras: RouterOptions = {}\n    ) {\n        this.queryParams = queryParams;\n        this.routerOptions = extras;\n\n        Object.values(this.queryParams).forEach(queryParam => queryParam._setParent(this));\n    }\n\n    /** @internal */\n    public _registerOnChange(fn: OnChangeFunction>): void {\n        this.changeFunctions.push(fn);\n    }\n\n    /** @internal */\n    public _clearChangeFunctions(): void {\n        this.changeFunctions = [];\n    }\n\n    /**\n     * Retrieves a specific {@link QueryParam} from this group by name.\n     *\n     * This returns the {@link QueryParam} with the given name, or `null`\n     * if no parameter with that name is found in this group.\n     *\n     * @param queryParamName The name of the parameter instance to retrieve.\n     */\n    public get(queryParamName: string): QueryParam | MultiQueryParam | null {\n        const param = this.queryParams[ queryParamName ];\n        if (!param) {\n            return null;\n        }\n\n        return param;\n    }\n\n    /**\n     * Adds a new {@link QueryParam} to this group.\n     *\n     * This adds the parameter under the given name to this group. The current\n     * URL will be evaluated to synchronize its value initially. Afterwards\n     * it is treated just like any other parameter in this group.\n     *\n     * @param queryParamName Name of the parameter to reference it with.\n     * @param queryParam The new parameter to add.\n     */\n    public add(queryParamName: string, queryParam: QueryParam | MultiQueryParam): void {\n        if (this.get(queryParamName)) {\n            throw new Error(`A parameter with name ${queryParamName} already exists.`);\n        }\n\n        this.queryParams[ queryParamName ] = queryParam;\n        this._queryParamAdded$.next(queryParamName);\n    }\n\n    /**\n     * Removes a {@link QueryParam} from this group.\n     *\n     * This removes the parameter defined by the provided name from this group.\n     * No further synchronization with this parameter will occur and it will not\n     * be reported in the value of this group anymore.\n     *\n     * @param queryParamName The name of the parameter to remove.\n     */\n    public remove(queryParamName: string): void {\n        const queryParam = this.get(queryParamName);\n        if (!queryParam) {\n            throw new Error(`No parameter with name ${queryParamName} found.`);\n        }\n\n        delete this.queryParams[ queryParamName ];\n        queryParam._clearChangeFunctions();\n    }\n\n    /**\n     * The current value of this group.\n     *\n     * See {@link QueryParamGroup#valueChanges} for a description of the format of\n     * the value.\n     */\n    public get value(): Record {\n        const value: Record = {};\n        Object.keys(this.queryParams).forEach(queryParamName => value[ queryParamName ] = this.queryParams[ queryParamName ].value);\n\n        return value;\n    }\n\n    /**\n     * Updates the value of this group by merging it in.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value remains unchanged.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public patchValue(value: Record, opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        Object.keys(value).forEach(queryParamName => {\n            const queryParam = this.queryParams[ queryParamName ];\n            if (isMissing(queryParam)) {\n                return;\n            }\n\n            queryParam.setValue(value[ queryParamName ], {\n                emitEvent: opts.emitEvent,\n                onlySelf: true,\n                emitModelToViewChange: false,\n            });\n        });\n\n        this._updateValue(opts);\n    }\n\n    /**\n     * Updates the value of this group by overwriting it.\n     *\n     * This sets the value of each provided parameter to the respective provided\n     * value. If a parameter is not listed, its value is set to `undefined`.\n     *\n     * @param value See {@link QueryParamGroup#valueChanges} for a description of the format.\n     * @param opts Additional options\n     */\n    public setValue(value: Record, opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        Object.keys(this.queryParams).forEach(queryParamName => {\n            this.queryParams[ queryParamName ].setValue(undefinedToNull(value[ queryParamName ]), {\n                emitEvent: opts.emitEvent,\n                onlySelf: true,\n                emitModelToViewChange: false,\n            });\n        });\n\n        this._updateValue(opts);\n    }\n\n    /** @internal */\n    public _updateValue(opts: {\n        emitEvent?: boolean,\n        emitModelToViewChange?: boolean,\n    } = {}): void {\n        if (opts.emitModelToViewChange !== false) {\n            this.changeFunctions.forEach(changeFn => changeFn(this.value));\n        }\n\n        if (opts.emitEvent !== false) {\n            this._valueChanges.next(this.value);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamGroupDirective.html":{"url":"directives/QueryParamGroupDirective.html","title":"directive - QueryParamGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParamGroup to a DOM element.\nThis directive accepts an instance of QueryParamGroup. Any child using\nQueryParamNameDirective will then be matched against this group, and the\nsynchronization process can take place.\n\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                QueryParamGroupService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [queryParamGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: QueryParamGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/query-param-group.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                    QueryParamGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamGroup\n                    \n                \n                \n                    \n                        Type :         QueryParamGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param-group.directive.ts:23\n                            \n                        \n                \n                    \n                        The QueryParamGroup to bind.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { QueryParamNameDirective } from './query-param-name.directive';\nimport { QueryParamGroup } from '../model/query-param-group';\nimport { QueryParamGroupService } from './query-param-group.service';\n\n/**\n * Binds a {@link QueryParamGroup} to a DOM element.\n *\n * This directive accepts an instance of {@link QueryParamGroup}. Any child using\n * {@link QueryParamNameDirective} will then be matched against this group, and the\n * synchronization process can take place.\n */\n@Directive({\n    selector: '[queryParamGroup]',\n    providers: [QueryParamGroupService],\n})\nexport class QueryParamGroupDirective implements OnChanges {\n\n    /**\n     * The {@link QueryParamGroup} to bind.\n     */\n    @Input('queryParamGroup')\n    public queryParamGroup: QueryParamGroup;\n\n    constructor(private groupService: QueryParamGroupService) {\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges) {\n        const groupChange = changes['queryParamGroup'];\n        if (groupChange) {\n            if (!groupChange.firstChange) {\n                throw new Error(`Binding a different QueryParamGroup during runtime is currently not supported.`);\n            }\n\n            const queryParamGroup = groupChange.currentValue;\n            if (!queryParamGroup) {\n                throw new Error(`You added the queryParamGroup directive, but haven't supplied a group to use.`);\n            }\n\n            this.groupService.setQueryParamGroup(queryParamGroup);\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryParamModule.html":{"url":"modules/QueryParamModule.html","title":"module - QueryParamModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryParamModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/query-param.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withConfig(config: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/query-param.module.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Type } from '@angular/core';\nimport {\n    ControlValueAccessorDirective,\n    QueryParamDirective,\n    QueryParamNameDirective,\n    QueryParamGroupDirective\n} from './directives/directives';\nimport {\n    CheckboxControlValueAccessorDirective,\n    DefaultControlValueAccessorDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective\n} from './accessors/accessors';\nimport {\n    DefaultRouterAdapter,\n    DefaultRouterOptions,\n    NGQP_ROUTER_ADAPTER,\n    NGQP_ROUTER_OPTIONS,\n    RouterOptions\n} from './router-adapter/router-adapter';\n\n/** @ignore */\nconst DIRECTIVES: Type[] = [\n    QueryParamDirective,\n    QueryParamNameDirective,\n    QueryParamGroupDirective,\n    ControlValueAccessorDirective,\n\n    // Accessors\n    DefaultControlValueAccessorDirective,\n    NumberControlValueAccessorDirective,\n    RangeControlValueAccessorDirective,\n    CheckboxControlValueAccessorDirective,\n    SelectControlValueAccessorDirective,\n    SelectOptionDirective,\n    MultiSelectControlValueAccessorDirective,\n    MultiSelectOptionDirective,\n];\n\n@NgModule({\n    imports: [],\n    declarations: [ DIRECTIVES ],\n    exports: [ DIRECTIVES ],\n    providers: [\n        {\n            provide: NGQP_ROUTER_ADAPTER,\n            useClass: DefaultRouterAdapter\n        },\n        {\n            provide: NGQP_ROUTER_OPTIONS,\n            useValue: DefaultRouterOptions,\n        },\n    ],\n})\nexport class QueryParamModule {\n\n    public static withConfig(config: { routerOptions?: RouterOptions } = {}): ModuleWithProviders {\n        return {\n            ngModule: QueryParamModule,\n            providers: [\n                {\n                    provide: NGQP_ROUTER_OPTIONS,\n                    useValue: {\n                        ...DefaultRouterOptions,\n                        ...config.routerOptions\n                    },\n                },\n            ],\n        };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryParamNameDirective.html":{"url":"directives/QueryParamNameDirective.html","title":"directive - QueryParamNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryParamNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/directives/query-param-name.directive.ts\n        \n\n            \n                Description\n            \n            \n                Binds a QueryParam to a DOM element.\nThis directive accepts the name of a QueryParam inside its parent QueryParamGroup.\nIt binds this parameter to the host element, which is required to have a [ControlValueAccessor]\nhttps://angular.io/api/forms/ControlValueAccessor.\n\n            \n\n            \n                Implements\n            \n            \n                            QueryParamAccessor\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [queryParamName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryParamName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: QueryParamGroupService, valueAccessors: ControlValueAccessor[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/directives/query-param-name.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                    QueryParamGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        valueAccessors\n                                                  \n                                                        \n                                                                    ControlValueAccessor[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryParamName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/directives/query-param-name.directive.ts:24\n                            \n                        \n                \n                    \n                        The name of the QueryParam inside its parent QueryParamGroup.\nNote that this does not refer to the parameter name.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Inject, Input, OnChanges, OnDestroy, Optional, Self, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { QueryParamGroupService } from './query-param-group.service';\nimport { QueryParamAccessor } from './query-param-accessor.interface';\nimport { selectValueAccessor } from '../accessors/util';\n\n/**\n * Binds a {@link QueryParam} to a DOM element.\n *\n * This directive accepts the name of a {@link QueryParam} inside its parent {@link QueryParamGroup}.\n * It binds this parameter to the host element, which is required to have a [ControlValueAccessor]\n * {@link https://angular.io/api/forms/ControlValueAccessor}.\n */\n@Directive({\n    selector: '[queryParamName]',\n})\nexport class QueryParamNameDirective implements QueryParamAccessor, OnChanges, OnDestroy {\n\n    /**\n     * The name of the {@link QueryParam} inside its parent {@link QueryParamGroup}.\n     * Note that this does not refer to the [parameter name]{@link QueryParam#urlParam}.\n     */\n    @Input('queryParamName')\n    public name: string;\n\n    /** @internal */\n    public valueAccessor: ControlValueAccessor | null = null;\n\n    constructor(\n        @Optional() private groupService: QueryParamGroupService,\n        @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\n    ) {\n        if (!this.groupService) {\n            throw new Error(`No parent configuration found. Did you forget to add [queryParamGroup]?`);\n        }\n\n        this.valueAccessor = selectValueAccessor(valueAccessors);\n    }\n\n    /** @ignore */\n    public ngOnChanges(changes: SimpleChanges) {\n        const nameChange = changes['name'];\n        if (nameChange) {\n            if (!nameChange.firstChange) {\n                this.groupService.deregisterQueryParamDirective(nameChange.previousValue);\n            }\n\n            if (nameChange.currentValue) {\n                this.groupService.registerQueryParamDirective(this);\n            }\n        }\n    }\n\n    /** @ignore */\n    public ngOnDestroy() {\n        if (this.groupService) {\n            this.groupService.deregisterQueryParamDirective(this.name);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOpts.html":{"url":"interfaces/QueryParamOpts.html","title":"interface - QueryParamOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                See QueryParamOpts. \n\n            \n\n            \n                Extends\n            \n            \n                        QueryParamOptsBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multi\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multi\n                                    \n                                \n                                \n                                    \n                                        multi:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    See MultiQueryParamOpts. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryParamOptsBase.html":{"url":"interfaces/QueryParamOptsBase.html","title":"interface - QueryParamOptsBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryParamOptsBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/model/query-param-opts.ts\n        \n\n            \n                Description\n            \n            \n                List of options which can be passed to QueryParam.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        combineWith\n                                \n                                \n                                            Optional\n                                        compareWith\n                                \n                                \n                                            Optional\n                                        debounceTime\n                                \n                                \n                                            Optional\n                                        deserialize\n                                \n                                \n                                            Optional\n                                        emptyOn\n                                \n                                \n                                            Optional\n                                        serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        combineWith\n                                    \n                                \n                                \n                                    \n                                        combineWith:         ParamCombinator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamCombinator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Execute a side effect on other query parameters.\nIf the value of this parameter changes, this function is invoked. It can return an\nadditional set of query parameters to change, e.g., to reset the current page in a\npagination when the direction in which to sort has been changed.\nNOTE: This function must return the raw query parameter names and values. No\n       (de-)serializers are run and no recursion is applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareWith\n                                    \n                                \n                                \n                                    \n                                        compareWith:         Comparator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comparator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The comparator to be used with QueryParamOpts.\nThis function will be used to determine whether the current value equals the defined\ndefault value. By default, a loose equals comparison is made (i.e., \"==\").\nSee Comparator.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debounceTime\n                                    \n                                \n                                \n                                    \n                                        debounceTime:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines, in milliseconds, how much changes to the value should be debounced.\nWhen set, a change of the parameter value coming from either the form control\nor a programmatic change will be debounced by the given value (in milliseconds).\nThis is useful for, e.g., text inputs.\nIf the value changes through a change of the URL, this debounce will not apply.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deserialize\n                                    \n                                \n                                \n                                    \n                                        deserialize:         ParamDeserializer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamDeserializer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The deserializer used for this parameter.\nSee ParamDeserializer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyOn\n                                    \n                                \n                                \n                                    \n                                        emptyOn:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default value of the parameter.\nIf set, the parameter will be considered to default to this value. This means\nthat if the parameter is not defined on the URL, this value will be written\nto the form control. Vice versa, if the form control takes on this value,\nthe URL parameter will be removed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serialize\n                                    \n                                \n                                \n                                    \n                                        serialize:         ParamSerializer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamSerializer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The serializer used for this parameter.\nSee ParamSerializer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Comparator, ParamCombinator, ParamDeserializer, ParamSerializer } from '../types';\n\n/**\n * List of options which can be passed to {@link QueryParam}.\n */\nexport interface QueryParamOptsBase {\n\n    /**\n     * The serializer used for this parameter.\n     *\n     * See {@link ParamSerializer}.\n     */\n    serialize?: ParamSerializer;\n\n    /**\n     * The deserializer used for this parameter.\n     *\n     * See {@link ParamDeserializer}.\n     */\n    deserialize?: ParamDeserializer;\n\n    /**\n     * Defines, in milliseconds, how much changes to the value should be debounced.\n     *\n     * When set, a change of the parameter value coming from either the form control\n     * or a programmatic change will be debounced by the given value (in milliseconds).\n     * This is useful for, e.g., text inputs.\n     *\n     * If the value changes through a change of the URL, this debounce will not apply.\n     */\n    debounceTime?: number | null;\n\n    /**\n     * Default value of the parameter.\n     *\n     * If set, the parameter will be considered to default to this value. This means\n     * that if the parameter is not defined on the URL, this value will be written\n     * to the form control. Vice versa, if the form control takes on this value,\n     * the URL parameter will be removed.\n     */\n    emptyOn?: T;\n\n    /**\n     * The comparator to be used with {@link QueryParamOpts#emptyOn}.\n     *\n     * This function will be used to determine whether the current value equals the defined\n     * default value. By default, a loose equals comparison is made (i.e., \"==\").\n     *\n     * See {@link Comparator}.\n     */\n    compareWith?: Comparator;\n\n    /**\n     * Execute a side effect on other query parameters.\n     *\n     * If the value of this parameter changes, this function is invoked. It can return an\n     * additional set of query parameters to change, e.g., to reset the current page in a\n     * pagination when the direction in which to sort has been changed.\n     *\n     * NOTE: This function must return the raw query parameter names and values. No\n     *       (de-)serializers are run and no recursion is applied.\n     */\n    combineWith?: ParamCombinator;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface QueryParamOpts extends QueryParamOptsBase {\n    /** See {@link MultiQueryParamOpts}. */\n    multi?: false;\n}\n\n/** See {@link QueryParamOpts}. */\nexport interface MultiQueryParamOpts extends QueryParamOptsBase {\n    /**\n     * Whether this parameter can take on multiple values at once.\n     *\n     * If set to true, this parameter is array-typed. How this is represented\n     * on the URL is defined by the Angular Router, which defines the parameter\n     * multiple times, e.g. `https://www.app.io?param=A&param=B&param=C`.\n     */\n    multi: true;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterOptions.html":{"url":"interfaces/RouterOptions.html","title":"interface - RouterOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/router-adapter/router-adapter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Options to be provided when a navigation is started to update the URL.\nThese options are simply forwarded to Router#navigate.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        preserveFragment\n                                \n                                \n                                            Optional\n                                        replaceUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFragment\n                                    \n                                \n                                \n                                    \n                                        preserveFragment:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replaceUrl\n                                    \n                                \n                                \n                                    \n                                        replaceUrl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Navigation, ParamMap, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n/**\n * Abstraction around the Angular Router used by ngqp in order to read from\n * or manipulate the URL.\n *\n * This abstraction only exists so we can provide a different adapter for the\n * examples on the website.\n *\n * @internal\n */\nexport interface RouterAdapter {\n\n    /** @internal */\n    url: string;\n\n    /** @internal */\n    queryParamMap: Observable;\n\n    /** @internal */\n    navigate(queryParams: Params, extras?: RouterOptions & { state?: any }): Promise;\n\n    /** @internal */\n    getCurrentNavigation(): Pick;\n\n}\n\n/**\n * Options to be provided when a navigation is started to update the URL.\n * These options are simply forwarded to Router#navigate.\n */\nexport interface RouterOptions {\n    replaceUrl?: boolean;\n    preserveFragment?: boolean;\n}\n\n/**\n * See {@link RouterOptions}.\n */\nexport const DefaultRouterOptions: RouterOptions = {\n    replaceUrl: true,\n    preserveFragment: true,\n};\n\n/** @internal */\nexport const NGQP_ROUTER_ADAPTER = new InjectionToken('NGQP_ROUTER_ADAPTER');\n\n/** Injection token to provide {@link RouterOptions}. */\nexport const NGQP_ROUTER_OPTIONS = new InjectionToken('NGQP_ROUTER_OPTIONS');\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.9.0 (2019-03-08)\nBug Fixes\n\ncore: Adjust name of variable (copy&paste error) (6420b9e)\ncore: Ignore changes in unrelated query parameters (32b080e), closes #81\ncore: Improve typing and support emptyOn for multi:true (0e28c35), closes #92 #27\ncore: Reword documentation (644cc20)\nother: Push only after release is published (ecf709e)\nother: Update commit guidelines (bcfd06e)\ntravis: Only trigger branch builds for master (a579a4a)\n\nFeatures\n\ncore: Added QueryParamDirective for standalone parameters (05b48ca)\ncore: Support changing the bound standalone parameter (f1cdfeb)\n\n\n0.8.0 (2019-02-09)\nBug Fixes\n\ncore: Do not synchronize detached parameters (1add8a8), closes #44\ncore: Fix typo in comment (2d8313b)\ndocs: Added documentation for QueryParamGroup #add / #remove (985a96b), closes #44\ndocs: Exclude test util from API docs (93a5281)\ntests: Added tests for QueryParamGroup#add / #remove (085d120), closes #44\n\nFeatures\n\ncore: Allow changing name for queryParamName directive. (ca6f87d), closes #44\ncore: Dynamically add or remove parameters (5c76c67), closes #44\n\n\n0.7.2 (2019-02-03)\nBug Fixes\n\ncore: Do not detect non-imperative navigations as synthetic (9e7fdb4), closes #73\n\n\n0.7.1 (2019-02-01)\nBug Fixes\n\ncore: Align event propagation with Forms API (0529276)\ncore: Rework event handling of QueryParam(Group) (a5f4d74), closes #67\ncore: Use queryParamName instead of urlParam (58a71a7)\n\n\n0.7.0 (2019-01-15)\nBug Fixes\n\ndocs: Fix duplicate fragment (00a5667)\n\nFeatures\n\ncore: New QueryParam creation syntax (98fe148)\ndocs: Added noscript (d33fa5d)\ndocs: Turn demo app into a PWA (f570513), closes #30\n\n\n0.6.0 (2019-01-13)\nBug Fixes\n\napi-docs: Remove GA ID (a6352fb)\ncore: Added internal documentation (6ade19d)\ncore: Deregister directive on destroy (3ab996d), closes #53\ncore: Handle errors in navigation queue (9dfaa92)\ncore: Improve cleanup behavior more (0633526)\ncore: Improve typings (962bc32)\ncore: Only console.log error in dev mode (ebc0d9d)\ncore: Only require compareWith if emptyOn is provided (d9f96e3)\ncore: Provide default comparator on custom params (96985ca), closes #59\ncore: Remove string shorthand syntax (3f30355), closes #63\ncore: Rename numericParam to numberParam (ee2c473), closes #62\ncore: Rename valueChanges to controLValueChanges (60ba6dd), closes #54\ncore: Support using the same queryParamName multiple times (1b74a5a)\ncore: Use OnChanges instead of OnInit (cc7a558), closes #52\ndemo: Don't debounce in the getting started example (60d8bd8), closes #57\ndocs: Don't track fragment navigation as pageview (73c58cf)\ndocs: Don't track unnecessary event (3d1a793)\ndocs: Global configuration typo (5229ba9)\ndocs: Remove API docs tracking since it doesn't work (448c51f)\ntests: Change test name (19d8180)\ntests: Don't export test components (e4ed111)\ntests: Pin versions due to broken @angular-devkit/schematics release (bbc9a66)\ntests: Remove spec tsconfig file from angular.json (de0d0e0)\n\nFeatures\n\ncore: Allow comparator to return a number (78c8c4e)\ncore: Allow passing preserveFragment (a94ccc6), closes #39\ndocs: Track events for interaction (1dfa9ba), closes #38\n\n\n0.5.1 (2019-01-06)\nBug Fixes\n\ncore: Allow combineWith returning null | undefined (3bfc1b0)\ncore: Do not serialize non-multi params into an array (bf6c355)\ncore: Don't expost \"adapter\" naming in API (e0e875b)\ncore: Export createEmptyOnDeserializer (ca45e43)\ncore: Improve typing definitions (0d509d0)\ncore: Remove typealias (bab1e45)\ncore: Removed QueryParamOptsInput (63f83a5)\ncore: Rename forRoot to withConfig and ensure defaults are set at least (0f0b48d), closes #41\ncore: Use interface instead of type alias (4de02a4), closes #40\ndocs: Exclude schematics from docs (e57e700), closes #45\ndocs: Fix heading level (f27f369)\ndocs: Fix linting error (2ea841b)\ndocs: Prevent line break in API docs link (17f368e)\ndocs: Remove URL entirely if no parmas are set (aba7bd1)\nREADME: Rework README (8c9d268)\n\n\n0.5.0 (2019-01-03)\nBug Fixes\n\ncore: Do not create an empty-on serializer if emptyOn wasn't given (f394fa6)\ncore: Fix list of built-in accessors (2e39369)\ncore: Remove customParam and replace it with param (60377e5)\ncore: Split accessors into one directive per file (a0bde9b)\ncore: Use correct param name in shorthand syntax (f526b61)\ncore: use multi property rather than checking value type (781f009)\ncore: Use proper type in accessor (5d90b63)\ndocs: Fix demo-browser in responsive case (bbaf6e4)\ndocs: Fix first TOC item (0f566ad)\ndocs: Fix fragment misalignment (f02d26d)\ndocs: Fix link to GitHub (2f2675e)\ndocs: Fix margin on fragment headings (07c103e)\ndocs: Fix overflows on small screens (e100621)\ndocs: Fix typo (c6b3a1e)\ndocs: Improve responsiveness of example (c6cd845)\ndocs: Make demo-browser content overflow if necessary (48f2da4)\ndocs: Remove GitHub button for now (aadad1b), closes #36\ndocs: Use PNG instead of SVG (cfa25df)\n\nFeatures\n\ndocs: Added Google Analytics (aea857a), closes #35\n\n\n0.4.2 (2018-12-30)\nBug Fixes\n\ndocs: Build API docs after demo project (dec2d0f)\n\n\n0.4.1 (2018-12-30)\nBug Fixes\n\ndocs: chmod +x script (21e44c1)\n\n\n0.4.0 (2018-12-30)\nBug Fixes\n\ncore: Fix select accessor which didn't write the value in some cases (91d4c8a)\ncore: Provide proper generic to ElementRef in accessors (35a48be)\ndocs: Make fragment scrolling work (5eea3ea)\ndocs: Phrasing (2bffb73)\ndocs: Remove line that was forgotten (466c39c)\nscripts: Push tags on release (63d6358)\n\nFeatures\n\ndocs: Added GitHub widget (0351f05)\ndocs: Skeleton for docs pages (5d65a55)\n\n\n0.3.2 (2018-12-27)\nBug Fixes\n\ncore: Do not consider undefined for emptyOn (91a75ba)\ndocs: Disable autocomplete in example (d1d0a1b)\n\n\n0.3.1 (2018-12-27)\nBug Fixes\n\nschematics: Fix schematics (82987c7)\n\n\n0.3.0 (2018-12-27)\nBug Fixes\n\ndemo: Remove console.log (3dd2028)\ndocs: Fix wording (6ebdc96)\ndocs: Improve demo-browser styling (52ec93a)\ndocs: Improve responsiveness of landing page (35bd383)\ndocs: Provide explanation of console elements in demo-browser (a746ac3)\ndocs: Update wording (79a340d)\nreadme: @ngqp -> ngqp (6481613)\nreadme: Mention \"ng add\" in instructions (bad6c06)\nschematics: Try to infer the correct version to install (5e0ab8b), closes #31\n\nFeatures\n\ndocs: Added benefits & attribution to ngx-bootstrap (a1997c7)\ndocs: Added first version of landing page (a0de621)\ndocs: Added installation guide (8037a39)\ndocs: Added versions table (397635d)\ndocs: Update to use new ngqp.io domain (da0f162)\n\n\n0.2.8 (2018-12-26)\nBug Fixes\n\nscripts: Explicitly add npm registry (5e2e50c)\n\n\n0.2.7 (2018-12-26)\n\n0.2.6 (2018-12-26)\nBug Fixes\n\nscripts: Clean up release targets (b706777)\nscripts: Make cd independent of command success (7ee98f3)\n\n\n0.2.5 (2018-12-26)\nBug Fixes\n\ncore: Fix deserialization on non-multi controls (4fdcfe1)\ndocs: Navigating by URL always needs to be non-merge (c4787a4)\ndocs: Remove unnecessary dependency to @ngqp/core from demo (76ad096)\nother: Copy README and LICENSE on release (04b2c8c)\nother: Deploy website on release (f837240)\nother: Fail on errors when building schematics (4865d5f)\nother: Improve release script (91cb7f7)\n\n\n0.2.4 (2018-12-25)\nBug Fixes\n\ncore: Set providers outside of forRoot (131508b)\nother: Fix travis config (d2c1d08)\nother: Make scripts executable and let the shebang do its work (b2435af)\n\n\n0.2.3 (2018-12-25)\nBug Fixes\n\ncore: Move schematics-utilities to normal dependencies (971cae4)\n\n\n0.2.2 (2018-12-25)\nBug Fixes\n\nother: Fix path to collections file (90a61bb)\n\n\n0.2.1 (2018-12-25)\nBug Fixes\n\nother: Fix schematics build script (1cd8dfa)\n\n\n0.2.0 (2018-12-25)\nBug Fixes\n\nother: Move collection file into correct location (4518232)\n\nFeatures\n\nother: Create release script (3ed6e3e)\n\n\n0.1.1 (2018-12-25)\n\n0.1.0 (2018-12-25)\nBug Fixes\n\ncore: Assert that emptyOn isn't used in multi-mode. (718c789)\ncore: Avoid buffering on the queue (9c2a369), closes #23\ncore: Don't export default serializers (51ca66e)\ncore: Export serializers (cc7334f)\ncore: Improve typings (eb588a0)\ncore: Listen only for input events (38a609a)\ncore: Make (de-)serializer only optional in builder functions (d828073)\ncore: Make control properties readonly (7dc56f3)\ncore: Replace direct property access with a public get() method. (70f1e62)\ncore: Require name to be set and validate it (9c8722a)\ncore: serialize, deserialize and compareWith are now mandatory. (2f43d27)\ncore: Throw error if queryParamGroup isn't set (3c2e4b7)\ncore: Update selection of control value accessor (865adaf)\ncore: Use a forRoot method on the module to provide options. (fce4ec2), closes #10\ncore: Use model instead of serialized value for combineWith (0dfd817)\ncore: Wrap (de-)serializers into try-catch. (8ab0449), closes #3\ndocs: Change styling for Github icon a bit (f843d23)\ndocs: Consistently use @ngqp instead of ngqp (93ed9cb)\ndocs: Don't wait for a tick in TestRouterAdapter#navigate (a55ad5c)\ndocs: Ensure that URL is set initially in TestRouterAdapter (4ce6f5c)\ndocs: Remove null values from URL in TestRouterAdapter (e41b19a)\ndocs: Update link to logo in README (43e1ea6)\ndocs: Updated headline description (dba2b08)\ndocs: Use green badge for conventional commits (1e61b69)\ndocs: Use hash routing for now due to GH pages limitations (61cc019)\ndocs: Yet another fix, adding ?sanitize=true. (b19a81e)\ntests: Remove yarn test from Travis for now (ba59419)\n\nFeatures\n\ncore: Added a directive to provide a control value accessor (dc45c9a), closes #28\ncore: Added an abstraction for the router access (226bb25), closes #21\ncore: Added CheckboxControlValueAccessor (19df3e7), closes #14\ncore: Added combineWith option (afeae98), closes #6\ncore: Added debounceTime option for params (da72932), closes #4\ncore: Added emptyOn and compareWith options (0234ebf)\ncore: Added NumberControlValueAccessor (5fcb4cf), closes #14\ncore: Added numericParam, booleanParam and customParam (1d666d5)\ncore: Added patchValue and setValue for QueryParamGroup (128c233), closes #2\ncore: Added RangeControlValueAccessor (08259b8), closes #14\ncore: Added support for multiple params (44a9d69), closes #5\ncore: Added valueChanges to controls and group (164eee1), closes #2 #2 #16\ncore: Allow defining options per group (bb15442), closes #10\ncore: Allow defining replaceUrl globally (7864ffe), closes #10\ncore: Implemented MultiSelectControlValueAccessorDirective (bff5d3f), closes #14 #5\ncore: Provide alias \"stringParam\" for \"param\". (15ce1ee)\ncore: Set replaceUrl: true by default (6148a68), closes #10\ndocs: Added a demo-browser component (f4c3365)\ndocs: Added a first skeleton of a proper bootstrap demo app (f994b25)\ndocs: Added a TestRouterAdapter (1ab4edc), closes #21\ndocs: Added gitter badge (bcac502)\ndocs: Added history and back button to demonstrate replaceUrl (d653c6c)\ndocs: Added link to Github (8dc960c)\ndocs: Deploy ngqp-demo to GH Pages (9cf2a08)\ndocs: Show changes on param group (7fcb598)\nother: Added schematics support (35b0e66)\n\n\n0.0.3 (2018-12-15)\n\n0.0.2 (2018-12-15)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            schematics-utilities : ^1.1.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.2.0\n        \n            @angular/core : ^7.2.0\n        \n            @angular/forms : ^7.2.0\n        \n            @angular/router : ^7.2.0\n        \n            rxjs : ^6.0.0\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBooleanDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createBooleanSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createNumberSerializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringDeserializer   (src/.../serializers.ts)\n                        \n                        \n                            createStringSerializer   (src/.../serializers.ts)\n                        \n                        \n                            isMultiOpts   (src/.../query-param-builder.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/serializers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createBooleanDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBooleanDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type boolean.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBooleanSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBooleanSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type boolean.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNumberDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNumberDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNumberSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNumberSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type number.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStringDeserializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStringDeserializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a deserializer for parameters of type string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to deserialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamDeserializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStringSerializer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStringSerializer(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                    Creates a serializer for parameters of type string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    defaultValue\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Optional default value to return if the value to serialize is undefined or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ParamSerializer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/query-param-builder.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isMultiOpts\n                        \n                        \n                    \n                \n            \n            \n                \nisMultiOpts(opts)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MultiQueryParamOpts\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n    \n        \n    \n\n\nngqp\n\n\n    Declaratively synchronize form controls with the URL\n    \n    Documentation\n\n\nDescription\nngqp makes it easy to synchronize form controls with query parameters in your URL by using a declarative approach. Examples\ninclude pagination information or the current settings of filters in a data view. ngqp is designed to resemble the Forms API\nfrom @angular/forms, making it intuitive to work with.\nQuick Start\nng add @ngqp/core\nRead the Getting Started page for information on how to use it.\nContributing\nSee CONTRIBUTING.md.\nCode of Conduct\nPlease take a moment to read the Code of Conduct.\n\nMIT License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2018 Ingo Bürk\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryParamModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Comparator   (src/.../types.ts)\n                        \n                        \n                            ParamCombinator   (src/.../types.ts)\n                        \n                        \n                            ParamDeserializer   (src/.../types.ts)\n                        \n                        \n                            ParamSerializer   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Comparator\n                \n            \n            \n                \n                    A function which compares two values of the same type to determine\nif they are equal. To support traditional comparator functions, you\ncan also return a number where \"0\" means equality.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamCombinator\n                \n            \n            \n                \n                    Defines a function which describes side effects on other\nURL parameters.\nSee QueryParamOpts.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamDeserializer\n                \n            \n            \n                \n                    A deserializer defines how a URL parameter is converted\ninto the represented form control's value.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamSerializer\n                \n            \n            \n                \n                    A serializer defines how the represented form control's\nvalue is converted into a string to be used in the URL.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DefaultRouterOptions   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            NGQP_ROUTER_OPTIONS   (src/.../router-adapter.interface.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/router-adapter/router-adapter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DefaultRouterOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RouterOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    replaceUrl: true,\n    preserveFragment: true,\n}\n                        \n                    \n\n                \n                    \n                        See RouterOptions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGQP_ROUTER_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGQP_ROUTER_OPTIONS')\n                        \n                    \n\n                \n                    \n                        Injection token to provide RouterOptions. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
